#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : myterminal
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : setup terminal
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

create_link() {
  case "$1" in
  *)
    if [ ! -z "$2" ]; then
      shift 1
      if cmd_exists "$1"; then
        printf_green "Linking $HOME/.local/bin/myterminal to $1"
        __ln_sf "$(command -v $1)" "$HOME/.local/bin/myterminal"
        exit 0
      else
        printf_green "Linking $HOME/.local/bin/myterminal to $TERMINAL"
        __ln_sf "$TERMINAL" "$HOME/.local/bin/myterminal"
        exit 0
      fi
    fi
    ;;
  esac
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#if [ -z "$TERMINAL" ]; then
if [ -f "$(command -v termite 2>/dev/null)" ]; then
  export TERMINAL="termite"
elif [ -f "$(command -v xfce4-terminal 2>/dev/null)" ]; then
  export TERMINAL="xfce4-terminal"
elif [ -f "$(command -v qterminal-terminal 2>/dev/null)" ]; then
  export TERMINAL="qterminal-terminal"
elif [ -f "$(command -v qterminal-terminal 2>/dev/null)" ]; then
  export TERMINAL="qterminal-terminal"
elif [ -f "$(command -v mate-terminal 2>/dev/null)" ]; then
  export TERMINAL="mate-terminal"
elif [ -f "$(command -v i3-sensible-terminal 2>/dev/null)" ]; then
  export TERMINAL="i3-sensible-terminal"
elif [ -f "$(command -v rofi-sensible-terminal 2>/dev/null)" ]; then
  export TERMINAL="rofi-sensible-terminal"
elif [ -f "$(command -v terminology 2>/dev/null)" ]; then
  export TERMINAL="terminology"
elif [ -f "$(command -v xterm 2>/dev/null)" ]; then
  export TERMINAL="xterm"
elif [ -f "$(command -v uxterm 2>/dev/null)" ]; then
  export TERMINAL="uxterm"
elif [ -f "/Applications/iTerm.app/Contents/MacOS/iTerm" ]; then
  export TERMINAL="/Applications/iTerm.app/Contents/MacOS/iTerm"
elif [ -f "/System/Applications/Utilities/Terminal.app/Contents/MacOS/Terminal" ]; then
  export TERMINAL="/System/Applications/Utilities/Terminal.app/Contents/MacOS/Terminal"
fi
#fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ ! -z "$TERMINAL" ] || printf_help "No terminal emulators are installed"
[ "$1" = "--create" ] && create_link "$@"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
notifications "MyTerminal" "Attempting to launch $TERMINAL"

if [ -f "$HOME/.local/bin/myterminal" ]; then
  __devnull2 ~/.local/bin/myterminal "$@"
else
  __devnull2 $TERMINAL "$@"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
