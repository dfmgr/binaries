#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
PATH="$HOME/.local/bin:/usr/local/bin:/usr/bin:/bin"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author        : Jason
# @Contact       : jason@casjaysdev.com
# @File          : myshell
# @Created       : Monday Aug 24, 2020 03:14:35 EDT
# @License       : WTFPL
# @Copyright     : Copyright (c) Casjays Developments
# @Description   : Change the default shell for $USER
# @Other         :
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
systemmgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ -n "$1" ] || __help

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# check for needed applications

__check_app chsh

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# functions

__vars() {
  newshell="$(grep $shell /etc/shells | head -n 1)"
  newshellname="$(basename $newshell)"
}

__list_shells() {
  [ -f "/etc/shells" ] && cat /etc/shells | sed '/^\#/d;/^$/d' | sort -u | printf_readline "3"
}
__success() {
  printf_green "shell has been changed to $newshell"
  printf_custom "3" "You will need to logout for the changes to take effect"
}

__failure() {
  printf_exit "Failed to change the shell to $newshell"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application

case "$1" in
--help)
  shift 1
  __help
  ;;

--list)
  shift 1
  printf_custom "2" "Available shells:"
  __list_shells
  exit
  ;;

*)
  shell="$1"
  case "$(uname -s)" in
  Linux)
    _chsh() { chsh -s "${1:-$newshell}" "${2:-$USER}"; }
    _user_shell() { __getuser_shell "${1:-$newshell}"; }
    ;;
  Darwin)
    _chsh() { chsh -u "${2:-$USER}" -s "${1:-$newshell}"; }
    _user_shell() { __getuser_shell() { true; }; }
    ;;
  *)
    printf_exit "Unsupported OS"
    ;;
  esac
  __vars "$shell"
  if _user_shell "$newshell"; then
    printf_custom "The old and new shell are both $newshellname"
  else
    if [ -f "$newshell" ]; then
      echo -n "$(_chsh "$newshell" "${USER}" | printf_readline "3" | grep -vq "chsh")"
      _user_shell "$newshell" && __success || printf_exit
    else
      printf_red "Invalid shell"
    fi
  fi
  ;;

esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
