#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts
shopt -s extglob
trap '' SIGINT
trap '' SIGQUIT
trap '' SIGTSTP

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103201719-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : music --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 17:19 EDT
# @File          : music
# @Description   : play music
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ ! -t 0 ] && { [ "$1" = "--term" ] || [ $# = 0 ]; }; then
  myterminal -e "$APPNAME $*"
  exit
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
while :; do
  # show menu
  clear
  shift 1
  printf_newline "\n\n\n\n"
  printf_head "Music Menu"
  printf_green "a. launch mpc"
  printf_green "b. launch deadbeef"
  printf_green "c. launch cmus"
  printf_green "d. launch ncmpcpp"
  printf_green "e. launch vlc"
  printf_green "f. launch castero"
  printf_green "g. launch spotifyd"
  printf_green "h. launch pianobar"
  printf_green "i. launch curseradio-improved"
  printf_green "j. launch youtube-viewer"
  printf_green "k. launch tizonia"
  printf_green "l. launch clementine"
  printf_green "m. launch rhythmbox"
  printf_green "n. launch tomahawk"
  printf_green "o. launch amarok"
  printf_green "p. launch qmmp"
  printf_green "q. launch lollyop"
  printf_green "r. launch parole"
  printf_green "y. launch custom application"
  printf_green "z. or escape to Exit"
  printf_green "---------------------------------"
  printf_read_question_nt "6" "Enter your choice [a-z] : " "1" "main" "-s"
  clear
  printf_newline "\n\n\n"

  # take action
  case "$main" in
  a)
    shift 1
    printf_green "Loading mpdclient"
    mpdclient "$@"
    ;;
  b)
    shift 1
    __run_prog_menus deadbeef "$@"
    ;;
  c)
    shift 1
    __run_command cmus "$@"
    ;;
  d)
    shift 1
    __run_command ncmpcpp -h "$MPDSERVER" "$@"
    ;;
  e)
    shift 1
    __open_file_menus vlc "$@"
    ;;
  f)
    shift 1
    __run_command castero "$@"
    ;;
  g)
    shift 1
    __run_prog_menus spotifyd "$@"
    ;;
  h)
    shift 1
    __run_command pianobar "$@"
    ;;
  i)
    shift 1
    __run_command curseradio-improved "$@"
    ;;
  j)
    shift 1
    __run_prog_menus youtube-viewer "$@"
    ;;
  k)
    shift 1
    __run_prog_menus tizonia "$@"
    ;;
  l)
    shift 1
    __run_prog_menus clementine "$@"
    ;;
  m)
    shift 1
    __run_prog_menus rhythmbox "$@"
    ;;
  n)
    shift 1
    __run_prog_menus tomahawk "$@"
    ;;
  o)
    shift 1
    __run_prog_menus amarok "$@"
    ;;
  p)
    shift 1
    __run_prog_menus qmmp "$@"
    ;;
  q)
    shift 1
    __run_prog_menus lollyop "$@"
    ;;
  r)
    shift 1
    __run_prog_menus parole "$@"
    ;;
  y)
    shift 1
    __custom_menus "$@"
    ;;
  $'\E' | $'\e' | z)
    shift 1
    clear
    break
    ;;
  *) shift ;;

  esac
  clear
  printf_newline "\n\n"
  printf_counter "5" "3" "Re-loading menu in"
done
clear

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
