#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="todo"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 020920212058-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : LICENSE.md
# @ReadME        : README.md
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Tuesday, Feb 09, 2021 22:13 EST
# @File          : todo
# @Description   : Setup a console base todo
# @TODO          : Clean up code
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
unset TMUX
tododir="${TODO_DIR:-$HOME/.local/share/editors/todos}"
hour="$(date +"%H:%M")"
month="$(date +"%m")"
year="$(date +"%Y")"
day="$(date +"%d")"
archive="$year/$month/$day.md"
title="Created on: $(date +"%B") $(date +"%d"), $year at $hour"
__mkd $tododir/all
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
tmux_conf() {
  if [ ! -f "$tododir/tmux.conf" ]; then
    cat <<EOF >"$tododir/tmux.conf"
# Very basic tmux config
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour18 fg=colour137 dim'
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour19] %m/%d #[fg=colour233,bg=colour8] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20
setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
setw -g window-status-style 'fg=colour9 bg=colour18'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
set -g message-style 'fg=colour232 bg=colour16 bold'
EOF
  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__filename() {
  cleaninput=${*// /\/}
  name="${cleaninput:-all}"
  file="${name//$tododir/name}index.md"
  filename=${file//tododir/$file}
  printf_debug $filename $name
}
__run_tmux() {
  local name="$name"
  local filename="$filename"
  if [ ! -f "$filename" ]; then
    local title="TODO for $name: $title"
    __mkd "$tododir/$name"
    printf "$title\n\n" >"$filename"
  fi
  printf_debug $tododir/$filename $name
  __tmux "$tododir/$filename"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__tmux() { tmux -f "$tododir/tmux.conf" new-session -D -A -s scratchpad "vim $1" &>/dev/null; }
__run_git() { if [ -d "$tododir/.git" ]; then gitcommit "$tododir" todo; else gitadmin "$tododir" setup; fi; }

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "$1" in

*git)
  shift 1
  __run_git
  ;;

*list | *l)
  shift 1
  if [ "$(__count_files $tododir/*)" -ne 0 ]; then
    __find "$tododir" -iname "*.md" | sed 's#'$tododir/'##g'
  else
    printf_exit "No todos exist in: $tododir"
  fi
  ;;

*archive)
  shift 1
  __filename "$*"
  mv -f "$name" "$tododir/$archive"
  ;;

*open | *o)
  shift 1
  __filename "$*"
  __run_tmux "$filename"
  ;;

*)
  __filename "$*"
  __run_tmux "$filename"
  ;;

esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
