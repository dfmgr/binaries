#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103201732-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : mytorrent --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 17:32 EDT
# @File          : mytorrent
# @Description   : Open torrent client
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MYTORRENT_NOTIFICATIONS="${MYTORRENT_NOTIFICATIONS:-yes}"
MYTERMINAL_NOTIFICATIONS="no"
TORRENT_SERVER="${TORRENT_SERVER:-localhost:9091}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ -f "$HOME/.config/mytorrent/settings" ] && . "$HOME/.config/mytorrent/settings"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__config() {
  printf_green "Generating config file"
  __mkd "$HOME/.config/mytorrent"
  echo -e '# Settings for mytorrent
MYTORRENT="config"
TORRENT="'$TORRENT'"
MYTORRENT_NOTIFICATIONS="'$MYTORRENT_NOTIFICATIONS'"
TORRENT_SERVER="'${TORRENT_SERVER:-localhost}:9091'"
  ' >"$HOME/.config/mytorrent/settings"
  if [ -f "$HOME/.config/mytorrent/settings" ]; then
    printf_green "File saved to: $HOME/.config/mytorrent/settings"
    [ -n "$MYTORRENT_NOTIFICATIONS" ] && notifications "MyTorrent" "Config file saved to:\n$HOME/.config/mytorrent/settings"
  fi
  exit
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__create_link() {
  case "$1" in
  *)
    if [ -n "$2" ]; then
      shift 1
      if cmd_exists "$1"; then
        printf_green "Linking $HOME/.local/bin/mytorrent to $1"
        __ln_sf "$(command -v $1)" "$HOME/.local/bin/mytorrent"
        exit 0
      else
        printf_green "Linking $HOME/.local/bin/mytorrent to $TORRENT"
        __ln_sf "$TORRENT" "$HOME/.local/bin/mytorrent"
        exit 0
      fi
    fi
    ;;
  esac
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__launch() {
  [ "$MYTORRENT_NOTIFICATIONS" = "yes" ] && notifications "MyTorrent" "$NOTIFY_MESSAGE"
  local args="$@"
  if [ -f "$HOME/.local/bin/mytorrent" ]; then
    __exec ~/.local/bin/mytorrent ${args:-}
  else
    __exec $TORRENT ${args:-}
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ "$TORRENT" = "mytorrent" ] && unset TORRENT
if [ "$MYTORRENT" != "config" ]; then
  if [ -f "$(command -v transmission-remote-gtk 2>/dev/null)" ]; then
    export TORRENT="transmission-remote-gtk"
  elif [ -f "$(command -v transmission-remote 2>/dev/null)" ]; then
    export TORRENT="transmission-remote"
  elif [ -f "$(command -v transmission-gtk 2>/dev/null)" ]; then
    export TORRENT="transmission-gtk"
  elif [ -f "$(command -v transmission-qt 2>/dev/null)" ]; then
    export TORRENT="transmission-qt"
  elif [ -f "$(command -v deluge 2>/dev/null)" ]; then
    export TORRENT="deluge"
  elif [ -f "$(command -v vuze 2>/dev/null)" ]; then
    export TORRENT="vuze"
  elif [ -f "$(command -v qbittorrent)" ]; then
    export TORRENT="qbittorrent"
  elif [ -f "$(command -v ktorrent 2>/dev/null)" ]; then
    export TORRENT="ktorrent"
  elif [ -f "$(command -v ctorrent 2>/dev/null)" ]; then
    export TORRENT="ctorrent"
  elif [ -f "$(command -v unworkable 2>/dev/null)" ]; then
    export TORRENT="unworkable"
  elif [ -f "$(command -v rtorrent 2>/dev/null)" ]; then
    export TORRENT="rtorrent"
  elif [ -f "$(command -v bitstormlite 2>/dev/null)" ]; then
    export TORRENT="bitstormlite"
  elif [ -f "/Applications/Transmission.app/Contents/MacOS/Transmission" ]; then
    export TORRENT="/Applications/Transmission.app/Contents/MacOS/Transmission"
  fi
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -z "$TORRENT" ]; then
  [ "$MYTORRENT_NOTIFICATIONS" = "yes" ] && notifications "MyTorrent" "No bittorrent clients are installed"
  printf_exit 1 1 "No bittorrent clients are installed"
fi
TORRENT_NAME="$(basename "$TORRENT" 2>/dev/null)"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $TORRENT_NAME in
transmission-remote*)
  transmission_daemon="$(ps -aux | grep transmission-da | grep -v 'grep ' 2>/dev/null)"
  if [ -z "$transmission_daemon" ]; then
    transmission-daemon &>/dev/null && sleep 5 &&
      [ "$MYTORRENT_NOTIFICATIONS" = "yes" ] && notifications "MyTorrent" "Transmission server has been started"
  fi
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $TORRENT in
transmission-remote)
  NOTIFY_MESSAGE="Attempting to launch $TORRENT"
  TORRENT="myterminal -e 'bash -c transmission-remote;bash'"
  ;;
*)
  [ -n "$NOTIFY_MESSAGE" ] || NOTIFY_MESSAGE="Attempting to launch $TORRENT"
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $1 in
config | *-config)
  shift 1
  __config
  ;;

create | link | *-create | *-link)
  shift 1
  __create_link "$@"
  ;;
*)
  ARGS="$@"
  if [ $# -eq 0 ] && [[ "$TORRENT" =~ transmission ]] && [[ "$TORRENT" != transmission-cli ]]; then
    __launch -m
    exit $?
  elif [[ $ARGS = *.torrent ]] && [[ "$TORRENT" =~ transmission ]]; then
    [ "$MYTORRENT_NOTIFICATIONS" = "yes" ] && notifications "MyTorrent" "Adding $ARGS"
    if cmd_exists transadd; then
      transadd "$ARGS" | grep -q "success" && true
    elif [ -n "$DESKTOP_SESSION" ]; then
      xdg-open "$ARGS"
    else
      "$TORRENT" -a "$ARGS"
    fi
  elif [ $# -ne 0 ]; then
    ps -ax | grep -v "$TORRENT" | grep -vq 'grep ' && __launch "$ARGS" && sleep 10 || $TORRENT "$ARGS"
  else
    __launch "$ARGS"
  fi
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
