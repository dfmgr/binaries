#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103201921-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : systemmgr --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 19:21 EDT
# @File          : systemmgr
# @Description   : System Management script
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
preupdate() {
  if __am_i_online && [ -d "$CASJAYSDEVDIR" ]; then
    sudo git -C $CASJAYSDEVDIR pull -q
    [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ] && . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
app_uninstall() {
  [ -z "$1" ] && APPNAME="$APPNAME" || APPNAME="$1"
  if [ -d "$HOMEDIR" ]; then
    printf_yellow "Removing $APPNAME from $HOMEDIR"
    __devnull sudo rm -Rf "$HOMEDIR" &&
      __devnull sudo rm -Rf "$CASJAYSDEVSAPPDIR/$SCRIPTS_PREFIX/$APPNAME" &&
      __devnull sudo rm -Rf "$CASJAYSDEVSAPPDIR/dotfiles/$SCRIPTS_PREFIX-$APPNAME" &&
      __devnull sudo find $BIN $SHARE $COMPDIR -xtype l -exec rm {} \;
    __getexitcode "$APPNAME has been removed"
  else
    printf_red "$APPNAME doesn't seem to be installed"
    return 1
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "$1" in
help | -*)
  __help
  ;;

list)
  shift 1
  run_install_list "$@"
  ;;

search)
  shift 1
  run_install_search "$@"
  ;;

available)
  shift 1
  run_install_available
  ;;

remove)
  shift 1
  sudoreq true || exit 1
  declare -a LISTARRAY="$*"
  for rmf in ${LISTARRAY[*]}; do
    app_uninstall "$rmf"
    echo ""
  done
  ;;

update)
  sudoreq true || exit 1
  shift 1
  unset APPNAME
  printf_green "Updating the configurations in $SYSCONF"
  if [ $# -ne 0 ]; then
    if [ "$1" = "--all" ]; then shift 1 && declare -a LISTARRAY="$LIST"; else declare -a LISTARRAY="$*"; fi
    for ins in ${LISTARRAY[*]}; do
      run_install_update "$ins"
    done
  elif [[ -d "$USRUPDATEDIR" && -n "$(ls -A $USRUPDATEDIR 2>/dev/null)" ]]; then
    for upd in $(ls $USRUPDATEDIR 2>/dev/null); do
      run_install_update "$upd"
    done
  else
    printf_yellow "There doesn't seem to be any packages installed"
  fi
  exit $?
  ;;

install)
  sudoreq true || exit 1
  shift 1
  unset APPNAME
  if [ $# -eq 0 ]; then
    sudo systemmgr update
  else
    printf_green "Installing configurations to $SYSCONF"
    [ "$1" = "--all" ] && shift 1 && declare -a LISTARRAY="$LIST" || declare -a LISTARRAY="$*"
    for ins in ${LISTARRAY[*]}; do
      run_install_init "$ins"
    done
  fi
  exit $?
  ;;

cron)
  shift 1
  sudoreq true || exit 1
  cron_updater "$*"
  ;;

version)
  shift 1
  run_install_version "$@"
  ;;

*)
  __help
  ;;

esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
