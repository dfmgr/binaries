#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103200613-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : automate --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 06:13 EDT
# @File          : automate
# @Description   : Script to control roku and hue devices
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__requires curl || exit
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
automate() {
  # variables
  local setopts="$1"
  local cache="${TMPDIR:-/tmp}"
  local state="$cache/automate"
  __mkd "$cache"
  touch "$state"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # functions
  getstate() { cat "$state"; }
  roku_play() { roku play; }
  roku_stop() { roku stop; }
  roku_pause() { roku pause; }
  hue_play() { hue play; }
  hue_stop() { hue stop; }
  automate_play() { roku_play && hue_play && echo play >$state; }
  automate_stop() { roku_stop && hue_stop && echo stop >$state; }
  automate_pause() { roku pause && hue toggle && echo pause >$state; }
  automate_toggle() {
    if [ "$(getstate)" = play ]; then
      automate_stop
    elif [ "$(getstate)" = stop ]; then
      automate_play
    elif [ "$(getstate)" = pause ] || [ "$(getstate)" = "toggle" ]; then
      automate_pause
    else
      printf_exit "Can not get state"
    fi
  }

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # main
  if [ ! -s "$state" ]; then echo toggle >$state; fi

  case "$setopts" in
  play)
    shift 1
    automate_play
    ;;
  stop)
    shift 1
    automate_stop
    ;;
  pause)
    shift 1
    automate_pause
    ;;
  toggle)
    shift 1
    automate_toggle && echo toggle >$state
    ;;

  state)
    case "$2" in
    text)
      shift 2
      echo -e "$(getstate)"
      ;;
    json | *)
      shift 2
      echo -e '{"status":"'$(getstate)'"}'
      ;;
    esac
    ;;

  *)
    automate_toggle
    ;;

  esac
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#execute
automate "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
