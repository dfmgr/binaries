#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##Version      : 010820210439-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : mylocation
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : get location info from ip address
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__help() {
  printf_help"
\t\tThis requires a free API key
\t\thttps://ipstack.com/plan and the
\t\tEnviroment variable IPSTACK_ACCESS_TOKEN to
\t\tbe set IE:export IPSTACK_ACCESS_TOKEN=myapikey
"
  exit
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--help" ] && __help
[ "$IPSTACK_ACCESS_TOKEN" = "" ] && __help

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

check_app jq

OUTPUT_FILE=/tmp/server_location.txt
PUBLIC_IP="$(curl -LSs -4 http:/ifconfig.co/ip)"
curl -s http://api.ipstack.com/${PUBLIC_IP}?access_key=$IPSTACK_ACCESS_TOKEN |
  jq '.latitude,.longitude,.city,.region_name,.country_name,.zip' |
  while read -r LATITUDE; do
    read -r LONGITUDE
    read -r CITY
    read -r REGION
    read -r COUNTRY
    read -r ZIP
    echo -e "\n\t\tLAT: ${LATITUDE}\n\t\tLON: ${LONGITUDE}\n\t\tCity: ${CITY}\n\t\tRegion: ${REGION}\n\t\tCountry: ${COUNTRY}\n\t\tZip: ${ZIP}" |
      tr -d \" >${OUTPUT_FILE}
  done

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printf_green "$(cat "${OUTPUT_FILE}")\n"
rm -Rf "${OUTPUT_FILE}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
