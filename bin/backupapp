#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : backupapp
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : backup files and folders
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__help() {
  printf_green "Usage: $APPNAME BackupName Directory"
  return 0
}

if [ $# -ne 2 ]; then printf_red "Not enough arguments given!" && __help; fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# check for needed applications

check_app tar

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application

_run_backup() {
  tar cfzv "$backupdir/$filename" "$myappdir" >>"$logdir/$myappname.log" 2>&1 && printf_green "The Backup has completed successfully\n" || return 1
}

backupapp() {
  local filename count backupdir rmpre4vbackup
  [ ! -z "$2" ] && local myappdir="$@" || local myappdir="$APPDIR"
  [ ! -z "$1" ] && local myappname="$1" && shift 1 || local myappname="$APPNAME"
  local logdir="$HOME/.local/log"
  local curdate="$(date +%Y-%m-%d-%H-%M-%S)"
  local filename="$myappname-$curdate.tar.gz"
  local backupdir="${MY_BACKUP_DIR:-$HOME/.local/backups/apps}"
  local count="$(ls $backupdir/$myappname*.tar.gz 2>/dev/null | wc -l 2>/dev/null)"
  local rmpre4vbackup="$(ls $backupdir/$myappname*.tar.gz 2>/dev/null | head -n 1)"
  mkdir -p "$backupdir" "$logdir"
  if [ -e "$myappdir" ]; then
    echo "#################################" >>"$logdir/$myappname.log" &&
      echo "# Started on $(date +'%A, %B %d, %Y %H:%M:%S')" >>"$logdir/$myappname.log" &&
      echo "# Backing up $myappdir" >>"$logdir/$myappname.log" &&
      echo "#################################" >>"$logdir/$myappname.log" &&
      _run_backup &&
      echo -e "\n#################################\n# Ended on $(date +'%A, %B %d, %Y %H:%M:%S')\n#################################\n\n" >>"$logdir/$myappname.log" ||
      printf_exit "The backup has failed to complete.\n\t\tMore information can be found in the log file:\n\t\t$backupdir/$myappname.log\n"
  fi
  if [ "$count" -gt "3" ]; then rm_rf $rmpre4vbackup; fi
}

backupapp "$@"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
