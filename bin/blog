#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
VERSION="202103271625-git"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103271625-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : blog --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 27, 2021 16:25 EDT
# @File          : blog
# @Description   : Blogging script using github pages
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__gen_config() {
  local BLOG_CONFIG_FILE="${1:-$BLOG_CONFIG_FILE}"
  printf_green "Generating the config file in"
  printf_green "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE"
  [ -d "$BLOG_CONFIG_DIR" ] || mkdir -p "$BLOG_CONFIG_DIR"
  [ -d "$BLOG_CONFIG_BACKUP_DIR" ] || mkdir -p "$BLOG_CONFIG_BACKUP_DIR"
  [ -f "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" ] &&
    cp -Rf "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" "$BLOG_CONFIG_BACKUP_DIR/$BLOG_CONFIG_FILE.$$"
  cat <<EOF >"$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE"
# Settings for blog
BLOG_NAME="$BLOG_NAME"
BLOG_AUTHOR=$USER
BLOG_AUTHOR_EMAIL=$USER@$(hostname -f)
BLOG_BASE_URL=""
BLOG_PAGE_BASE_URL="$BLOG_BASE_URL"
BLOG_POST_BASE_URL="$BLOG_BASE_URL/blog"
BLOG_DEFAULT_EXT="md"
BLOG_GIT_ENABLED="${BLOG_GIT_ENABLED:-yes}"
BLOG_DIR="${BLOG_DIR:-$HOME/.local/share/blogs/default}"
BLOG_TEMPLATE_DIR="$CASJAYSDEVDIR/templates"
BLOG_EDITOR="${EDITOR:-myeditor}"
BLOG_OPTIONS_VIM="${BLOG_OPTIONS_EDITOR:-"-c ':setlocal ft=notes syntax=markdown'"}"
BLOG_PAGE_COUNT=0
BLOG_NOTIFY_ENABLED="yes"
BLOG_NOTIFY_CLIENT_NAME="${NOTIFY_CLIENT_NAME:-$APPNAME}"
BLOG_NOTIFY_CLIENT_ICON="${NOTIFY_CLIENT_ICON:-$BLOG_NOTIFY_CLIENT_ICON}"
GITHUB_ACCESS_TOKEN="\${GITHUB_ACCESS_TOKEN:-none}"

EOF
  if [ -f "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" ]; then
    printf_green "Your config file for blog has been created"
    true
  else
    printf_red "Failed to create the config file"
    false
  fi
}
__git_enabled() {
  if
    [ -f "${BLOG_CONFIG_DIR}/$BLOG_NAME.nogit" ] || [ "$BLOG_GIT_ENABLED" != "yes" ]
  then
    return 1
  else
    GIT_STATUS="ENABLED"
    return 0
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__replace() { sed -i 's|'"$1"'|'"$2"'|g' "$3" 2>/dev/null; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__findcmd() {
  find "${1:-$BLOG_CONFIG_DIR}" -type f ${1} -not -path "*/.git/*" 2>/dev/null | __sed 's|'${1:-$BLOG_CONFIG_DIR}/'||g' | sort -u
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__setup() {
  BLOG_NAME="$(basename "${BLOG_DIR}")"
  __blog_init "$BLOG_DIR" &&
    ln -sf "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" "$BLOG_CONFIG_DIR/$BLOG_NAME.conf" &&
    [ $# -ne 0 ] || exit 0
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__get_count() {
  __remove() { awk -F'=' '{print $2}' | sed '#"##;s#^ ##g' | grep '^' || echo 0; }
  if [ -f "$BLOG_CONFIG_DIR/$BLOG_NAME.cont" ]; then
    count=$(grep -s "$BLOG_CONFIG_DIR/$BLOG_NAME.cont" | __remove)
  elif [ -f "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" ]; then
    count=$(grep -s "$BLOG_PAGE_COUNT" "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" | __remove)
  else
    count=0
  fi
  [[ $count -gt 0 ]] && cont=$((count + 1)) || count=0
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__git_message() {
  if [ "$GIT_STATUS" = "ENABLED" ]; then
    [ -f "$1" ] && message="Modified: ${file/$BLOG_DIR\//}" || message="Added: ${file/$BLOG_DIR\//}"
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__git_init() { [ ! -d "${BLOG_DIR}/.git" ] && [ "$GIT_STATUS" = "ENABLED" ] && gitadmin "${BLOG_DIR}" setup; }
__blog_site() { git -C "$BLOG_DIR" remote -v 2>/dev/null | grep push | head -n 1 | awk '{print $2}' 2>/dev/null | grep '^'; }
__blog_dir() { if [ -d "$BLOG_DIR" ]; then return 0; else return 1; fi; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__blog_publish() {
  [ "$GIT_STATUS" = "ENABLED" ] && gitcommit "$BLOG_DIR" "blog" "$*" ||
    printf_red "Git is disabled for blog: $BLOG_NAME"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__edit() {
  # Possible completion fix
  if [ -f "$1" ]; then
    file="$1"
  elif [ -f "$BLOG_DIR/$1" ]; then
    file="$BLOG_DIR/$1"
  elif [ -f "$HOME/.local/share/blogs/$1" ]; then
    file="$HOME/.local/share/blogs/$1"
  else file="$1"; fi
  printf_yellow "Launching $BLOG_EDITOR"
  eval ${BLOG_EDITOR:-$EDITOR} "$file"
  printf_pause "Press any key when done"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__blog_init() {
  __git_enabled
  local YesNo="" url=""
  local BLOG_DIR="${1:-BLOG_DIR}"
  if [ -f "$BLOG_CONFIG_DIR/$BLOG_NAME.nogit" ] || [ "$BLOG_GIT_ENABLED" != "yes" ]; then return; fi
  if [ ! -d "$BLOG_DIR/.git" ]; then
    printf_read_question "2" "Would you like to keep this in a git repo?" "1" "GIT" "-s"
    if printf_answer_yes "$GIT"; then
      printf_green "Initializing the repo"
      printf_read_question "3" "Do you already have a blog repo you would like to import: [y/N] " "1" "YesNo" "-s"
      if printf_answer_yes "$YesNo"; then
        printf_read_input "3" "Enter the url: " "120" "url" "-e"
        __git_clone "$url" "$BLOG_DIR"
      fi
      __git_init "$BLOG_DIR"
      printf_green "Your new blogging site has been setup" || printf_exit "Failed to initialize $BLOG_DIR"
    else
      printf '%s\n' "Git is disabled for $BLOG_NAME" >"$BLOG_CONFIG_DIR/$BLOG_NAME.nogit"
      BLOG_GIT_ENABLED="no"
    fi
  fi
  __mkd "$BLOG_DIR/_posts" "$BLOG_DIR/_pages"
  "$APPNAME" page index welcome
}
__make_file() {
  file="$1" && shift 1
  dir="$(dirname "${file/$BLOG_DIR/}" | __sed 's|^/||g;s|/$||g;s| |_|g')"
  date="$(date +"$BLOG_DATE_FORMAT")"
  if [ "$MAKE_DATE" = "no" ] || [ "$dir" = "_pages" ]; then
    title="$(basename "${title:-$file}")"
    edit="$(echo "$title" | __sed 's| |_|g').$BLOG_DEFAULT_EXT"
  else
    title="$(basename "${title:-$file}")"
    edit="$(echo "$date-$title" | __sed 's| |_|g').$BLOG_DEFAULT_EXT"
  fi
  file="$BLOG_DIR/$dir/$edit"
  [ -d "$BLOG_DIR/$dir" ] || __mkd "$BLOG_DIR/$dir"
  file="$BLOG_DIR/$dir/$edit"
  linkurl="$edit"
  edit="$edit"
  title="$title"
  dir="$dir"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__blog_post_header() {
  cat "$BLOG_TEMPLATE_DIR/blog/post.$BLOG_DEFAULT_EXT" |
    __sed "s|AuthorName|$BLOG_AUTHOR|g" |
    __sed "s|DATE|$(date +"$BLOG_DATE_FORMAT $BLOG_TIME_FORMAT")|g" |
    __sed "s|TITLE|$title|g" |
    __sed "s|/myurl|$BLOG_POST_BASE_URL/$linkurl|g"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__blog_page_header() {
  cat "$BLOG_TEMPLATE_DIR/blog/page.$BLOG_DEFAULT_EXT" |
    __sed "s|AuthorName|$BLOG_AUTHOR|g" |
    __sed "s|DATE|$(date +"$BLOG_DATE_FORMAT $BLOG_TIME_FORMAT")|g" |
    __sed "s|TITLE|$title|g" |
    __sed "s|/myurl|$BLOG_PAGE_BASE_URL/$linkurl|g" |
    __sed "s|weight:.*|weight: $count|g" |
    __sed "s|BLOG_PAGE_COUNT=.*|BLOG_PAGE_COUNT=$count|g"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__newpost_template() {
  if __blog_dir; then
    __make_file "_posts/$1"
    __git_message "$file"
    __blog_post_header >"$file"
    __edit "$file"
  else
    printf_red "There is no blog directory"
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__newpage_template() {
  MAKE_DATE="no"
  __make_file "_pages/$1"
  title="$2"
  __git_message "$file"
  __get_count
  if [ ! -f "$file" ]; then
    __blog_page_header >"$file"
  fi
  __edit "$file"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__copy_templates() {
  if [ -d "$BLOG_CONFIG_DIR/files/.git" ]; then
    printf_green "Updating the template files"
    git -C "$BLOG_CONFIG_DIR/files" pull -q
  elif [ -d "${CASJAYSDEVDIR}/templates/blog" ]; then
    printf_green "Copying the template files"
    mkdir -p "$BLOG_CONFIG_DIR/files"
    printf_yellow "from: $CASJAYSDEVDIR/templates/blog"
    printf_yellow "to: $BLOG_CONFIG_DIR/files"
    __cp_rf "$CASJAYSDEVDIR/templates/blog/." "$BLOG_CONFIG_DIR/files/"
    if [ "$(__count_files $BLOG_CONFIG_DIR/files)" -ne 0 ]; then
      printf_green "Copying has succeeded"
    else
      printf_error "Copying of files has failed"
    fi
  else
    printf_error "Can not get template files"
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Defaults
exitCode=""
BLOG_NAME="${BLOG_NAME:-default}"
BLOG_AUTHOR="${BLOG_AUTHOR:-$USER}"
BLOG_AUTHOR_EMAIL="${BLOG_AUTHOR_EMAIL:-$USER@$(hostname -f)}"
BLOG_CONFIG_FILE="settings.conf"
BLOG_CONFIG_DIR="$HOME/.config/myscripts/blog"
BLOG_CONFIG_BACKUP_DIR="$HOME/.local/share/myscripts/blog/backups"
BLOG_OPTIONS_DIR="$HOME/.local/share/myscripts/blog/options"
BLOG_DIR="${BLOG_DIR:-$HOME/.local/share/blogs/default}"
BLOG_TEMPLATE_DIR="${BLOG_TEMPLATE_DIR:-$CASJAYSDEVDIR/templates}"
BLOG_EDITOR="${EDITOR:-myeditor}"
BLOG_OPTIONS_EDITOR="${BLOG_OPTIONS_EDITOR:-"-c ':setlocal ft=notes syntax=markdown'"}"
BLOG_DATE_FORMAT="%Y-%m-%d"
BLOG_TIME_FORMAT="%H:%M"
BLOG_NOTIFY_ENABLED="yes"
BLOG_NOTIFY_CLIENT_NAME="${NOTIFY_CLIENT_NAME:-$APPNAME}"
BLOG_NOTIFY_CLIENT_ICON="${NOTIFY_CLIENT_ICON:-$BLOG_NOTIFY_CLIENT_ICON}"
GITHUB_ACCESS_TOKEN="${GITHUB_ACCESS_TOKEN:-none}"
OLD_BLOG_CONFIG_FILE="${OLD_BLOG_CONFIG_FILE:-$BLOG_CONFIG_FILE}"
DEFAULT_BLOG_NAME="default"
BLOG_DEFAULT_EXT="${BLOG_DEFAULT_EXT:-md}"
BLOG_BASE_URL="${BLOG_BASE_URL}"
BLOG_PAGE_BASE_URL="${BLOG_BASE_URL}"
BLOG_POST_BASE_URL="${BLOG_BASE_URL}/blog"
BLOG_PAGE_COUNT=""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set additional variables/Argument/Option settings
SETARGS="$*"
SHORTOPTS="c,v,h,f:"
LONGOPTS="options,config,version,help,file:"
ARRAY="config copy new edit page post"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Generate Files
[ -f "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" ] || __gen_config &>/dev/null
[ -f "$BLOG_OPTIONS_DIR/options" ] || __list_options "$BLOG_OPTIONS_DIR" &>/dev/null
[ -f "$BLOG_OPTIONS_DIR/array" ] || __list_array "$BLOG_OPTIONS_DIR" "$ARRAY" &>/dev/null
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import config
if [ -f "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" ]; then
  . "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# options
setopts=$(getopt -o "$SHORTOPTS" --long "$LONGOPTS" -a -n "$APPNAME" -- "$@" 2>/dev/null)
eval set -- "${setopts[@]}" 2>/dev/null
while :; do
  case $1 in
  --options)
    shift 1
    __list_array "$BLOG_OPTIONS_DIR" "$ARRAY"
    __list_options "$BLOG_OPTIONS_DIR"
    exit $?
    ;;
  -v | --version)
    shift 1
    __version
    exit $?
    ;;
  -h | --help)
    shift 1
    __help
    exit $?
    ;;
  -c | --config)
    shift 1
    SETOPT=config
    OLD_BLOG_CONFIG_FILE="${OLD_BLOG_CONFIG_FILE:-$BLOG_CONFIG_FILE}"
    ;;
  -f | --file)
    shift 1
    OLD_BLOG_CONFIG_FILE="$BLOG_CONFIG_FILE"
    BLOG_CONFIG_FILE="$1"
    BLOG_NAME="$(basename "$BLOG_CONFIG_FILE")"
    shift 1
    ;;
  --)
    shift 1
    break
    ;;
  esac
done
#set -- "$SETARGS"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Actions based on env
export NOTIFY_CLIENT_NAME="${BLOG_NOTIFY_CLIENT_NAME}"
export NOTIFY_CLIENT_ICON="${BLOG_NOTIFY_CLIENT_ICON}"
if [ "$BLOG_NOTIFY_ENABLED" = "yes" ]; then
  __notifications() {
    notifications "$*" || return 1
  }
else
  __notifications() { false; }
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check for required applications/Network check
cmd_exists --error bash || exit 1
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# APP Variables
if [ -f "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE" ]; then unset BLOG_DIR . "$BLOG_CONFIG_DIR/$BLOG_CONFIG_FILE"; fi
[ -n "$BLOG_DIR" ] || printf_exit 1 1 "Failed to load $BLOG_CONFIG_FILE"
[ -d "$BLOG_DIR" ] || __setup "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# begin main app
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "${SETOPT:-$1}" in
config)
  shift 1
  if [ "$BLOG_CONFIG_FILE" != "$OLD_BLOG_CONFIG_FILE" ]; then
    printf_read_input "4" "Where would you like to store your blog files" "120" "BLOG_DIR" "-e -i $HOME/.local/share/blogs/$BLOG_NAME"
  fi
  BLOG_NAME="$(basename "${BLOG_DIR}")"
  __blog_init "$BLOG_DIR"
  __gen_config "$BLOG_NAME.conf"
  exit $?
  ;;

copy)
  shift 1
  __copy_templates
  exit
  ;;

new)
  shift 1
  __make_file "$1"
  if [ "$dir" = "$BLOG_DIR" ] || [ "$dir" = "." ]; then
    file="$BLOG_DIR/_posts/$edit"
    [ -d "$BLOG_DIR/_posts" ] || __mkd "$BLOG_DIR/_posts"
  else
    file="$file"
    [ -d "$dir" ] || __mkd "$dir"
  fi
  __git_message "$file"
  __blog_post_header >"$file"
  __edit "$file"
  __blog_init "$BLOG_DIR"
  ;;

edit)
  shift 1
  __git_message "$file"
  __edit "$1"
  ;;

page)
  shift 1
  __newpage_template "${1:-index}" "${2:-Welcome to your new site}"
  ;;

post)
  shift 1
  [ -z "${1}" ] && printf_red "Please enter a title" && exit 1
  __newpost_template "$1"
  ;;

*)
  shift 1
  __help
  ;;
esac
set --
__blog_publish "$message"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# lets exit with code
exit ${exitCode:-$?}
