#!/usr/bin/env bash
GEN_SCRIPTS_REPLACE_FILENAME_main() {
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  PROG="$(basename "$0")"
  VERSION="GEN_SCRIPTS_REPLACE_VERSION"
  USER="${SUDO_USER:-${USER}}"
  HOME="${USER_HOME:-${HOME}}"
  SRC_DIR="${BASH_SOURCE%/*}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  #set opts
  trap '[ -f "$GEN_SCRIPTS_REPLACE_ENV_TMP_FILE" ] && rm -Rf "$GEN_SCRIPTS_REPLACE_ENV_TMP_FILE" &>/dev/null' EXIT

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  ##@Version       : GEN_SCRIPTS_REPLACE_VERSION
  # @Author        : GEN_SCRIPTS_REPLACE_AUTHOR
  # @Contact       : GEN_SCRIPTS_REPLACE_EMAIL
  # @License       : GEN_SCRIPTS_REPLACE_LICENSE
  # @ReadME        : GEN_SCRIPTS_REPLACE_FILENAME --help
  # @Copyright     : GEN_SCRIPTS_REPLACE_COPYRIGHT
  # @Created       : GEN_SCRIPTS_REPLACE_DATE
  # @File          : GEN_SCRIPTS_REPLACE_FILENAME
  # @Description   : GEN_SCRIPTS_REPLACE_DESC
  # @TODO          : GEN_SCRIPTS_REPLACE_TODO
  # @Other         : GEN_SCRIPTS_REPLACE_OTHER
  # @Resource      : GEN_SCRIPTS_REPLACE_RES
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Main function file
  if [ -f "$SRC_DIR/functions.bash" ]; then
    FUNCTIONS_DIR="$SRC_DIR"
    . "$FUNCTIONS_DIR/functions.bash"
  elif [ -f "$HOME/.local/bin/functions.bash" ]; then
    FUNCTIONS_DIR="$HOME/.local/bin"
    . "$FUNCTIONS_DIR/functions.bash"
  else
    printf "\t\t\033[0;31m%s \033[0m\n" "Couldn't source the functions file from $FUNCTIONS_DIR"
    return 1
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # helper functions - See github.com/dfmgr/misc/bin/functions.bash
  __version() { app_version; }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __help() {
    app_help "4" "Usage: GEN_SCRIPTS_REPLACE_FILENAME  " \
      "-c, --config           -  create config file" \
      "-v, --version          -  display version" \
      "-h, --help             -  display help" \
      "--options              -  used by completions"
    exit $?
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  __gen_config() {
    printf_green "Generating the config file in"
    printf_green "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE"
    [ -d "$GEN_SCRIPTS_REPLACE_CONFIG_DIR" ] || mkdir -p "$GEN_SCRIPTS_REPLACE_CONFIG_DIR"
    [ -d "$GEN_SCRIPTS_REPLACE_ENV_CONFIG_BACKUP_DIR" ] || mkdir -p "$GEN_SCRIPTS_REPLACE_ENV_CONFIG_BACKUP_DIR"
    [ -f "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE" ] &&
      cp -Rf "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE" "$GEN_SCRIPTS_REPLACE_ENV_CONFIG_BACKUP_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE.$$"
    cat <<EOF >"$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE"
# Settings for GEN_SCRIPTS_REPLACE_FILENAME
GEN_SCRIPTS_REPLACE_ENV_NOTIFY_ENABLED="yes"
GEN_SCRIPTS_REPLACE_ENV_NOTIFY_CLIENT_NAME="${NOTIFY_CLIENT_NAME:-$PROG}"
GEN_SCRIPTS_REPLACE_ENV_NOTIFY_CLIENT_ICON="${NOTIFY_CLIENT_ICON:-$GEN_SCRIPTS_REPLACE_ENV_NOTIFY_CLIENT_ICON}"

EOF
    if [ -f "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE" ]; then
      printf_green "Your config file for GEN_SCRIPTS_REPLACE_FILENAME has been created"
      true
    else
      printf_red "Failed to create the config file"
      false
    fi
  }
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Defaults
  local exitCode=""
  local GEN_SCRIPTS_REPLACE_ENV_CONFIG_FILE="settings.conf"
  local GEN_SCRIPTS_REPLACE_ENV_CONFIG_DIR="$HOME/.config/misc/GEN_SCRIPTS_REPLACE_FILENAME"
  local GEN_SCRIPTS_REPLACE_ENV_CONFIG_BACKUP_DIR="$HOME/.local/share/misc/GEN_SCRIPTS_REPLACE_FILENAME/backups"
  local GEN_SCRIPTS_REPLACE_ENV_OPTIONS_DIR="$HOME/.local/share/misc/GEN_SCRIPTS_REPLACE_FILENAME/options"
  local GEN_SCRIPTS_REPLACE_ENV_TEMP_FILE="${TMPDIR:-/tmp}/GEN_SCRIPTS_REPLACE_FILENAME"
  local GEN_SCRIPTS_REPLACE_ENV_NOTIFY_ENABLED="yes"
  local GEN_SCRIPTS_REPLACE_ENV_NOTIFY_CLIENT_NAME="${NOTIFY_CLIENT_NAME:-$PROG}"
  local GEN_SCRIPTS_REPLACE_ENV_NOTIFY_CLIENT_ICON="${NOTIFY_CLIENT_ICON:-$GEN_SCRIPTS_REPLACE_ENV_NOTIFY_CLIENT_ICON}"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Argument/Option settings
  local SETARGS="${*}"
  local SHORTOPTS="c,v,h"
  local LONGOPTS="options,config,version,help"
  local ARRAY=""
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Generate Files
  [ -f "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE" ] || __gen_config &>/dev/null
  [ -f "$GEN_SCRIPTS_REPLACE_OPTIONS_DIR/options" ] || __list_options "$GEN_SCRIPTS_REPLACE_OPTIONS_DIR" &>/dev/null
  [ -f "$GEN_SCRIPTS_REPLACE_OPTIONS_DIR/array" ] || __list_array "$GEN_SCRIPTS_REPLACE_OPTIONS_DIR" "$ARRAY" &>/dev/null
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Import config
  if [ -f "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE" ]; then
    . "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE"
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # options
  local setopts=$(getopt -o "$SHORTOPTS" --long "$LONGOPTS" -a -n "$PROG" -- "$@" 2>/dev/null)
  eval set -- "${setopts[@]}" 2>/dev/null
  while :; do
    case $1 in
    --options)
      shift 1
      __list_array "$GEN_SCRIPTS_REPLACE_OPTIONS_DIR" "$ARRAY"
      __list_options "$GEN_SCRIPTS_REPLACE_OPTIONS_DIR"
      exit $?
      ;;
    -v | --version)
      shift 1
      __version
      exit $?
      ;;
    -h | --help)
      shift 1
      __help
      exit $?
      ;;
    -c | --config)
      shift 1
      __gen_config
      exit $?
      ;;
    --)
      shift 1
      break
      ;;
      #*) break ;;
    esac
  done
  #set -- "$SETARGS"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Actions based on env
  export NOTIFY_CLIENT_NAME="${GEN_SCRIPTS_REPLACE_ENV_NOTIFY_CLIENT_NAME}"
  export NOTIFY_CLIENT_ICON="${GEN_SCRIPTS_REPLACE_ENV_NOTIFY_CLIENT_ICON}"
  if [ "$GEN_SCRIPTS_REPLACE_ENV_NOTIFY_ENABLED" = "yes" ]; then
    __notifications() {
      notifications "$*" || return 1
    }
  else
    __notifications() { false; }
  fi
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # Check for required applications/Network check
  cmd_exists --error bash || exit 1
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # APP Variables

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # begin main app
  printf_green "Version:$VERSION DIR=$GEN_SCRIPTS_REPLACE_CONFIG_DIR"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # lets exit with code
  return ${exitCode:-$?}
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# execute function
GEN_SCRIPTS_REPLACE_FILENAME_main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# lets exit with code
exit ${exitCode:-$?}
