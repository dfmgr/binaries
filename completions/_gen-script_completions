#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 020520211122-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : gen-script --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Friday, Feb 05, 2021 11:22 EST
# @File          : gen-script
# @Description   : autocomplete for gen-script
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ ! -f "$HOME/.local/share/gen-script/opts.txt" ]; then
  mkdir -p "$HOME/.config/gen-script" &>/dev/null
  mkdir -p "$HOME/.local/share/gen-script" &>/dev/null
  gen-script -a -create &>/dev/null
fi
_gen-script() {
  local cur prev words cword
  local CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
  if [ -d "$HOME/.config/gen-script/files" ]; then
    local GEN_SCRIPTS_TEMPLATE_DIR="$HOME/.config/gen-script/files"
  else
    local GEN_SCRIPTS_TEMPLATE_DIR="$CASJAYSDEVDIR/templates/scripts"
  fi
  mkdir -p "$HOME/.config/gen-script"
  local CONFDIR="$HOME/.config/gen-script"
  local OPTSDIR="$HOME/.local/share/gen-script"
  local SEARCHCMD="$(find -L $CONFDIR -maxdepth 3 -type f | sed 's#'$CONFDIR/'##g' | grep '^' || return 1)"
  local cur="${COMP_WORDS[$COMP_CWORD]}"
  local prev="${COMP_WORDS[$COMP_CWORD - 1]}"
  local FOLDERS="$(ls -A $GEN_SCRIPTS_TEMPLATE_DIR/ | grep -v ^'templates')"
  local OS=$(ls -A $GEN_SCRIPTS_TEMPLATE_DIR/os/ 2>/dev/null)
  local SHELL=$(ls -A $GEN_SCRIPTS_TEMPLATE_DIR/shell/ 2>/dev/null)
  local BASH=$(ls -A $GEN_SCRIPTS_TEMPLATE_DIR/bash/ 2>/dev/null)
  local OTHER=$(ls -A $GEN_SCRIPTS_TEMPLATE_DIR/other/ 2>/dev/null)
  local INSTALLERS=$(ls -A $GEN_SCRIPTS_TEMPLATE_DIR/installers/ 2>/dev/null)
  local ALL="$(find $GEN_SCRIPTS_TEMPLATE_DIR -type f | sed 's#'$GEN_SCRIPTS_TEMPLATE_DIR/'##g' 2>/dev/null)"
  local ARRAY="all ${FOLDERS}"
  local SHOW_COMP_OPTS=""
  local SHORTOPTS="$(<"$OPTSDIR/opts-short.txt")"
  local LONGOPTS="$(<"$OPTSDIR/opts.txt")"
  local HEADEROPTS="$(<"$OPTSDIR/opts-header.txt")"
  local ARGS="${SHORTOPTS} ${LONGOPTS}"

  _init_completion || return

  if [ "$SHOW_COMP_OPTS" != "" ]; then
    local SHOW_COMP_OPTS_SEP="$(echo "$SHOW_COMP_OPTS" | tr ',' ' ')"
    compopt -o '${SHOW_COMP_OPTS_SEP}'
  fi
  if [[ "${cur}" == --* ]]; then
    COMPREPLY=($(compgen -W '${HEADEROPTS}' -- ${cur}))
  elif [[ "${cur}" == -* ]]; then
    COMPREPLY=($(compgen -W '${ARGS}' -- ${cur}))
  elif [[ ${#COMP_WORDS[@]} -eq 3 ]] && [[ ${COMP_WORDS[1]} = -header ]]; then
    COMPREPLY=($(compgen -c -- "$cur"))
  elif [[ ${#COMP_WORDS[@]} -gt 4 ]] && [[ ${COMP_WORDS[1]} = -header ]]; then
    COMPREPLY=($(compgen -W '${HEADEROPTS}' -- "$(echo '')" "${cur}"))
  elif [[ ${#COMP_WORDS[@]} -eq 5 ]] || [[ ${#COMP_WORDS[@]} -eq 4 ]] && [[ ${COMP_WORDS[1]} = -readme ]]; then
    _filedir
  else
    if [[ "${prev}" = all ]]; then
      COMPREPLY=($(compgen -W '${ALL}' -- "${cur}"))
      return
    elif [[ "${prev}" = installers ]]; then
      COMPREPLY=($(compgen -W '${INSTALLERS}' -- "${cur}"))
      return
    elif [[ "${prev}" = bash ]]; then
      COMPREPLY=($(compgen -W '${BASH}' -- "${cur}"))
      return
    elif [[ "${prev}" = shell ]]; then
      COMPREPLY=($(compgen -W '${SHELL}' -- "${cur}"))
      return
    elif [[ "${prev}" = os ]]; then
      COMPREPLY=($(compgen -W '${OS}' -- "${cur}"))
      return
    elif [[ "${prev}" = other ]]; then
      COMPREPLY=($(compgen -W '${OTHER}' -- "${cur}"))
      return
    elif [[ "${prev}" = -readme ]]; then
      COMPREPLY=($(compgen -W '${OTHER}' -- "${cur}"))
    elif [[ "${prev}" = -header ]]; then
      COMPREPLY=($(compgen -W '${HEADEROPTS}' -- "${cur}"))
    else
      if [ "$ARRAY" = "show-commands" ]; then
        COMPREPLY=($(compgen -c -- "${cur}"))
      elif [ "$ARRAY" = "show-none" ]; then
        COMPREPLY=($(compgen -W '' -- "${cur}"))
      elif [ "$ARRAY" = "show-_filedir" ]; then
        _filedir
      elif [ "$ARRAY" != "" ]; then
        COMPREPLY=($(compgen -W '${ARRAY}' -- "${cur}"))
      elif [ -n "$OPTS" ]; then
        COMPREPLY=($(compgen -W '${OPTS}' -- "${cur}"))
      else
        COMPREPLY=($(compgen -W '${ARRAY}' -- "${cur}"))
      fi
    fi
  fi
  return
} &&
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # enable completions
  complete -F _gen-script gen-script
