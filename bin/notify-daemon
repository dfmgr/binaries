#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 020220211240-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : notify-daemon --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Tuesday, Feb 02, 2021 12:40 EST
# @File          : notify-daemon
# @Description   : Start the notification daemon
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
NOTIFYD_HOST="${NOTIFYD_HOST}"
NOTIFYD_PORT="${NOTIFYD_PORT:-65001}"

[ -f "$HOME/.config/notify-daemon/settings" ] && . "$HOME/.config/notify-daemon/settings"

__config() {
  if [ ! -f "$HOME/.config/notify-daemon/settings" ]; then
    printf_green "Generating the config file"
    __rm_rf "$HOME/.config/notify-daemon"
    __mkd "$HOME/.config/notify-daemon"
    echo NOTIFYD_PORT="${NOTIFYD_PORT:-65001}" >"$HOME/.config/notify-daemon/settings"
    echo NOTIFYD_HOST="${NOTIFYD_HOST}" >>"$HOME/.config/notify-daemon/settings"
  fi
}

netcat="$(command -v nc 2>/dev/null || command -v netcat 2>/dev/null || return 1)"
__netcat_test() { __cmd_exists $netcat || notifications "Daemon" "The program netcat is not installed"; }

__running() {
  notifications "Daemon" "$1 is currently the notify daemon"
  pidof "$1" >/dev/null 2>&1
}

__kill() {
  notifications "Daemon" "Stopping the daemon"
  pid="$(pidof "$1")"
  kill -9 "$pid" &>/dev/null
}
__start() {
  sleep 1 && "$@" &>/dev/null 2>&1 || return 1 &
  [ $? = 0 ] && notifications "Daemon" "$1 has been started as the notify daemon" || return 1
}

__restart() {
  __kill "$1"
  __start "$1"
}

__client() {
  local _SERVER="$NOTIFYD_HOST"
  local _TMP="${TMPDIR:-/tmp}"
  local _PORT="65001"
  local _PATH="$(mktemp $TMP/notify-clientXXX.tmp)"
  local _LOG="$_PATH.log"
  __netcat_test
  printf_green "Attempting to send message to $_SERVER on $_PORT"
  printf "%s\n" "$*" >"${_PATH}" 2>>$_LOG
  cat "$_PATH" 2>>$_LOG | __nc_send "$_SERVER" "$_PORT" 2>>$_LOG || return 1
  rm -Rf "$_PATH"
  return "$?"
}

__server() {
  __clean_return() {
    __rm_rf "$_PATH" "$_LOG"
    return "$1"
  }
  __mkd "$TMP/notify-daemon"
  local _TMP="${TMPDIR:-/tmp}"
  local _PORT="65001"
  local _PATH="$TMP/notify-daemon/server"
  local _LOG="$_PATH.log"
  local _KILL="$TMP/notify-daemon.kill"
  __netcat_test
  netstatg "$_PORT" &>/dev/null && printf_exit "Already Running" || printf_green "Launching server on port $_PORT"
  notifications "Daemon" "Starting notify-daemon server on port $_PORT"
  rm -Rf "$_KILL"
  while :; do
    cmdsPID=$!
    echo "$cmdsPID" >>"$_LOG"
    $netcat -l -p "$_PORT" >"$_PATH"
    message="$(<$_PATH)"
    notifications "$(echo $message | awk '{print $1}')" "$message"
    __rm_rf "$_PATH"
    if [ -f "$_KILL" ]; then
      kill -s HUP "$(pidof nc 2>/dev/null)" &>/dev/null
      __rm_rf "$_KILL" "$_LOG"
      notifications "Daemon" "notify-daemon server is shutting down"
      break
    fi
  done
  rm -Rf "$_PATH"
}

__startup() {
  printf_green "Adding the Notification Daemon to startup"
  cat <<EOF >"$HOME/.config/autostart/notifyd.desktop"
#!/usr/bin/env xdg-open

[Desktop Entry]
Encoding=UTF-8
Version=0.9.4
Type=Application
Name=Notification Daemon
Icon=preferences-desktop-notification
Comment=Start notifyd
Exec=notify-daemon
RunHook=0
StartupNotify=false
Terminal=false
Hidden=false

EOF
  [ -f "$HOME/.config/autostart/notifyd.desktop" ] &&
    printf_green "Successfully installed Notification Daemon" ||
    printf_error "Failed to install Notification Daemon"
  exit $?
}

__server_disable() {
  __rm_rf "$HOME/.config/autostart/notifyd-server.desktop"
  touch "$TMP/notify-daemon.kill"
  __client "Daemon" "Disabling server"
}

__server_enable() {
  printf_green "Enabling the Notification Daemon Server on port $NOTIFYD_PORT"
  cat <<EOF >"$HOME/.config/autostart/notifyd-server.desktop"
#!/usr/bin/env xdg-open

[Desktop Entry]
Version=1.1
Type=Application
Name=Notification Server
GenericName=NotificationServer
Comment=Start Notification Daemon Server.
Icon=preferences-desktop-notification
Exec=notify-daemon --server &
Path=~
Terminal=false
Actions=
Categories=System;GTK;X-XFCE;GNOME;
Keywords=xfce4-notify;notify;music;player;my;
StartupNotify=true
EOF
  notify-daemon --server &
  exit
}

__xfce4_notifyd() {
  if [ -f /usr/lib/xfce4/notifyd/xfce4-notifyd ]; then
    notifyd="/usr/lib/xfce4/notifyd/xfce4-notifyd"
    return 0
  elif [ -f /usr/lib/x86_64-linux-gnu/xfce4/notifyd/xfce4-notifyd ]; then
    notifyd="/usr/lib/x86_64-linux-gnu/xfce4/notifyd/xfce4-notifyd"
    return 0
  else
    return 1
  fi
}

__dunst_notifyd() {
  if __cmd_exists dunst; then
    notifyd="dunst"
    return 0
  else
    return 1
  fi
}

__deadd_notifyd() {
  if __cmd_exists deadd-notification-center; then
    notifyd="deadd-notification-center"
    return 0
  else
    return 1
  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__xfce4_notifyd || __dunst_notifyd || __deadd_notifyd

case "$1" in
config)
  shift 1
  __config
  ;;

enable)
  shift 1
  __startup
  ;;

disable)
  printf_green "Disabling the notify daemon"
  __rm_rf "$HOME/.config/autostart/notifyd.desktop" &&
    __kill "$notifyd" &&
    printf_green "Successfully Disabled the notify daemon" ||
    printf_error "Failed to disable notify daemon"
  return $?
  ;;
restart)
  shift 1
  __restart "$notifyd"
  ;;

stop)
  shift 1
  __kill "$notifyd"
  ;;

status)
  shift 1
  __running "$notifyd"
  ;;

start)
  shift 1
  __running "$notifyd" || __start "$notifyd"
  ;;

*server)
  shift 1
  [ "$1" = --enable ] && __server_enable
  [ "$1" = --disable ] && __server_disable
  __server
  ;;

*client)
  if [ -z "$NOTIFYD_HOST" ]; then
    notifications "Daemon" "Please set NOTIFYD_HOST variable to your server"
    exit 1
  fi
  if [ ${#} -eq 0 ]; then
    if [ -p "/dev/stdin" ]; then
      message="$(cat </dev/stdin)"
    fi
  else
    message="$*"
  fi
  __client "$message" 2>/dev/null || notifications "Daemon" "failed to send to $NOTIFYD_HOST"
  ;;

*)
  __running "$notifyd" || __start "$notifyd"
  ;;
esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End
