#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103200637-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : dmenumount --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 06:37 EDT
# @File          : dmenumount
# @Description   : Show and mount devices in dmenu
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Gives a dmenu prompt to mount unmounted drives and Android phones. If
# they're in /etc/fstab, they'll be mounted automatically. Otherwise, you'll
# be prompted to give a mountpoint from already existsing directories. If you
# input a novel directory, it will prompt you to create that directory.
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
getmount() {
  [ -z "$chosen" ] && exit 1
  mp="$(find $1 2>/dev/null | dmenu -i -p "Type in mount point.")"
  [ "$mp" = "" ] && exit 1
  if [ ! -d "$mp" ]; then
    mkdiryn=$(printf "No\\nYes" | dmenu -i -p "$mp does not exist. Create it?")
    [ "$mkdiryn" = "Yes" ] && (mkdir -p "$mp" || sudo -A mkdir -p "$mp")
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
mountusb() {
  chosen="$(echo "$usbdrives" | dmenu -i -p "Mount which drive?" | awk '{print $1}')"
  sudo -A mount "$chosen" 2>/dev/null && notifications "ðŸ’» USB mounting" "$chosen mounted." && exit 0
  alreadymounted=$(lsblk -nrpo "name,type,mountpoint" | awk '$2=="part"&&$3!~/\/boot|\/home$|SWAP/&&length($3)>1{printf "-not \\( -path *%s -prune \\) \\ \n",$3}')
  getmount "/mnt /media /mount /home -maxdepth 5 -type d $alreadymounted"
  partitiontype="$(lsblk -no "fstype" "$chosen")"
  case "$partitiontype" in
  "vfat") sudo -A mount -t vfat "$chosen" "$mp" -o rw,umask=0000 ;;
  *)
    sudo -A mount "$chosen" "$mp"
    user="$(whoami)"
    ug="$(groups | awk '{print $1}')"
    sudo -A chown "$user":"$ug" "$mp"
    ;;
  esac
  notifications "ðŸ’» USB mounting" "$chosen mounted to $mp."
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
mountandroid() {
  chosen=$(echo "$anddrives" | dmenu -i -p "Which Android device?" | cut -d : -f 1)
  getmount "$HOME -maxdepth 3 -type d"
  simple-mtpfs --device "$chosen" "$mp"
  echo "OK" | dmenu -i -p "Tap Allow on your phone if it asks for permission and then press enter"
  simple-mtpfs --device "$chosen" "$mp"
  notifications "ðŸ¤– Android Mounting" "Android device mounted to $mp."
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
asktype() {
  case $(printf "USB\\nAndroid" | dmenu -i -p "Mount a USB drive or Android device?") in
  USB) mountusb ;;
  Android) mountandroid ;;
  esac
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
anddrives=$(simple-mtpfs -l 2>/dev/null)
usbdrives="$(lsblk -rpo "name,type,size,mountpoint" | awk '$2=="part"&&$4==""{printf "%s (%s)\n",$1,$3}')"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -z "$usbdrives" ]; then
  [ -z "$anddrives" ] && echo "No USB drive or Android device detected" && exit
  echo "Android device(s) detected."
  mountandroid
else
  if [ -z "$anddrives" ]; then
    echo "USB drive(s) detected."
    mountusb
  else
    echo "Mountable USB drive(s) and Android device(s) detected."
    asktype
  fi
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
