#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts
shopt -s extglob
trap '' SIGINT
trap '' SIGQUIT
trap '' SIGTSTP

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103202028-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : videos --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 20:28 EDT
# @File          : videos
# @Description   : play videos
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
xine-ui() { xine || xine-ui; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -z "$DISPLAY" ]; then printf_exit "No display server found.......exiting $(sleep 2)"; fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
while :; do
  # show menu
  clear
  shift 1
  printf_newline "\n\n\n\n"
  printf_head "Video applications Menu"
  printf_green "a. launch vlc"
  printf_green "b. launch mpv"
  printf_green "c. launch mplayer"
  printf_green "d. launch smtube"
  printf_green "e. launch smplayer"
  printf_green "f. launch xine-ui"
  printf_green "g. launch banshee"
  printf_green "h. launch bomi"
  printf_green "i. launch dragonplayer"
  printf_green "j. launch snappy"
  printf_green "k. launch celluloid"
  printf_green "l. launch parole"
  printf_green "m. launch xmbc"
  printf_green "n. launch kodi"
  printf_green "o. launch totem"
  printf_green "p. launch miro"
  printf_green "q. launch asciinema"
  printf_green "y. launch custom application"
  printf_green "z. or escape to Exit"
  printf_green "---------------------------------"
  printf_read_question "6" "Enter your choice [a-z] : " "1" "main" "-s"
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  case "$main" in

  a)
    shift 1
    __open_file_menus vlc "$@"
    ;;
  b)
    shift 1
    __open_file_menus mpv "$@"
    ;;
  c)
    shift 1
    __open_file_menus mplayer "$@"
    ;;
  d)
    shift 1
    __open_file_menus smtube "$@"
    ;;
  e)
    shift 1
    __open_file_menus smplayer "$@"
    ;;
  f)
    shift 1
    __open_file_menus xine-ui "$@"
    ;;
  g)
    shift 1
    __open_file_menus banshee "$@"
    ;;
  h)
    shift 1
    __open_file_menus bomi "$@"
    ;;
  i)
    shift 1
    __open_file_menus dragonplayer "$@"
    ;;
  j)
    shift 1
    __open_file_menus snappy "$@"
    ;;
  k)
    shift 1
    __open_file_menus celluloid "$@"
    ;;
  l)
    shift 1
    __open_file_menus parole "$@"
    ;;
  m)
    shift 1
    __open_file_menus xmbc "$@"
    ;;
  n)
    shift 1
    __open_file_menus kodi "$@"
    ;;
  o)
    shift 1
    __open_file_menus totem "$@"
    ;;
  p)
    shift 1
    __open_file_menus miro "$@"
    ;;
  q)
    shift 1
    __open_file_menus asciinema play "$@"
    ;;
  y)
    shift 1
    __custom_menus
    continue
    ;;
  $'\E' | z)
    clear
    break
    ;;
  *) shift ;;
  esac
  clear
  printf_newline "\n\n"
  printf_counter "5" "3" "Re-loading menu in"
done
clear
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
