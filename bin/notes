#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##Version      : 010820210439-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : notes
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : take notes using bash
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__help() {
  printf_green "Usage: "
  printf_green "notes something you want to jot down |   appends that text to the file"
  printf_green "xclip -o | notes                     |   appends your clipboard to the file"
  printf_green "notes                                |   opens the file in your editor $EDITOR"
  exit
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"
[ "$1" = "--help" ] && __help

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# note taking using bash

OLDPWD="$($PWD)"
NOTES_DIRECTORY="${NOTES_DIRECTORY:-"$HOME/.local/share/notes"}"
NOTES_EDITOR="${EDITOR}"
NOTES_FILE="$(date +%Y-%m).txt"
NOTES_PATH="${NOTES_DIRECTORY}/${NOTES_FILE}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ ! -d "${NOTES_DIRECTORY}" ]; then
  while true; do
    printf_green "The notes directory does not exist, do you want to create it?"
    read -r yn
    case "${yn}" in
    [Yy]*)
      mkdir -p "${NOTES_DIRECTORY}"
      break
      ;;
    [Nn]*) exit ;;
    *) echo "Please answer y or n" ;;
    esac
  done
fi

if [ ${#} -eq 0 ]; then
  if [ -p "/dev/stdin" ]; then
    (
      cat
      printf "\n\n"
    ) >>"${NOTES_PATH}"
  else
    eval "${NOTES_EDITOR}" "${NOTES_PATH}"
  fi
else
  printf "%s\n\n" "${*}" >>"${NOTES_PATH}"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

OLDPWD="$PWD"
if [ ! -d "$NOTES_DIRECTORY/.git" ] && [ ! -f "$NOTES_DIRECTORY/.nogit" ]; then
  printf_question "Should keep track of this via git"
  read -r -n 1 -s create && echo
  if [[ $create == "y" || $create == "Y" ]]; then
    OLDPWD="$PWD"
    cd "$NOTES_DIRECTORY" || exit 1
    gitadmin setup
  else
    touch "$NOTES_DIRECTORY/.nogit"
  fi
fi

if [ ! -d "$NOTES_DIRECTORY/.git" ]; then
  if [ ! -f "$NOTES_DIRECTORY/.nogit" ] && [ "$(git status --porcelain | wc -l)" -ne "0" ]; then
    printf_question "Should I commit your changes"
    read -r -n 1 -s commit && echo
    if [[ $commit == "y" || $commit == "Y" ]]; then
      gitcommit -m " ðŸ““ðŸ““ Modified my notes ðŸ““ðŸ““ "
    fi
  fi
fi

cd "$OLDPWD" || exit 1
exit $?

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
