#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103201728-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : myip --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 17:28 EDT
# @File          : myip
# @Description   : Show IP address
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if cmd_exists ifconfig; then
  __getlipaddr
  myip-local4() { sudo ifconfig $NETDEV | grep -E "venet|inet" | grep -Ev "docker|127.0.0." | grep 'inet' | grep -v inet6 | awk '{print $2}' | sed 's#addr:##g' | head -n1; }
  myip-local6() { sudo ifconfig $NETDEV | grep -E "venet|inet" | grep -v "docker" | grep 'inet6' | grep -i global | awk '{print $2}' | head -n1; }
  myip-public4() { timeout 1 curl -I4qs ifconfig.co/ip 2>/dev/null | head -1 | grep 404 >/dev/null && if [ $? == 0 ]; then curl --config /dev/null -4qs ifconfig.co/ip 2>/dev/null; fi; }
  myip-public6() { timeout 1 curl -I6qs ifconfig.co/ip 2>/dev/null | head -1 | grep 404 >/dev/null && if [ $? == 0 ]; then curl --config /dev/null -6qs ifconfig.co/ip 2>/dev/null; fi; }
  myip4() { echo -e "$(myip-local4 2>/dev/null)" && echo -e "$(myip-public4 2>/dev/null)"; }
  myip6() { echo -e "$(myip-local6 2>/dev/null)" && echo -e "$(myip-public6 2>/dev/null)"; }
  export CURRIP4="$(myip-local4)"
  export CURRIP6="$(myip-local6)"
  export CURRIP4WAN="$(myip-public4)"
  export CURRIP6WAN="$(myip-public6)"
else
  printf_red "The command ifconfig was not found"
  printf_red "try re-running this script with sudo or try installing"
  printf_red "ifconfig can be installed with pkmgr install net-tools"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $1 in
help)
  __help
  ;;
local)
  case $2 in
  4)
    myip-local4
    ;;
  6)
    myip-local6
    ;;
  *)
    myip-local4
    myip-local6
    ;;
  esac
  ;;
public)
  case $2 in
  4)
    myip-public4
    ;;
  6)
    myip-public6
    ;;
  *)
    myip-public4
    myip-public6
    ;;
  esac
  ;;
4)
  myip-local4
  myip-public4
  ;;
6)
  myip-local6
  myip-public6
  ;;
*)
  [ -z "$CURRIP4" ] || echo $CURRIP4
  [ -z "$CURRIP6" ] || echo $CURRIP6
  [ -z "$CURRIP4WAN" ] || echo $CURRIP4WAN
  [ -z "$CURRIP6WAN" ] || echo $CURRIP6WAN
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
