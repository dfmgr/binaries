#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : clean-system
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : remove old logs
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
systemmgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printf_red "Cleaning old logs"
if [ "$1" = "" ]; then
  __requiresudo rm -f /etc/cron.*/*logrotate*
  __requiresudo logrotate -f /etc/logrotate.conf
  __requiresudo rm -Rf /var/log/bandwidth
  __requiresudo rm -Rf /var/log/*.{0,1,2,3,4,5,6,7,8,9}
  __requiresudo rm -Rf /var/log/*/*.{0,1,2,3,4,5,6,7,8,9}
  __requiresudo rm -Rf /var/log/*/*/*.{0,1,2,3,4,5,6,7,8,9}
  __requiresudo rm -Rf /var/log/*.gz
  __requiresudo rm -Rf /var/log/*/*.gz
  __requiresudo rm -Rf /var/log/*/*/*.gz
  __requiresudo rm -Rf /var/log/*.old
  __requiresudo rm -Rf /var/log/*/*.old
  __requiresudo rm -Rf /var/log/*/*/*.old
  __requiresudo rm -Rf /home/*/.local/tmp/*
  __requiresudo rm -Rf /home/*/.local/log/*

  if [ -f "$HOME/.config/logrotate/config" ]; then
    __requiresudo logrotate -f "$HOME/.config/logrotate/config"
  fi
else
  __requiresudo rm -fv /etc/cron.*/*logrotate*
  __requiresudo logrotate -fv /etc/logrotate.conf
  __requiresudo rm -Rfv /var/log/bandwidth
  __requiresudo rm -Rfv /var/log/*.{0,1,2,3,4,5,6,7,8,9}
  __requiresudo rm -Rfv /var/log/*/*.{0,1,2,3,4,5,6,7,8,9}
  __requiresudo rm -Rfv /var/log/*/*/*.{0,1,2,3,4,5,6,7,8,9}
  __requiresudo rm -Rfv /var/log/*.gz
  __requiresudo rm -Rfv /var/log/*/*.gz
  __requiresudo rm -Rfv /var/log/*/*/*.gz
  __requiresudo rm -Rfv /var/log/*.old
  __requiresudo rm -Rfv /var/log/*/*.old
  __requiresudo rm -Rfv /var/log/*/*/*.old
  __requiresudo rm -Rfv /home/*/.local/tmp/*
  __requiresudo rm -Rfv /home/*/.local/log/*
  if [ -f "$HOME/.config/logrotate/config" ]; then
    logrotate -fv "$HOME/.config/logrotate/config"
  fi
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
