#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : notes
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : take notes using bash
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
systemmgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

NOTES_DIRECTORY="${NOTES_DIRECTORY:-"$HOME/.local/share/editors/notes"}"
NOTE_FOLDER="$(date +%Y)"
NOTES_FILE="$(date +%m).txt"
NOTES_PATH="${NOTES_DIRECTORY}/$NOTE_FOLDER/${NOTES_FILE}"
NOTES_EDITOR="${NOTES_EDITOR:-vim}"
NOTES_SERVER="${NOTES_SERVER:-localhost}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
mkdir -p ${NOTES_DIRECTORY}/$NOTE_FOLDER
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ ! -f "$NOTES_DIRECTORY/tmux.conf" ]; then
  cat <<EOF >"$NOTES_DIRECTORY/tmux.conf"
# Very basic tmux config
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour18 fg=colour137 dim'
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour19] %m/%d #[fg=colour233,bg=colour8] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20
setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
setw -g window-status-style 'fg=colour9 bg=colour18'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
set -g message-style 'fg=colour232 bg=colour16 bold'
EOF
fi

__notes() {
  if [ ${#} -eq 0 ]; then
    if [ -p "/dev/stdin" ]; then
      (
        cat
        printf "\n"
      ) >>"${NOTES_PATH}"
    else
      eval tmux -f "${NOTES_DIRECTORY}/tmux.conf" new-session -D -A -s notes "vim ${NOTES_PATH}" &>/dev/null
    fi
  else
    printf "%s\n" "${*}" >>"${NOTES_PATH}"
  fi
}

__server() {
  kill $(pidof netcat) &>/dev/null
  printf_green "Launching server on port 65000"
  echo "Starting notes server on port 65000" >/tmp/notes_server.log
  rm -Rf /tmp/kill_notes
  while true; do
    if [ -f /tmp/kill_notes ]; then rm -Rf /tmp/kill_notes && echo shutdown >>/tmp/notes_server.log && break; fi
    netcat -l -p 65000 >>"$NOTES_PATH" 2>>/tmp/notes_server.log
    echo "Message sent" >>/tmp/notes_server.log
  done
}

__client() {
  local _SERVER="$NOTES_SERVER"
  local _PATH=$(mktemp /tmp/notes.XXXXXX.txt)
  local _NOTES_PATH="$NOTES_PATH.loc"
  printf_green "Attempting to send message to $_SERVER"
  printf "%s\n" "${@}" >"${_PATH}"
  cat $_PATH 2>/dev/null | netcat $_SERVER 65000 -c 2>/dev/null
  cat $_PATH 2>/dev/null >>${_NOTES_PATH}
  if [ "$(cat $_NOTES_PATH | wc -c)" = "$(cat $NOTES_PATH | wc -c)" ]; then
    cat $_NOTES_PATH 2>/dev/null >>${NOTES_PATH} &>/dev/null
  fi
  rm -Rf "$_PATH"
  return "$?"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

case "$1" in
  -)
   shift 1
   printf "%s\n" "$(< /dev/stdin)" >>"${NOTES_PATH}"
  ;;
server)
  shift 1
  [ "$1" = "--help" ] && printf_help 'Usage: notes server  |  Start the server'
  if [ "$1" = "--kill" ]; then touch /tmp/kill_notes && printf_help "Starting shutdown"; fi
  __server "$@" 2>/tmp/notes_server.log &
  ;;

client)
  shift 1
  [ "$1" = "--help" ] && printf_help 'Usage: notes client "my message"  |  Send your notes to the server'
  [ -n "$NOTES_SERVER" ] || printf_help "Please set NOTES_SERVER variable to your server"
  __client "$@" 2>/dev/null
  ;;

open)
  shift 1
  __notes "$@" 2>/dev/null
  ;;

*)
  if pidof netcat; then
    __client "$@" 2>/dev/null
  else
    __notes "$@"
  fi
  ;;

esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
