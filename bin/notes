#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : notes
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : take notes using bash
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
systemmgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

NOTES_FOLDER="$(date +%Y)"
NOTES_FILE="$(date +%m).txt"
NOTES_DIRECTORY="${NOTES_DIRECTORY:-"$HOME/.local/share/editors/notes"}"
NOTES_PATH="${NOTES_DIRECTORY}/$NOTES_FOLDER/${NOTES_FILE}"
NOTES_EDITOR="${NOTES_EDITOR:-vim}"
NOTES_SERVER_NAME="${NOTES_SERVER_NAME:-localhost}"
NOTES_SERVER_PORT="${NOTES_SERVER_PORT:-65000}"
NOTES_SERVER_DIRECTORY="/var/lib/notes_server"
netcat="$(command -v netcat || command -v nc)"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
mkdir -p "${NOTES_DIRECTORY}/$NOTES_FOLDER"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ ! -f "$NOTES_DIRECTORY/tmux.conf" ]; then
  cat <<EOF >"$NOTES_DIRECTORY/tmux.conf"
# Very basic tmux config
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'
set -g pane-border-style 'fg=colour19 bg=colour0'
set -g pane-active-border-style 'bg=colour0 fg=colour9'
set -g status-position bottom
set -g status-justify left
set -g status-style 'bg=colour18 fg=colour137 dim'
set -g status-left ''
set -g status-right '#[fg=colour233,bg=colour19] %m/%d #[fg=colour233,bg=colour8] %H:%M:%S '
set -g status-right-length 50
set -g status-left-length 20
setw -g window-status-current-style 'fg=colour1 bg=colour19 bold'
setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
setw -g window-status-style 'fg=colour9 bg=colour18'
setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '
setw -g window-status-bell-style 'fg=colour255 bg=colour1 bold'
set -g message-style 'fg=colour232 bg=colour16 bold'
EOF
fi

systemd_service() {
  cat <<EOF | sudo tee /etc/systemd/system/notes_server.service &>/dev/null
[Unit]
Description=Notes Server
After=network.target

[Service]
Type=simple
Environment=TERM=linux
Environment=NOTES_DIRECTORY=$NOTES_SERVER_DIRECTORY
Environment=NOTES_SERVER_NAME=$(hostname)
Environment=NOTES_SERVER_PORT=65000
Restart=always
RestartSec=5
ExecStartPre=/bin/mkdir -p $NOTES_DIRECTORY
ExecStart=/bin/bash -c '/usr/local/bin/notes server run'
ExecStop=/bin/kill -s STOP $MAILPID
ExecReload=/bin/kill -HUP $MAILPID
TimeoutSec=20
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
EOF
}

__netcat_test() { __cmd_exists $netcat || printf_exit "The program netcat is not installed"; }

__notes() {
  eval tmux -f "${NOTES_DIRECTORY}/tmux.conf" new-session -D -A -s notes "vim ${NOTES_PATH}" &>/dev/null
}

__server() {
  local _PORT=${NOTES_SERVER_PORT}
  local _PATH=/tmp/notes.XXXXXX.txt
  __netcat_test
  netstatg "$_PORT" &>/dev/null && printf_exit "Already Running"
  printf_green "Launching server on port $_PORT"
  echo "Starting notes server on port $_PORT" >/tmp/notes_server.log
  rm -Rf /tmp/kill_notes
  while :; do
    $netcat -l -p $_PORT >"$_PATH"
    cat $_PATH >>"${NOTES_PATH}" 2>>/tmp/notes_server.log || break
    notifications "New note" "$(cat $_PATH)\nPosted to: ${NOTES_PATH}"
    if [ -f /tmp/kill_notes ]; then
      rm -Rf /tmp/kill_notes
      echo "Notes server is shutting down" >>/tmp/notes_server.log
      break
    fi
  done
  rm -Rf "$_PATH"
}

__client() {
  local _SERVER="${NOTES_SERVER_NAME}"
  local _PORT=${NOTES_SERVER_PORT}
  local _PATH="$(mktemp /tmp/notes.XXXXXX.txt)"
  __netcat_test
  printf_green "Attempting to send message to $_SERVER on $_PORT"
  printf "%s\n" "$*" >"${_PATH}" 2>>/tmp/notes_client
  cat $_PATH 2>>/tmp/notes_client | $netcat -w 1 $_SERVER $_PORT 2>>/tmp/notes_client || printf_red "failed to send massage"
  cat $_PATH >>${_NOTES_PATH} 2>>/tmp/notes_client
  rm -Rf "$_PATH"
  return "$?"
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

case "$1" in
server)
  shift 1
  if [ "$1" = "--help" ]; then shift 1 && printf_help 'Usage: notes server  |  Start the server'; fi
  if [ "$1" = "--status" ]; then shift 1 && netstatg $_PORT >/dev/null 2>&1; fi
  if [ "$1" = "--kill" ]; then
    shift 1 && touch /tmp/kill_notes >/dev/null 2>&1
    printf_exit "Starting shutdown"
  fi

  case "$1" in
  install)
    shift 1
    NOTES_DIRECTORY="$NOTES_SERVER_DIRECTORY"
    systemd_service
    __system_service_exists notes_server && sudo systemctl enable -f notes_server
    ;;
  remove)
    shift 1
    __system_service_exists notes_server && sudo systemctl disable -f notes_server
    __rm_rf /etc/systemd/system/notes_server.service
    ;;
  start)
    shift 1
    __system_service_exists notes_server && sudo systemctl start notes_server
    ;;
  stop)
    shift 1
    __system_service_exists notes_server && sudo systemctl stop notes_server
    ;;
  restart)
    shift 1
    __system_service_exists notes_server && sudo systemctl restart notes_server
    ;;
  status)
    shift 1
    __system_service_exists notes_server && sudo systemctl status notes_server
    ;;
  run)
    shift 1
    opts="$*"
    __server "$opts" 2>>/tmp/notes_server.log &
    ;;
  *)
    printf_exit "Server is running" || printf_exit "Server is stopped"
    opts="$*"
    __server "$opts" 2>>/tmp/notes_server.log &
    ;;
  esac
  ;;

client)
  shift 1
  [ "$1" = "--help" ] && printf_help 'Usage: notes client "my message"  |  Send your notes to the server'
  [ -n "$NOTES_SERVER_NAME" ] || printf_help "Please set NOTES_SERVER_NAME variable to your server"
  if [ ${#} -eq 0 ]; then
    if [ -p "/dev/stdin" ]; then
      message="$(printf "%s" "$(cat -)")"
    fi
  else
    message="$*"
  fi
  __client "$message" 2>/dev/null
  ;;

open)
  shift 1
  __notes "$@" 2>/dev/null
  ;;

-)
  shift 1
  printf "%s\n" "$(</dev/stdin)" >>"${NOTES_PATH}"
  ;;

all)
  shift 1
  cat ${NOTES_DIRECTORY}/all.txt
  ;;

*)
  if [ ${#} -eq 0 ]; then
    if [ -p "/dev/stdin" ]; then
      (
        cat -
      ) >>"${NOTES_PATH}"
    else
      __notes
    fi
  else
    printf "%s\n" "${*}" >>"${NOTES_PATH}"
  fi
  cat ${NOTES_PATH} >${NOTES_DIRECTORY}/all.txt 2>/dev/null

  ;;

esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
