#!/usr/bin/env bash

APPNAME="gen-script"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 020120210023-git
# @Author        : Jason
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @Copyright     : Copyright (c) 2021, Casjays Developments
# @Created       : Monday Feb 01, 2021 00:23:58 EST
# @File          : gen-script
# @Description   : create scripts
# @TODO          :
# @Other         :
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/casjay-dotfiles/scripts/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-$CASJAYSDEVDIR/functions}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
elif [ -f "$HOME/.local/share/CasjaysDev/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$HOME/.local/share/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
else
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/$SCRIPTSFUNCTFILE"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# I'm sure there is a better way to do this
if [ -d "$1" ]; then
  MYCURRDIR="$1"
  shift 1
elif [ "$1" = "-d" ] || [ "$1" = "-dir" ] || [ "$1" = "--dir" ]; then
  MYCURRDIR="$2"
  shift 2
  [ -d "$MYCURRDIR" ] || printf_exit "$MYCURRDIR doesn't seem to be a directory"
else
  MYCURRDIR="$PWD"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# defaults variables
topdir="$(__git_top_dir "$MYCURRDIR" || echo $MYCURRDIR)"
GEN_SCRIPTS_YEAR="$(date +%Y)"
GEN_SCRIPTS_EMAIL="${USER}"
GEN_SCRIPTS_AUTHOR="${USER}"
GEN_SCRIPTS_COMPANY="${USER}"
GEN_SCRIPTS_VERSION="%m%d%Y%H%M-git"
GEN_SCRIPTS_DEFREADME="README"
GEN_SCRIPTS_DEFLICENSE="WTFPL"
GEN_SCRIPTS_DATEFMT="%A, %b %d, %Y %H:%M %Z"
GEN_SCRIPTS_COPYRIGHT="Copyright: (c) $GEN_SCRIPTS_YEAR $GEN_SCRIPTS_AUTHOR, $GEN_SCRIPTS_COMPANY"

if [ -d "$HOME/.config/gen-script/files" ]; then
  GEN_SCRIPTS_TEMPLATE_DIR="$HOME/.config/gen-script/files"
else
  GEN_SCRIPTS_TEMPLATE_DIR="${GEN_SCRIPTS_TEMPLATE_DIR:-$CASJAYSDEVDIR/templates/scripts}"
fi
[ -f "$HOME/.config/gen-script/settings" ] && . "$HOME/.config/gen-script/settings"
[ -f "$topdir/README.md" ] && GEN_SCRIPTS_DEFREADME="$GEN_SCRIPTS_DEFREADME.md" || GEN_SCRIPTS_DEFREADME="$APPNAME --help"
[ -f "$topdir/LICENSE.md" ] && GEN_SCRIPTS_DEFLICENSE="$GEN_SCRIPTS_DEFLICENSE.md" || GEN_SCRIPTS_DEFLICENSE="$GEN_SCRIPTS_DEFLICENSE"
[ -f "$topdir/version.txt" ] && GEN_SCRIPTS_VERSION="$(cat $topdir/version.txt)" || GEN_SCRIPTS_VERSION="$GEN_SCRIPTS_VERSION"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Application functions
__date() { date +"$1"; }
__filename() { basename "$1"; }

__config() {
  printf_green "Generating the config and saving it to:"
  printf_cyan "$HOME/.config/gen-script/settings"
  __rm_rf "$HOME/.config/gen-script/settings"
  cat <<EOF >>"$HOME/.config/gen-script/settings"
GEN_SCRIPTS_EMAIL="${GEN_SCRIPTS_EMAIL}"
GEN_SCRIPTS_AUTHOR="${GEN_SCRIPTS_AUTHOR}"
GEN_SCRIPTS_COMPANY="${GEN_SCRIPTS_COMPANY}"
GEN_SCRIPTS_VERSION="%m%d%Y%H%M-git"
GEN_SCRIPTS_DEFREADME="README"
GEN_SCRIPTS_DEFLICENSE="WTFPL"
GEN_SCRIPTS_DATEFMT="%A, %b %d, %Y %H:%M %Z"
GEN_SCRIPTS_TEMPLATE_DIR="${GEN_SCRIPTS_TEMPLATE_DIR}"
GEN_SCRIPTS_COPYRIGHT="Copyright: (c) $GEN_SCRIPTS_YEAR $GEN_SCRIPTS_AUTHOR, $GEN_SCRIPTS_COMPANY"

EOF
  [ $? = 0 ] && printf_green "Settings have been saved" || printf_error "Failed to save the settings"
}

__copy_templates() {
  printf_green "Copying the files from:"
  printf_green "$CASJAYSDEVDIR/templates/scripts to $HOME/.config/gen-script/files/"
  __cp_rf "$CASJAYSDEVDIR/templates/scripts/." "$HOME/.config/gen-script/files/"
  [ $? -eq 0 ] && [ -d "$HOME/.config/gen-script/files" ] && printf_green "Copy succeeded" || printf_red "Copy failed"
}

__makefile() {
  printf_green "Copying the file ${1//$GEN_SCRIPTS_TEMPLATE_DIR\//} to $2"
  local temp="$1"
  local new="$2"
  __cp_rf "$temp" "$new" &&
    __edit_header "$new" &&
    chmod -f 755 "$new"
  [ $? -ne 0 ] && printf_red "Failed to create $new" && return 1 || printf_green "You file has been created"
  return $?
}

__edit_header() {
  printf_green "Editing the header info"
  local new="$1"
  sed -i 's#Copyright (c) REPLACE_YEAR.*#'"${GEN_SCRIPTS_COPYRIGHT}"'#g' "$new"
  sed -i 's#REPLACE_VERSION#'"$(__date "${GEN_SCRIPTS_VERSION}")"'#g' "$new" 2>/dev/null
  sed -i 's#REPLACE_FILENAME#'"$(__filename "$new")"'#g' "$new" 2>/dev/null
  sed -i 's#REPLACE_VERSION#'"$(__date "${GEN_SCRIPTS_VERSION}")"'#g' "$new" 2>/dev/null
  sed -i 's#REPLACE_DATE#'"$(__date "${GEN_SCRIPTS_DATEFMT}")"'#g' "$new" 2>/dev/null
  sed -i 's#REPLACE_LICENSE#'"${GEN_SCRIPTS_DEFLICENSE}"'#g' "$new" 2>/dev/null
  sed -i 's#REPLACE_AUTHOR#'"${GEN_SCRIPTS_AUTHOR}"'#g' "$new" #2>/dev/null
  sed -i 's#REPLACE_EMAIL#'"${GEN_SCRIPTS_EMAIL}"'#g' "$new" 2>/dev/null
  sed -i 's#REPLACE_YEAR#'"${GEN_SCRIPTS_YEAR}"'#g' "$new" 2>/dev/null
  return $?
}

__gen_header_help() {
  printf_blue "1: Description"
  printf_blue "2: TODO"
  printf_blue "3: Copyright"
  printf_blue "4: Other"
  printf_blue "5: Resources"
  printf_blue 'IE: gen-script header file "My Descr" "My Copy" "My TODO" "OTHER" "RESOURCE"'
  exit 0
}
__gen_header() {
  local new="$1"
  if [ -f "$topdir/README.md" ]; then local GEN_SCRIPTS_DEFREADME="README.md"; else local GEN_SCRIPTS_DEFREADME="$1 --help"; fi
  [ -n "$new" ] || printf_exit "Needs a file name | This is required but it can be any name"
  printf_green "New header info for $new"
  [ "$1" = "--help" ] || [ "$2" = "--help" ] && __gen_header_help
  [ -n "$2" ] && local desc="$2" || printf_yellow "Description: ${desc:-None provided}"
  [ -n "$3" ] && local todo="$3" || printf_yellow "TODO: ${todo:-None provided}"
  [ -n "$4" ] && local copy="$4"
  [ -n "$5" ] && local other="$5"
  [ -n "$6" ] && local res="$6"

  echo '
#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME='$(__filename ${new:-sample})'
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"'
  cat <<EOF | tee

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : $(__date "${GEN_SCRIPTS_VERSION}")
# @Author        : ${GEN_SCRIPTS_AUTHOR}
# @Contact       : ${GEN_SCRIPTS_EMAIL}
# @License       : ${GEN_SCRIPTS_DEFLICENSE}
# @ReadME        : ${GEN_SCRIPTS_DEFREADME}
# @Copyright     : ${GEN_SCRIPTS_COPYRIGHT}
# @Created       : $(__date "${GEN_SCRIPTS_DATEFMT}")
# @File          : $(__filename ${new:-sample})
# @Description   : ${desc:-}
# @TODO          : ${todo:-}
# @Other         : ${other:-}
# @Resource      : ${res:-}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


EOF
  printf_blue "Your header is ready for use\n\n"
}

[ -f "$HOME/.config/gen-script" ] && __rm_rf "$HOME/.config/gen-script" || __mkd "$HOME/.config/gen-script"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application
case "$1" in
config)
  shift 1
  __config
  exit
  ;;

header)
  shift 1
  __gen_header "$@"
  exit
  ;;

installers)
  case "$2" in
  *)
    if [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/installers/$2" ]; then
      template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/$2"
      dest="$3"
    fi
    ;;
  esac
  shift
  ;;

os)
  case "$2" in
  *) ## Allows drop in without need to update this
    if [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/os/$2" ]; then
      template="${GEN_SCRIPTS_TEMPLATE_DIR}/os/$2"
      dest="$3"
    fi
    ;;
  esac
  shift
  ;;

shell)
  case "$2" in
  *) ## Allows drop in without need to update this
    if [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/shell/$2" ]; then
      template="${GEN_SCRIPTS_TEMPLATE_DIR}/shell/$2"
      dest="$3"
    fi
    ;;
  esac
  shift
  ;;

*) ## Allows drop in without need to update this
  if [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/$1/$2" ]; then
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/$2"
    dest="$3"
  elif [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/$1" ]; then
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/$1"
    dest="$2"
  else
    printf_green "Using the default bash template"
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/shell/bash"
    dest="$1"
  fi
  ;;
esac
shift

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Sanity check
[ -f "$template" ] || printf_exit "The template file doesn't exist"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# file and folder setup
filename="$(__basename ${dest:-newScript})"
destfolder="$(__basedir ${MYCURRDIR}/$filename)"
# # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Generate the file
if [ "$filename" = "newScript" ]; then
  printf_read_question "3" "What should we name this ?" "120" "tmpfilename" || tmpfilename="$filename"
  tmpfilename="$tmpfilename"
else
  tmpfilename="$filename"
fi
filename=${tmpfilename// /_}
if [ -f "$destfolder/$filename" ]; then
  printf_read_question "3" "Should we overwrite this file?" "1" "YN" "-s"
  printf_answer_yes "$YN" || exit 1
fi
__makefile "${template:?}" "$destfolder/$filename" || printf_exit 1 1
printf_read_question "3" "Should we edit this file?" "1" "YN" "-s"
printf_answer_yes "$YN" && $EDITOR "$destfolder/$filename"
printf_newline ""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
