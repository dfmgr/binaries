#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103210839-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : detectostype --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Sunday, Mar 21, 2021 08:39 EDT
# @File          : detectostype
# @Description   : Script to detect the OS
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#[[ "$" != "$" ]] || { echo This script is meant to be sourced; exit; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#Get and set OS
OS="$(uname)"
case $OS in
'Linux') OS='Linux' ;;
'FreeBSD') OS='FreeBSD' ;;
'WindowsNT') OS='Windows' ;;
'Darwin') OS='Mac' ;;
'SunOS') OS='Solaris' ;;
'AIX') OS=AIX ;;
*) [ -n "$OS" ] && OS="$OS" || OS="Unknown" ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#Set OS Detection
arch=$(uname -m)
kernel=$(uname -r)
if [ -n "$(command -v lsb_release)" ]; then
  distroname=$(lsb_release -s -d)
elif [ -f "/etc/os-release" ]; then
  distroname=$(grep PRETTY_NAME /etc/os-release | sed 's/PRETTY_NAME=//g' | tr -d '="')
elif [ -f "/etc/debian_version" ]; then
  distroname="Debian $(cat /etc/debian_version)"
elif [ -f "/etc/redhat-release" ]; then
  distroname=$(cat /etc/redhat-release)
else
  distroname="$(uname -s) $(uname -r)"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#Version
if [ -f "/etc/os-release" ]; then
  DISTRO_VERSION=$(cat /etc/os-release | grep '^VERSION="' | sed 's#VERSION="##g;s#"##g')
elif [ -f "$(command -v lsb_release 2>/dev/null)" ]; then
  DISTRO_VERSION="$(lsb_release -a 2>/dev/null | grep 'Release' | awk '{print $2}')"
elif [ -f "$(command -v lsb-release 2>/dev/null)" ]; then
  DISTRO_VERSION="$(lsb-release -a 2>/dev/null | grep 'Release' | awk '{print $2}')"
elif [ -f "/etc/redhat-release" ]; then
  DISTRO_VERSION=$(cat /etc/redhat-release | awk '{print $4}' | tr '[:upper:]' '[:lower:]' | sed 's#"##g')
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#Various Arch Distros
if [[ "$distroname" =~ "ArcoLinux" ]] || [[ "$distroname" =~ "Arch" ]] || [[ "$distroname" =~ "BlackArch" ]]; then
  DISTRO=Arch
  DISTRO_VERSION="$(cat /etc/os-release | grep '^BUILD_ID' | sed 's#BUILD_ID=##g')"
#Raspberry pi
elif [[ "$distroname" =~ "Raspbian" ]]; then
  DISTRO=Raspbian
  CODENAME=$(lsb_release -a 2>/dev/null | grep Code | sed 's#Codename:##g' | awk '{print $1}')
#Various RedHat Distros
elif [[ "$distroname" =~ "Scientific" ]] || [[ "$distroname" =~ "RedHat" ]] || [[ "$distroname" =~ "CentOS" ]] || [[ "$distroname" =~ "Casjay" ]]; then
  DISTRO=RHEL
#Various Debian Distros
elif [[ "$distroname" =~ "Kali" ]] || [[ "$distroname" =~ "Parrot" ]] || [[ "$distroname" =~ "Debian" ]]; then
  DISTRO=Debian
  if [[ "$distroname" =~ "Debian" ]]; then
    CODENAME=$(lsb_release -a 2>/dev/null | grep Code | sed 's#Codename:##g' | awk '{print $1}')
  fi
  if [[ "$distroname" =~ "Kali" ]]; then
    CODENAME=kali
  fi
  if [[ "$distroname" =~ "Parrot" ]]; then
    CODENAME=parrot
  fi
elif [[ "$distroname" =~ "Ubuntu" ]] || [[ "$distroname" =~ "Mint" ]] || [[ "$distroname" =~ "Elementary" ]] || [[ "$distroname" =~ "KDE neon" ]]; then
  DISTRO=Ubuntu
  CODENAME=$(lsb_release -a 2>/dev/null | grep Code | sed 's#Codename:##g' | awk '{print $1}')
elif [[ "$distroname" =~ "Fedora" ]]; then
  DISTRO=Fedora
fi
if [[ "$OS" =~ Mac|Darwin ]]; then
  if [ -f "$(command -v sw_vers 2>/dev/null)" ]; then
    DISTRO="MacOS"
    DISTRO_VERSION="$(sw_vers -productVersion)"
    CODENAME="$(echo N/A)"
  else
    DISTRO_VERSION=""
  fi
fi
if [ -f /etc/os-release ]; then
  DISTROID="$(grep ID_LIKE /etc/os-release | sed 's/^.*=//')"
fi
export DISTRO DISTROID CODENAME OS DISTRO_VERSION
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end

