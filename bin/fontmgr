#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : fontmgr
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : Install system fonts
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
fontmgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if __am_i_online && __cmd_exists jq; then
  API="$(curl -s "https://api.github.com/orgs/fontmgr/repos?per_page=1000" | jq -r '.[] | .name' 2>/dev/null)"
fi

#---------------------------------------------------------------------------------------

removefont() {
  __devnull sudo rm -Rf "$HOMEDIR/$rmf"
  __devnull sudo unlink "$FONTDIR/$rmf"
  __devnull sudo fc-cache -f
}

#---------------------------------------------------------------------------------------

__listfonts() {
  printf_green "All Fonts"
  printf_green "$LIST"
}

#---------------------------------------------------------------------------------------

case "$1" in
help | h | --h*)
  __help
  ;;

makecache)
  generate_font_index "$@"
  ;;

list)
  __listfonts
  ;;

search)
  shift 1
  FONT="$1"
  echo $LIST | tr ' ' '' 2>/dev/null | grep --color=auto -Fi "$FONT" || printf_exit "That font does not exist"
  ;;

list-installed)
  shift 1
  FONT="$1"
  fc-list "$@" | printf_readline || printf_exit "Something went wrong ðŸ˜•"
  ;;

search-installed)
  shift 1
  FONT="$1"
  fc-list | grep -Fi "$FONT" | printf_readline || printf_exit "That font does not exist"
  ;;

remove)
  shift 1
  printf_green "Removing the fonts from $HOMEDIR"
  declare -a LISTARRAY="$*"
  for rmf in ${LISTARRAY[*]}; do
    printf_yellow "Removing $rmf font from your system"
    removefont "$HOMEDIR/$rmf"
    getexitcode "$rmf has been removed"
    echo ""
  done
  ln_rm "$FONTDIR/"
  ;;

update)
  shift 1
  printf_green "Updating fonts in $FONTDIR"
  if [[ -n $* ]]; then
    run_install_update "$@"
  elif [[ -d $USRUPDATEDIR && -n "$(ls -A $USRUPDATEDIR 2>/dev/null)" ]]; then
    for upd in $(ls $USRUPDATEDIR 2>/dev/null); do
      run_install_update "$upd" 2>/dev/null
    done
  fi
  ;;

install)
  shift 1
  printf_green "Installing fonts to $FONTDIR"
  [ "$1" = "--all" ] && declare -a LISTARRAY="$LIST" ||
    declare -a LISTARRAY="$*"
  for ins in ${LISTARRAY[*]}; do
    run_install_init "$ins"
  done
  ;;

updater | cron)
  shift 1
  cron_updater "$*"
  ;;

version)
  shift 1
  [ $# = 0 ] && $APPNAME --version
  ANAME="$1"
  if [ -d "$USRUPDATEDIR" ] && [ -n "$(ls -A $USRUPDATEDIR/$1 2>/dev/null)" ]; then
    file="$(ls -A $USRUPDATEDIR/$1 2>/dev/null)"
    if [ -f "$file" ]; then
      printf_green "Information about $1: \n$(bash -c "$file --version")"
    fi
  elif [ -f "$(command -v $1 2>/dev/null)" ]; then
    printf_green "Information about $1: $(bash -c "$ANAME --version 2>/dev/null")"
  else
    printf_exit "File was not found is it installed?"
  fi
  printf_green "scripts version is $(cat ${SCRIPTSFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}/version.txt)"
  exit
  ;;

*)
  __help
  ;;
esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
