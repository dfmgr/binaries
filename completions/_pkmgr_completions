#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103311033-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : pkmgr --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Wednesday, Mar 31, 2021 10:33 EDT
# @File          : pkmgr
# @Description   : DotFiles ManaGeR
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#[ -f "$HOME/.local/share/myscripts/pkmgr/options/array" ] || pkmgr --options &>/dev/null
_pkmgr() {
  ___findcmd() { find -L "${1:-$CONFDIR/}" -maxdepth ${3:-3} -type ${2:-f} 2>/dev/null | sed 's#'${1:-$CONFDIR}'##g' | grep '^' || return 1; }
  local cur prev words cword opts split
  local cur="${COMP_WORDS[$COMP_CWORD]}"
  local prev="${COMP_WORDS[$COMP_CWORD - 1]}"
  local CONFFILE="settings.conf"
  local CONFDIR="$HOME/.config/myscripts/pkmgr"
  local OPTSDIR="$HOME/.local/share/myscripts/pkmgr/options"
  local SEARCHDIR="${CONFDIR:-$HOME/.config/myscripts/pkmgr}"
  #local SEARCHCMD="$(___findcmd "$SEARCHDIR/" "d" "1")"
  local DEFAULTARRAY="$([ -f "$OPTSDIR/array" ] && grep -sEv '#|^$' "$OPTSDIR/array" || echo '--options --help --version')"
  local DEFAULTOPTS="$([ -f "$OPTSDIR/options" ] && grep -sEv '#|^$' "$OPTSDIR/options" || echo '--options --help --version')"
  local LONGOPTS="$(grep -sEv '#|^$' "$OPTSDIR/long_opts" || echo "$DEFAULTOPTS" | tr ' ' '\n' | grep '\--')"
  local SHORTOPTS="$(grep -sEv '#|^$' "$OPTSDIR/short_opts" || echo "$DEFAULTOPTS" | tr ' ' '\n' | grep -v '\--')"
  local LIST="$([ -f "$OPTSDIR/available" ] && grep -sEv '#|^$' "$OPTSDIR/available")"
  local OPTS="$DEFAULTOPTS"
  local ARRAY="$DEFAULTARRAY"
  local SHOW_COMP_OPTS=""
  local FILEDIR=""

  _init_completion || return

  if [ "$SHOW_COMP_OPTS" != "" ]; then
    local SHOW_COMP_OPTS_SEP="$(echo "$SHOW_COMP_OPTS" | tr ',' ' ')"
    compopt -o $SHOW_COMP_OPTS_SEP
  fi
  if [[ ${cur} == --* ]]; then
    COMPREPLY=($(compgen -W '${LONGOPTS}' -- ${cur}))
  elif [[ ${cur} == -* ]]; then
    COMPREPLY=($(compgen -W '${SHORTOPTS}' -- ${cur}))
  else
    case ${COMP_WORDS[1]:-$prev} in
    --options) prev="--options" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -c | --config) prev="--config" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -h | --help) prev="--help" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -v | --version) prev="--version" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -l | --list) prev="--list" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    -) prev="-" COMPREPLY=($(compgen -W '${SHORTOPTS} ${LONGOPTS}' -- ${cur})) ;;
    check) prev="check" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    available) prev="available" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    list) prev="list" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    search) prev="search" && COMPREPLY=($(compgen -W '$(echo {0..9} {a..z})' -- "${cur}")) && compopt -o nospace ;;
    install) prev="install" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    remove) prev="remove" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    curl) prev="curl" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    dotfiles) prev="dotfiles" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    script) prev="script" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    upgrade) prev="upgrade" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    export) prev="export" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    clean) prev="clean" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    init) prev="init" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    makecache) prev="makecache" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    cpan) prev="cpan" && COMPREPLY=($(compgen -W 'install remove' -- "${cur}")) ;;
    pip) prev="cpan" && COMPREPLY=($(compgen -W 'install remove' -- "${cur}")) ;;
    gem) prev="cpan" && COMPREPLY=($(compgen -W 'install remove' -- "${cur}")) ;;
    npm) prev="cpan" && COMPREPLY=($(compgen -W 'install remove' -- "${cur}")) ;;
    silent) prev="cpan" && COMPREPLY=($(compgen -W 'install remove update' -- "${cur}")) ;;
    info)prev="info" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    version) prev="version" && COMPREPLY=($(compgen -W '' -- "${cur}")) ;;
    *)
      prev=""
      if [ -n "$FILEDIR" ]; then _filedir; fi
      if [[ "$ARRAY" = "show-none" ]]; then
        COMPREPLY=($(compgen -W '' -- "${cur}"))
      elif [[ "$ARRAY" = "show-_filedir" ]]; then
        _filedir
      elif [[ "$ARRAY" = "show-commands" ]]; then
        COMPREPLY=($(compgen -c -- "${cur}"))
      elif [[ -n "$ARRAY" ]]; then
        [ $COMP_CWORD -lt 2 ] &&
          COMPREPLY=($(compgen -W '${ARRAY}' -- "${cur}"))
      elif [[ -n "$OPTS" ]]; then
        [ $COMP_CWORD -gt 2 ] &&
          COMPREPLY=($(compgen -W '' -- "${cur}"))
      fi
      ;;
    esac
    $split && return
  fi
} &&
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # enable completions
  complete -F _pkmgr pkmgr
