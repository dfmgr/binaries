#!/usr/bin/env bash

APPNAME="gen-script"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 020120210023-git
# @Author        : Jason
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @Copyright     : Copyright (c) 2021, Casjays Developments
# @Created       : Monday Feb 01, 2021 00:23:58 EST
# @File          : gen-script
# @Description   : create scripts
# @TODO          :
# @Other         :
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/casjay-dotfiles/scripts/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-$CASJAYSDEVDIR/functions}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
elif [ -f "$HOME/.local/share/CasjaysDev/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$HOME/.local/share/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
else
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/$SCRIPTSFUNCTFILE"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# I'm sure there is a better way to do this
if [ -d "$1" ]; then
  MYCURRDIR="$1"
  shift 1
elif [ "$1" = "-d" ] || [ "$1" = "-dir" ] || [ "$1" = "--dir" ]; then
  MYCURRDIR="$2"
  shift 2
  [ -d "$MYCURRDIR" ] || printf_exit "$MYCURRDIR doesn't seem to be a directory"
else
  MYCURRDIR="$PWD"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# defaults
GEN_SCRIPTS_YEAR="$(date +%Y)"
GEN_SCRIPTS_EMAIL="${USER}"
GEN_SCRIPTS_AUTHOR="${USER}"
GEN_SCRIPTS_COMPANY="${USER}"
GEN_SCRIPTS_VERSION="%m%d%Y%H%M-git"
GEN_SCRIPTS_DEFREADME="README.md"
GEN_SCRIPTS_DEFLICENSE="WTFPL"
GEN_SCRIPTS_DATEFMT="%A, %b %d, %Y %H:%M %Z"
if [ -d "$HOME/.config/$APPNAME/files" ]; then
  GEN_SCRIPTS_TEMPLATE_DIR="$HOME/.config/$APPNAME/files"
else
  GEN_SCRIPTS_TEMPLATE_DIR="${GEN_SCRIPTS_TEMPLATE_DIR:-$CASJAYSDEVDIR/templates/scripts}"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Application functions
__date() { date +"$1"; }
__filename() { basename "$1"; }

__config() {
  cat <<EOF
GEN_SCRIPTS_EMAIL="${GEN_SCRIPTS_EMAIL}"
GEN_SCRIPTS_AUTHOR="${GEN_SCRIPTS_AUTHOR}"
GEN_SCRIPTS_COMPANY="${GEN_SCRIPTS_COMPANY}"
GEN_SCRIPTS_VERSION="%m%d%Y%H%M-git"
GEN_SCRIPTS_DEFREADME="README.md"
GEN_SCRIPTS_DEFLICENSE="WTFPL"
GEN_SCRIPTS_DATEFMT="%A, %b %d, %Y %H:%M %Z"
GEN_SCRIPTS_TEMPLATE_DIR="${GEN_SCRIPTS_TEMPLATE_DIR}"
EOF
}

__copy_templates() {
  printf_green "Copying the files from:"
  printf_green "$CASJAYSDEVDIR/templates/scripts to $HOME/.config/$APPNAME/files/"
  __mkd "$HOME/.config/$APPNAME/files"
  __cp_rf "$CASJAYSDEVDIR/templates/scripts/." "$HOME/.config/$APPNAME/files/"
  [ $? -eq 0 ] && [ -d "$HOME/.config/$APPNAME/files" ] && printf_green "Copy succeeded" || printf_red "Copy failed"
}

__makefile() {
  printf_green "Copying the file ${1//$GEN_SCRIPTS_TEMPLATE_DIR\//} to $2"
  local temp="$1"
  local new="$2"
  __cp_rf "$temp" "$new"
  __edit_header "$new"
  [ $? -eq 0 ] && printf_green "You file has been created" || printf_red "Failed to create $new"
}

__edit_header() {
  printf_green "Editing the header info"
  local new="$1"
  sed -i 's#REPLACE_FILENAME#'"$(__filename "$new")"'#g' "$new"
  sed -i 's#REPLACE_VERSION#'"$(__date "${GEN_SCRIPTS_VERSION}")"'#g' "$new"
  sed -i 's#REPLACE_DATE#'"$(__date "${GEN_SCRIPTS_DATEFMT}")"'#g' "$new"
  sed -i 's#REPLACE_LICENSE#'${GEN_SCRIPTS_DEFLICENSE}'#g' "$new"
  sed -i 's#REPLACE_AUTHOR#'${GEN_SCRIPTS_AUTHOR}'#g' "$new"
  sed -i 's#REPLACE_EMAIL#'${GEN_SCRIPTS_EMAIL}'#g' "$new"
  sed -i 's#REPLACE_YEAR#'${GEN_SCRIPTS_YEAR}'#g' "$new"
}

__gen_header() {
  printf_green "New the header info"
  local new="$1"
  cat <<EOF

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : $(__date "${GEN_SCRIPTS_VERSION}")
# @Author        : ${GEN_SCRIPTS_AUTHOR}
# @Contact       : ${GEN_SCRIPTS_EMAIL}
# @License       : ${GEN_SCRIPTS_DEFLICENSE}
# @Copyright     : Copyright (c) ${GEN_SCRIPTS_YEAR}, ${GEN_SCRIPTS_AUTHOR}
# @Created       : $(__date "${GEN_SCRIPTS_DATEFMT}")
# @File          : $(__filename ${new:-sample})
# @Description   :
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

EOF
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application
case "$1" in
config)
  shift 1
  __config
  exit
  ;;

header)
  shift 1
  __gen_header "$1"
  exit
  ;;

installers)
  case "$2" in
  devenvmgr)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/devenvmgr.sh"
    dest="$1"
    ;;

  dfmgr)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/dfmgr.sh"
    dest="$1"
    ;;

  dockermgr)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/dockermgr.sh"
    dest="$1"
    ;;

  fontmgr)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/fontmgr.sh"
    dest="$1"
    ;;

  iconmgr)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/iconmgr.sh"
    dest="$1"
    ;;

  personal)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/personal.sh"
    dest="$1"
    ;;

  systemmgr)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/systemmgr.sh"
    dest="$1"
    ;;

  thememgr)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/thememgr.sh"
    dest="$1"
    ;;

  wallpapermgr)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/wallpapermgr.sh"
    dest="$1"
    ;;

  *)
    if [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/installers/$1" ]; then
      template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/$1"
      dest="$2"
    fi
    ;;
  esac
  shift
  ;;

os)
  case "$2" in
  arch)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/os-arch.sh"
    dest="$1"
    ;;

  centos)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/os-centos.sh"
    dest="$1"
    ;;

  debian)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/os-debian.sh"
    dest="$1"
    ;;

  fedora)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/os-fedora.sh"
    dest="$1"
    ;;

  macos)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/os-macos.sh"
    dest="$1"
    ;;

  void)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/os-void.sh"
    dest="$1"
    ;;

  *) ## Allows drop in without need to update this
    if [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/installers/$1" ]; then
      template="${GEN_SCRIPTS_TEMPLATE_DIR}/installers/$1"
      dest="$2"
    fi
    ;;
  esac
  shift
  ;;

shell)
  case "$2" in
  sh)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/shell/template.sh"
    dest="$1"
    ;;

  bash)
    shift 1
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/shell/template.bash"
    dest="$1"
    ;;

  *) ## Allows drop in without need to update this
    if [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/shell/$1" ]; then
      template="${GEN_SCRIPTS_TEMPLATE_DIR}/shell/$1"
      dest="$2"
    fi
    ;;
  esac
  shift
  ;;

*) ## Allows drop in without need to update this
  if [ -f "${GEN_SCRIPTS_TEMPLATE_DIR}/$1" ]; then
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/$1"
    dest="$2"
  else
    printf_green "Using the default bash template"
    template="${GEN_SCRIPTS_TEMPLATE_DIR}/shell/template.bash"
    dest="$1"
  fi
  ;;
esac
shift

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Sanity check
[ -f "$template" ] || printf_exit "The template file doesn't exist"
if [ -f "$dest" ]; then
  printf_read_question "3" "Should we overwrite this file?" "1" "YN" "-s"
  printf_answer_yes "$YN" || exit 1
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# file and folder setup
filename="$(__basename ${dest:-newScript})"
destfolder="$(__basedir ${MYCURRDIR}/$filename)"

# # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Generate the file
__makefile "${template:?}" "$destfolder/$filename"
printf_read_question "3" "Should we edit this file?" "1" "YN" "-s"
printf_answer_yes "$YN" && $EDITOR "$destfolder/$filename"
printf_newline "\n"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
