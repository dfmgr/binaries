#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : myvmmanager
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : setup virtual machine manager
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# create a symlink to $HOME/.local/bin/myvmmanager

create_link() {
  case "$1" in
  *)
    if [ ! -z "$2" ]; then
      shift 1
      if cmd_exists "$1"; then
        if [ "$VMMANAGER" = docker ] || [ "$VMMANAGER" = kubectl ]; then
          exit 0
        fi
        printf_green "Linking $HOME/.local/bin/myvmmanager to $1"
        ln_sf "$(command -v $1)" "$HOME/.local/bin/myvmmanager"
        exit 0
      else
        printf_green "Linking $HOME/.local/bin/myvmmanager to $VMMANAGER"
        ln_sf "$VMMANAGER" "$HOME/.local/bin/myvmmanager"
        exit 0
      fi
    fi
    ;;
  esac
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -z "$VMMANAGER" ]; then
  if [ -n "$(command -v VirtualBox 2>/dev/null)" ]; then
    VMMANAGER="VirtualBox"
  elif [ -n "$(command -v VMWare 2>/dev/null)" ]; then
    VMMANAGER="VMWare"
  elif [ -n "$(command -v virt-manager 2>/dev/null)" ]; then
    VMMANAGER="virt-manager"
  elif [ -n "$(command -v kubectl 2>/dev/null)" ]; then
    VMMANAGER="kubectl"
  elif [ -n "$(command -v docker 2>/dev/null)" ]; then
    VMMANAGER="docker"
  fi
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ ! -z "$VMMANAGER" ] || printf_help "No Virtual Machines are installed"
[ "$1" = "--help" ] && printf_help "Usage: myvmmanager myfile   |   myvmmanager --create"
[ "$1" = "--create" ] && create_link "$@"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$HOME/.local/bin/myvmmanager" ]; then
  "$HOME/.local/bin/myvmmanager" "$@" >/dev/null 2>&1 &
else
  if [ "$VMMANAGER" = docker ] || [ "$VMMANAGER" = kubectl ]; then
    run_in_term $VMMANAGER "$@"
  else
    $MYVMMANAGER "$@" >/dev/null 2>&1 &
  fi
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
