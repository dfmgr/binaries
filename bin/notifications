#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 011320210202-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : notifications
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : send a notification to user
# @
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
systemmgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ "$(uname -s)" = "Darwin" ]; then
  __check_app osascript
  __notify_send() { osascript -e "display notification \"${2}\" with title \"$1\""; }
elif [ "$(uname -s)" = "Linux" ]; then
  __check_app notify-send
  __notify_send() { notify-send -u normal -i "notification-message-IM" "$@"; }
else
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__notifications() {
  if [ ${#} -eq 0 ]; then
    local title="Message from stdin"
    local msg="$(</dev/stdin)"
    shift
  else
    if [ ${#} -eq 1 ]; then
      local title="New notification"
      local msg="${*}"
      shift
    else
      local title="${1}"
      shift 1
      local msg="${*}"
      shift
    fi
  fi
  shift
  __notify_send "$title" "$msg" || return 0
}

__notifications_all() {
  if [ ${#} -eq 0 ]; then
    local title="Message from stdin"
    local msg="$(</dev/stdin)"
    shift
  else
    if [ ${#} -eq 1 ]; then
      local title="New notification"
      local msg="${*}"
      shift
    else
      local title="${1}"
      shift 1
      local msg="${*}"
      shift
    fi
  fi
  if [ "$(uname -s)" = "Linux" ]; then
    shift
    XUSERS=($(who | grep -E "\(:[0-9](\.[0-9])*\)" | awk '{print $1$5}' | sort -u))
    for XUSER in $XUSERS; do
      NAME=(${XUSER/(/ })
      DISPLAY="${NAME[1]/)/}"
      DBUS_ADDRESS=unix:path=/run/user/"$(id -u ${NAME[0]})"/bus
      sudo -u "${NAME[0]}" DISPLAY="${DISPLAY}" \
        DBUS_SESSION_BUS_ADDRESS="${DBUS_ADDRESS}" \
        PATH="${PATH}" \
        notify-send -u normal -i "notification-message-IM" "$title" "$msg" || return 0
      __cmd_exists wall && echo "$title: $msg" | wall
      printf_console "3" "$title: $msg" >/dev/fd/0
    done
  else
    __notifications "$title" "$msg" || return 0
    __cmd_exists wall && echo "$title: $msg" | wall
  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ "$1" = "--all" ]; then
  shift 1
  __notifications_all "$@"
else
  __notifications "$@"
  #__cmd_exists wall && echo "$@" | wall
  #printf_console "3" "$@" >/dev/fd/0
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
