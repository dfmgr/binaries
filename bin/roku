#!/usr/bin/env bash

APPNAME="$(basename $0)"
SCRIPTDIR="$(dirname "${BASH_SOURCE[0]}")"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : roku
# @Created     : Mon, Dec 31, 2019, 00:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : home automation - roku script
# @Help        : https://github.com/tispratik/docs-1/blob/master/develop/guides/remote-api-ecp.md
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# functions

urlcheck() { devnull curl --output /dev/null --silent --head --fail "$1"; }
hostname2ip() { getent ahostsv4 "$1" | cut -d' ' -f1 | head -n1; }

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main() {
# variables
unset roku_device roku_command roku_option
local state="/tmp/automate_roku"
local DEVICE="$(hostname2ip ${ROKU_DEVICE:-$3})"
local roku_device="${DEVICE:-$3}"
local roku_command="$1"
local roku_option="$2"
getstate() { touch $state; cat $state; }
toggle() {
  if [ "$(getstate)" = "stop" ]; then
    roku play
  elif [ "$(getstate)" = "play" ]; then
    roku stop
  elif [ "$(getstate)" = "pause" ]; then
    roku pause
  else
    printf_exit "Can not get state"
  fi
}

[ -z "$roku_device" ] && printf_exit "Please enter the hostname of your roku"

case "$1" in
  play)
    shift 1
    printf_green "Telling $roku_device to play"
    devnull curl -d '' http://$roku_device:8060/keypress/play && echo play >$state
  ;;

  stop)
    shift 1
    printf_green "Telling $roku_device to stop"
    devnull curl -d '' http://$roku_device:8060/keypress/stop && echo stop >$state
  ;;

  pause)
    shift 1
    printf_green "Telling $roku_device to pause/unpause"
    devnull curl -d '' http://$roku_device:8060/keypress/play && echo pause >$state
  ;;

  toggle)
    shift 1
    toggle "$@" & echo pause >$state
  ;;

     state)
    case "$2" in
    json)
      echo '{"status":"$(getstate)"}' | jq
      ;;
  esac
  ;;

  *)
    [ -z "$roku_command" ] && printf_exit "Please enter the the command you want to send to your roku"
    [ -z "$roku_option" ] && printf_exit "Please enter the the command you want to send to your roku"
    printf_green "Sending command $roku_command $roku_option to $roku_device"
    devnull curl -d '' http://$roku_device:8060/$roku_command/$roku_option && echo $roku_option >$state
  ;;
esac

}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
