#!/usr/bin/env bash
# _gitadmin_completions completion

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# autocomplete for gitadmin

_gitadmin_completions() {
  mkdir -p "$HOME/Projects" >/dev/null 2>&1
  local cur prev words cword
  local cur="${COMP_WORDS[COMP_CWORD]}"
  local ARRAY="$(cat ${SCRIPTSFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}/helpers/gitadmin/array)"
  local LIST="$(cat ${SCRIPTSFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}/helpers/gitadmin/list)"
  local gitOPTS="init clone remote"
  local automated="--automated"

  _init_completion || return

  case $prev in
  help | h | --h*)
    return
    ;;

  push)
    k=0
    i="$HOME/Projects"
    for d in $(ls -d $i/*); do
      for j in $(compgen -f "$d/$cur"); do
        [ -d "$j" ] && j="${j}"
        COMPREPLY[k++]=${j}
      done
    done
    return 0
    ;;

  pull)
    k=0
    i="$HOME/Projects"
    for d in $i/*; do
      for j in $(compgen -f "$d/$cur"); do
        [ -d "$j" ] && j="${j} "
        COMPREPLY[k++]=${j}
      done
    done
    return 0
    ;;

  clone)
    COMPREPLY=($(compgen -W '$(git clone)' -- "$cur"))
    return 1
    ;;

  --org)
    k=0
    i="$HOME/Projects"
    for d in $i/*; do
      for j in $(compgen -f "$d/$cur"); do
        [ -d "$j" ] && j="${j}"
        COMPREPLY[k++]=${j#$d/}
      done
    done
    return 0
    ;;

  github)
    COMPREPLY=($(compgen -W '${gitOPTS}' -- "$cur"))
    return 0
    ;;

  gitlab)
    COMPREPLY=($(compgen -W '${gitOPTS}' -- "$cur"))
    return 0
    ;;

  private)
    COMPREPLY=($(compgen -W '${gitOPTS}' -- "$cur"))
    return 0
    ;;

  setup)
    COMPREPLY=($(compgen -W '${automated}' -- "$cur"))
    return 0
    ;;

  esac

  COMPREPLY=($(compgen -W '${ARRAY}' -- "$cur"))

} &&

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

  # enable completions
  complete -F _gitadmin_completions -o default gitadmin
