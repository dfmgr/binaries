#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103200718-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : fontmgr --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 07:18 EDT
# @File          : fontmgr
# @Description   : Install system fonts
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
fontmgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
removefont() {
  __devnull sudo rm -Rf "$APPDIR/$rmf"
  __devnull sudo unlink "$FONTDIR/$rmf"
  __devnull sudo fc-cache -f
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__listfonts() {
  printf_green "All Fonts"
  printf_green "$LIST"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "$1" in
help | -*)
  __help
  ;;
makecache)
  generate_font_index "$@"
  ;;
list)
  __listfonts
  ;;
search)
  shift 1
  run_install_search "$@"
  ;;
available)
  shift 1
  run_install_available
  ;;
remove)
  shift 1
  printf_green "Removing the fonts from $APPDIR"
  unset APPNAME
  declare -a LISTARRAY="$*"
  for rmf in ${LISTARRAY[*]}; do
    APPNAME="$rmf"
    installer_delete "$APPNAME"
    echo ""
  done
  __ln_rm "$FONTDIR/"
  ;;
update)
  shift 1
  unset APPNAME
  printf_green "Updating fonts in $FONTDIR"
  if [ $# -ne 0 ]; then
    if [ "$1" = "--all" ]; then shift 1 && declare -a LISTARRAY="$LIST"; else declare -a LISTARRAY="$*"; fi
    for ins in ${LISTARRAY[*]}; do
      run_install_update "$ins"
    done
  elif [[ -d "$USRUPDATEDIR" && -n "$(ls -A $USRUPDATEDIR 2>/dev/null)" ]]; then
    for upd in $(ls $USRUPDATEDIR 2>/dev/null); do
      run_install_update "$upd"
    done
  else
    printf_yellow "There doesn't seem to be any packages installed"
  fi
  exit $?
  ;;
install)
  shift 1
  unset APPNAME
  if [ $# -eq 0 ]; then
    fontmgr update
  else
    printf_green "Installing fonts to $FONTDIR"
    [ "$1" = "--all" ] && shift 1 && declare -a LISTARRAY="$LIST" || declare -a LISTARRAY="$*"
    for ins in ${LISTARRAY[*]}; do
      run_install_init "$ins"
    done
  fi
  exit $?
  ;;
cron)
  shift 1
  cron_updater "$@"
  ;;
version)
  shift 1
  run_install_version "$@"
  ;;
*)
  __help
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
