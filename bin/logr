#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

set -o pipefail # trace ERR through pipes
shopt -s extglob

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : radioreference
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : play radioreference/broadcastify stream
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printf_color() { printf "%b" "$(tput setaf "$2" 2>/dev/null)" "$1" "$(tput sgr0 2>/dev/null)"; }
printf_green() { printf_color "$1" 2; }
printf_red() { printf_color "$1" 1; }

__help() {
  printf_green "
\t\tA simple logging utility
\t\tUsage       : log mycommand
\t\t--clean     : remove old logs
\t\t--show      : will show all output
\t\t--silent    : no output
\t\t--err       : show only error
\t\t--noerr     : hide error mesaages
\t\t--list      : list all logs
\t\t--open      : open a log file
\n"
  return 1
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ -z "$1" ] && help

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

APPNAME="${APPNAME:-$1}"
logdir="${LOGDIR:-$HOME/.local/log}/logr"
date=$(date +'%m%d%Y-%H%M')
stdout="$1-$date.log"
stderr="$1-$date.err"
mkdir -p "$logdir"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

case "$1" in
--help | -h)
  __help
  ;;
--list | -l)
  ls "$logdir"
  ;;
--open | -o)
  myfilemanager "$logdir" || vifm "$logdir"
  ;;
--clean | -c)
  rm -Rf "$logdir"
  rm -Rf "$HOME/.log" "$HOME/.err"
  mkdir -p "$logdir"
  ;;
-show | -sh)
  shift 1
  "$@"
  ;;
--err | -e)
  shift 1
  "$@" >$logdir/$APPNAME-$date.log
  ;;
--noerr | -noe)
  shift 1
  "$@" 2>/$logdir/$APPNAME-$date.err
  ;;
--silent | -si)
  shift 1
  "$@" >$logdir/$APPNAME-$date.log 2>/$logdir/$APPNAME-$date.err
  ;;
*)
  "$@" >$logdir/$APPNAME-$date.log 2>/$logdir/$APPNAME-$date.err
  ;;
esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
