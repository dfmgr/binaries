#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 020220211240-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : notify-daemon --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Tuesday, Feb 02, 2021 12:40 EST
# @File          : notify-daemon
# @Description   : Start the notification daemon
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
NOTIFYD_HOST="${NOTIFYD_HOST}"
NOTIFYD_PORT="${NOTIFYD_PORT:-65001}"
KILL_PATH="${TMPDIR:-/tmp}/notify-daemon.kill"
SERVER_PATH="${TMPDIR:-/tmp}/notify-daemon/server"
LOG_FILE="$SERVER_PATH.log"
PROCID=

[ -f "$HOME/.config/notify-daemon/settings" ] && . "$HOME/.config/notify-daemon/settings"

__config() {
  printf_green "Generating the config file"
  if [ ! -f "$HOME/.config/notify-daemon/settings" ]; then
    __rm_rf "$HOME/.config/notify-daemon/settings"
    __mkd "$HOME/.config/notify-daemon"
  fi
  cat <<EOF >"$HOME/.config/notify-daemon/settings"
# Settings for notify-daemon
NOTIFYD_PORT="${NOTIFYD_PORT:-65001}"
NOTIFYD_HOST="$NOTIFYD_HOST"

#Uncomment and insert this into $HOME/.config/notify-daemon/notifyd
#if __cmd_exists pathToDaemon; then
#  NOTIFYD="pathToDaemon"
#  PROCID="processName"
#  return 0
#else
#  return 1
#fi

EOF
  [ -f "$HOME/.config/notify-daemon/settings" ] && printf_green "config saved to $HOME/.config/notify-daemon/settings" ||
    printf_error "Failed to save the configuration"
}

netcat="$(command -v nc 2>/dev/null || command -v netcat 2>/dev/null || exit 1)"
__netcat_test() { __cmd_exists $netcat || notifications "Daemon" "The program netcat is not installed"; }
__nc_send() { $netcat -c $1 $2 2>>"$_LOG" && true || $netcat -w 1 $1 $2 2>>"$_LOG" || return 1; }

__kill_server() {
  __netcat_kill "$NOTIFYD_PORT" >/dev/null 2>&1 &&
    printf_blue "Server has been stopped" || printf_red "Failed to stop"
  sleep 2
}
__running() {
  pidof "$PROCID" >/dev/null 2>&1 &&
    printf_info "Daemon ${PROCID:-$NOTIFYD} is currently the notify daemon"
  notifications "Daemon" "${PROCID:-$NOTIFYD} is currently the notify daemon" ||
    notifications "Daemon" "notifiy-daemon is not running PROC should be ${PROCID:-$NOTIFYD}"
  pidof "$NOTIFYD" >/dev/null 2>&1 || printf_error "Not running"

}
__getstatus() { pidof "$PROCID" >/dev/null 2>&1 && return 0 || return 1; }

__kill() {
  notifications "Daemon" "Stopping the daemon"
  printf_info "Daemon Stopping the daemon"
  local pid="$(pidof "$PROCID")"
  kill -s KILL "$pid" >/dev/null 2>&1
  sleep 3
  local pid="$(pidof "$PROCID" &>/dev/null)"
}
__start() {
  sleep 1
  eval "$@" >/dev/null 2>&1 && sleep 3 &
  [ $? = 0 ] && notifications "Daemon" "$PROCID has been started as the notify daemon" || return 1
}

__restart() {
  __kill "$PROCID"
  __start "$1" || __start "$1"
  return $?
}

__client() {
  local _SERVER="$NOTIFYD_HOST"
  local _TMP="${TMPDIR:-/tmp}"
  local _PORT="65001"
  local _PATH="$(mktemp $TMP/notify-clientXXX.tmp)"
  local _LOG="$_PATH.log"
  __netcat_test
  printf_green "Attempting to send message to $_SERVER on $_PORT"
  printf "%s\n" "$*" >"${_PATH}" 2>>"$_LOG"
  cat "$_PATH" 2>>"$_LOG" | __nc_send "$_SERVER" "$_PORT" 2>>"$_LOG"
  [ $? = 0 ] && rm -Rf "$_PATH" || return 1
  return "$?"
}

__server() {
  echo ""
  __clean_return() { __rm_rf "$_PATH" "$_LOG" && return "$1"; }
  local _TMP="${TMPDIR:-/tmp}"
  local _PORT="$NOTIFYD_PORT"
  local _PATH="$SERVER_PATH"
  local _LOG="$LOG_FILE"
  local _KILL="$KILL_PATH"
  __mkd "$TMP/notify-daemon"
  __netcat_test
  netstatg "$_PORT" &>/dev/null && printf_exit "Already Running" || printf_green "Launching server on port $_PORT"
  notifications "Daemon" "Starting notify-daemon server on port $_PORT"
  __rm_rf "$_KILL" "$_LOG"
  while :; do
    cmdsPID="$$"
    echo "$cmdsPID" >>"$_LOG"
    $netcat -l -p "$_PORT" >"$_PATH" 2>>"$_LOG"
    echo "New notification" >>"$_LOG"
    local msg=$(<$_PATH)
    notifications "$msg"
    __clean_return $?
    if [ -f "$_KILL" ]; then
      __kill_server &>/dev/null
      __rm_rf "$_LOG"
      notifications "Daemon" "notify-daemon server is shutting down"
      break
    fi
  done
  __clean_return $?
}

__startup() {
  printf_green "Adding the Notification Daemon to startup"
  cat <<EOF >"$HOME/.config/autostart/notifyd.desktop"
#!/usr/bin/env xdg-open

[Desktop Entry]
Encoding=UTF-8
Version=0.9.4
Type=Application
Name=Notification Daemon
Icon=preferences-desktop-notification
Comment=Start notifyd
Exec=notify-daemon start
RunHook=0
StartupNotify=false
Terminal=false
Hidden=false

EOF

  __start "$NOTIFYD" && sleep 5
  [ -f "$HOME/.config/autostart/notifyd.desktop" ] &&
    printf_green "Successfully installed Notification Daemon" ||
    printf_error "Failed to install Notification Daemon"
  __running && notifications "Daemon" "$PROCID has been enabled to start at login"
  exit $?
}

__server_enable() {
  printf_green "Enabling the Notification Daemon Server on port $NOTIFYD_PORT"
  cat <<EOF >"$HOME/.config/autostart/notifyd-server.desktop"
#!/usr/bin/env xdg-open

[Desktop Entry]
Version=1.1
Type=Application
Name=Notification Server
GenericName=NotificationServer
Comment=Start Notification Daemon Server.
Icon=preferences-desktop-notification
Exec=notify-daemon --server &
Path=~
Terminal=false
Actions=
Categories=System;GTK;X-XFCE;GNOME;
Keywords=xfce4-notify;notify;music;player;my;
StartupNotify=true
EOF
  notify-daemon --server &
  exit $?
}

__server_disable() {
  __rm_rf "$HOME/.config/autostart/notifyd-server.desktop"
  touch "$TMP/notify-daemon.kill"
  __client "Daemon" "Disabling server"
}

__term() {
  while :; do
    # show menu
    local status="$(__getstatus && echo -n "Running $PROCID" || echo -e "Not Running")"
    clear
    shift
    printf_newline "\n\n\n\n"
    printf_head "Notify Daemon Menu"
    printf_green "Current Status: $status"
    printf_green "a. Start"
    printf_green "b. Stop"
    printf_green "c. Restart"
    printf_green "d. create a config file"
    printf_green "e. Status"
    printf_green "f. Test"
    printf_green "z. or escape to Exit"
    printf_green "---------------------------------"
    printf_read_question "6" "Enter your choice [a-z] : " "1" "main" "-s"
    printf_newline
    # take action
    case "$main" in
    a)
      shift 1
      _start_notifyd
      ;;
    b)
      shift 1
      __kill "$PROCID"
      ;;
    c)
      shift 1
      __restart "$NOTIFYD"
      ;;
    d)
      shift 1
      __config
      ;;
    e)
      shift 1
      __running "$NOTIFYD"
      ;;
    f)
      shift 1
      notifications "Daemon" "Server is running: $PROCID"
      ;;
    $'\E' | $'\e' | z)
      shift 1
      clear
      break
      ;;
    *) shift ;;
    esac
    printf_newline "\n\n"
    printf_counter "5" "3" "Re-loading menu in"
  done
  clear
}

__xfce4_notifyd() {
  if [ -f /usr/lib/xfce4/notifyd/xfce4-notifyd ]; then
    NOTIFYD="/usr/lib/xfce4/notifyd/xfce4-notifyd"
    PROCID="xfce4-notifyd"
    return 0
  elif [ -f /usr/lib/x86_64-linux-gnu/xfce4/notifyd/xfce4-notifyd ]; then
    NOTIFYD="/usr/lib/x86_64-linux-gnu/xfce4/notifyd/xfce4-notifyd"
    PROCID="xfce4-notifyd"
    return 0
  else
    return 1
  fi
}

__dunst_notifyd() {
  if __cmd_exists dunst; then
    NOTIFYD="dunst"
    PROCID="dunst"
    return 0
  else
    return 1
  fi
}

__deadd_notifyd() {
  if __cmd_exists deadd-notification-center; then
    NOTIFYD="deadd-notification-center"
    PROCID="deadd-notification-center"
    return 0
  else
    return 1
  fi
}

__custom_notifyd() {
  if [ -f "$HOME/.config/notify-daemon/notifyd" ]; then
    source "$HOME/.config/notify-daemon/notifyd"
    [ -n "$PROCID" ] && [ -n "$NOTIFYD" ] || false
  else
    return 1
  fi
}

_start_notifyd() {
  __custom_notifyd || __xfce4_notifyd || __dunst_notifyd || __deadd_notifyd
  _run() { __start "$NOTIFYD" && sleep 5 && return 0; }
  if [ -z "$PROCID" ] && [ -z "$NOTIFYD" ]; then
    printf_red "Failed to find a notify daemon"
    printf_exit 1 1 "Please install: xfce4-notifyd, dunst, deadd or custom: see settings file for custom"
  else
    if ! __getstatus "$PROCID"; then
      printf_green "Attempting to start"
      while :; do _run && __getstatus "$PROCID" && break || sleep 3; done
    #notifications "Daemon" "Started"
    fi
    __getstatus "$PROCID" && printf_green "$PROCID has been started" &&
      notifications "Daemon" "$PROCID has been Started" ||
      printf_exit "Failed to start ${PROCID:-$NOTIFYD}"
  fi
}
__custom_notifyd || __xfce4_notifyd || __dunst_notifyd || __deadd_notifyd
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

case "$1" in
####
*server)
  case $2 in
  *stop | *kill)
    printf_green "Attempting to stop the server"
    shift 2
    touch "$KILL_PATH"
    __kill_server
    #__netcat_pids "$NOTIFYD_PORT"
    exit $?
    ;;
  *restart)
    printf_green "Attempting to restart the server"
    shift 2
    touch "$KILL_PATH"
    __kill_server
    sleep 5
    __server "$@"
    exit $?
    ;;
  *enable)
    shift 2
    __server_enable
    exit $?
    ;;
  *disable)
    shift 2
    __server_disable
    exit $?
    ;;
  *status)
    shift 2
    PID="$(__netcat_pids "$NOTIFYD_PORT")"
    printf_green "The server appears to be running on $NOTIFYD_PORT with PID: $PID"
    notifications "Daemon" "The server appears to be running on $NOTIFYD_PORT with PID: $PID"
    exit
    ;;
  start | *-start)
    shift 2
    __server "$@"
    ;;
  *)
    __server "$@"
    ;;
  esac
  ;;
####

config)
  shift 1
  __config
  ;;

ask)
  shift 1
  [ -n "$PROCID" ] && exit 0 || exit 1
  exit
  ;;

enable)
  shift 1
  __startup
  ;;

disable)
  printf_green "Disabling the notify daemon"
  __rm_rf "$HOME/.config/autostart/notifyd.desktop" &&
    __kill "$PROCID" &&
    printf_green "Successfully Disabled the notify daemon" ||
    printf_error "Failed to disable notify daemon"
  return $?
  ;;
restart)
  shift 1
  __restart "$NOTIFYD"
  ;;

stop)
  shift 1
  __kill "$PROCID"
  ;;

status)
  shift 1
  __running "$NOTIFYD"
  ;;

*term)
  shift 1
  __term
  ;;

*client)
  if [ -z "$NOTIFYD_HOST" ]; then
    notifications "Daemon" "Please set NOTIFYD_HOST variable to your server"
    exit 1
  fi
  if [ ${#} -eq 0 ]; then
    if [ -p "/dev/stdin" ]; then
      message="$(cat </dev/stdin)"
    fi
  else
    message="$*"
  fi
  __client "$message" 2>/dev/null || notifications "Daemon" "failed to send to $NOTIFYD_HOST"
  ;;

*)
  _start_notifyd
  __getstatus "$PROCID" || _start_notifyd "$NOTIFYD"
  ;;
esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End
