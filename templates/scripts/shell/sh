#!/usr/bin/env sh
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="$(dirname "$PROG")"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : GEN_SCRIPTS_REPLACE_VERSION
# @Author        : GEN_SCRIPTS_REPLACE_AUTHOR
# @Contact       : GEN_SCRIPTS_REPLACE_EMAIL
# @License       : GEN_SCRIPTS_REPLACE_LICENSE
# @ReadME        : GEN_SCRIPTS_REPLACE_FILENAME --help
# @Copyright     : GEN_SCRIPTS_REPLACE_COPYRIGHT
# @Created       : GEN_SCRIPTS_REPLACE_DATE
# @File          : GEN_SCRIPTS_REPLACE_FILENAME
# @Description   : GEN_SCRIPTS_REPLACE_DESC
# @TODO          : GEN_SCRIPTS_REPLACE_TODO
# @Other         : GEN_SCRIPTS_REPLACE_OTHER
# @Resource      : GEN_SCRIPTS_REPLACE_RES
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Check for needed applications
#cmd_exists sh || exit 1 # exit if not found
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set variables
__heading="- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set functions
__version() { __grep_head 'Version' "$PROG" | __sed_head | head -n1 | grep '^'; }
__printf_color() { printf "%b" "$(tput setaf "${2:-2}" 2>/dev/null)" "$1" "$(tput sgr0 2>/dev/null)"; }
__printf_head() { __printf_color "\n\t\t$__heading\n\t\t$2\n\t\t$__heading\n" "$1"; }
__list_options() { echo -n "-$SHORTOPTS " | sed 's#:##g;s#,# -#g' && echo "--$LONGOPTS " | sed 's#:##g;s#,# --#g' && exit; }
__list_array() { echo "$ARRAY" | tr ',' ' ' | tr ' ' '\n'; }
__sed_remove_empty() { sed '/^\#/d;/^$/d;s#^ ##g'; }
__sed_head() { sed -E 's/^.*#//g;s#^ ##g;s/^@//g'; }
__grep_head() {
  grep -sE '[".#]?@[A-Z]' "$(type -P "${2:-$GEN_SCRIPTS_REPLACE_FILENAME}")" | grep "${1:-}" | __sed_head | __sed_remove_empty | grep '^' || return 1
}
__printf_help() {
  local color="$1" && shift 1
  local msg="$*"
  shift
  __printf_color "\t\t$msg\n" "$color"
}
__help() {
  printf '\n'
  __printf_head "5" "GEN_SCRIPTS_REPLACE_FILENAME: $(__grep_head "Description" "GEN_SCRIPTS_REPLACE_FILENAME" | __sed_head)"
  __printf_help "6" "Usage: GEN_SCRIPTS_REPLACE_FILENAME "
  __printf_help "4" ""
  printf '\n'
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set additional variables
exitCode=""
GEN_SCRIPTS_ARRAY_DIR="$HOME/.config/GEN_SCRIPTS_REPLACE_FILENAME"
GEN_SCRIPTS_REPLACE_CONFIG_DIR="$HOME/.config/GEN_SCRIPTS_REPLACE_FILENAME"
GEN_SCRIPTS_REPLACE_CONFIG_FILE="settings.conf"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# bring in user config
[ -f "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE" ] && . "$GEN_SCRIPTS_REPLACE_CONFIG_DIR/$GEN_SCRIPTS_REPLACE_CONFIG_FILE"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Argument/Option settings
SETARGS="${*}"
SHORTOPTS="c,v,h"
LONGOPTS="options,config,version,help"
ARRAY=""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Setup application options
setopts=$(getopt -o "$SHORTOPTS" --long "$LONGOPTS" -n "$APPNAME" -- "$@" 2>/dev/null)
eval set -- "${setopts[@]}" 2>/dev/null
while :; do
  case $1 in
  --options)
    shift 1
    __list_options
    __list_array
    ;;
  -v | --version)
    shift 1
    __version
    ;;
  -h | --help)
    shift 1
    __help
    ;;
  -c | --config)
    shift 1
    __gen_config
    ;;
  --)
    shift 1
    break
    ;;
  esac
done
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application
case $1 in
*)
  echo -e "$PROG: ${*}"
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# lets exit with code
exit ${exitCode:-$?}
