#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="gen-nginx"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 031220212322-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : gen-nginx --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Friday, Mar 12, 2021 23:22 EST
# @File          : gen-nginx
# @Description   : Generate a nginx proxy host
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
NGINXDOMAIN="${1:-$(hostname -f)}"
NGINXDOCROOT="${2:-$HOME/.config/gen-nginx/www/$(hostname -f)}"
NGINXCONFDIR="${3:-$HOME/.config/gen-nginx/conf}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
mkdir -p "$HOME/.config/gen-nginx/www/$(hostname -f)"
mkdir -p "$HOME/.config/gen-nginx/conf"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__nginx_confdir() {
  if [ -d /etc/nginx/sites-enabled ]; then
    NGINXCONFDIR="/etc/nginx/sites-enabled"
  elif [ -d "/etc/nginx/vhosts.d" ]; then
    NGINXCONFDIR="/etc/nginx/vhosts.d"
  else
    printf_read_question_nt "4" "Where are your nginx server files located?" "120" "NGINXCONFDIR" "-e -i $NGINXCONFDIR"
    if [[ ! -d "$NGINXCONFDIR" ]]; then
      printf_exit "$NGINXCONFDIR is an invalid directory"
      exit 1
    fi
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__hosts() {
  grep "$REVPROXY" /etc/hosts &>/dev/null || echo "127.0.0.3      $REVPROXY" | sudo tee -a /etc/hosts &>/dev/null
  grep "$NGINXDOMAIN" /etc/hosts &>/dev/null || echo "127.0.0.3      $NGINXDOMAIN" | sudo tee -a /etc/hosts &>/dev/null
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__nginx_dom() {
  printf_read_question_nt "4" "What is your domain name?" "120" "NGINXDOMAIN" "-e -i $(hostname -f) " || printf_newline
  printf_read_question_nt "4" "What is the name of the app?" "120" "REVPROXYNAME" "-e" || printf_newline
  printf_read_question_nt "4" "What should I proxy for?" "120" "REVPROXY" "-e -i localhost " || printf_newline
  printf_read_question_nt "4" "What is your APPs port [3000]?" "120" "REVPROXY_PORT" "-e -i 3000 " || printf_newline
  printf_read_question_nt "4" "What is the protocol http[s]?" "120" "REVPROXY_PROTO" "-e -i http" || printf_newline
  [ -n "$NGINXDOMAIN" ] && NGINXDOMAIN="$NGINXDOMAIN" || printf_exit "domain name is required"
  [ -n "$REVPROXYNAME" ] && REVPROXYNAME="$REVPROXYNAME" || printf_exit "app name is required"
  REVPROXY="${REVPROXY:-localhost}"
  REVPROXY_PORT="${REVPROXY_PORT:-3000}"
  REVPROXY_PROTO="${REVPROXY_PROTO:-http}"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__nginx_conf() {
  if [ -d "/etc/letsencrypt/live/domain" ] || [ -d "/etc/letsencrypt/live/$(hostname -f)" ]; then
    echo '#Define your primary service
# upstream '$REVPROXYNAME' { server '$REVPROXY':'$REVPROXY_PORT' fail_timeout=0; }

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  server_name '$NGINXDOMAIN';
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log info;
  keepalive_timeout 75 75;
  ssl_certificate /etc/letsencrypt/live/domain/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/domain/privkey.pem;
  add_header Strict-Transport-Security "max-age=7200";

  location / {
    proxy_redirect          http:// https://;
    proxy_pass              '$REVPROXY_PROTO://$REVPROXY';
    proxy_ssl_verify        off;
    send_timeout            3600;
    client_max_body_size    1024M;
    proxy_connect_timeout   3600;
    proxy_send_timeout      3600;
    proxy_read_timeout      3600;
    proxy_http_version      1.1;
    proxy_request_buffering off;
    proxy_buffering         off;
    proxy_set_header        Host $host:$server_port;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_set_header        Upgrade $http_upgrade;
    proxy_set_header        Connection $connection_upgrade;
    }

#  location ~ ^/uri {
#    rewrite ^/(.*)$ /$1 break;
#    proxy_pass http://127.0.0.1:port/;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header Host $host;
#    proxy_redirect   off;
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }

#  location ~ ^/uri {
#    rewrite ^/(.*)$ http://$host:$port/ permanent;
#    }

    include /etc/nginx/global.d/nginx-defaults.conf;
    include /etc/nginx/global.d/nginx-defaults.conf;
    include /etc/nginx/global.d/cgi-bin.conf;
    include /etc/nginx/global.d/munin.conf;
    include /etc/nginx/global.d/vnstats.conf;
    include /etc/nginx/global.d/others.conf;
}
' | sudo tee "$NGINXCONFDIR/$NGINXDOMAIN.conf" &>/dev/null
  else
    echo '#Define your primary service
# upstream '$REVPROXYNAME' { server '$REVPROXY':'$REVPROXY_PORT' fail_timeout=0; }

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  server_name '$NGINXDOMAIN';
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log info;
  keepalive_timeout 75 75;
  ssl_certificate /etc/ssl/CA/CasjaysDev/certs/localhost.crt;
  ssl_certificate_key /etc/ssl/CA/CasjaysDev/private/localhost.key;
  add_header Strict-Transport-Security "max-age=7200";

  location / {
    proxy_redirect          http:// https://;
    proxy_pass              '$REVPROXY_PROTO'://'$REVPROXY':'$REVPROXY_PORT';
    proxy_ssl_verify        off;
    send_timeout            3600;
    client_max_body_size    1024M;
    proxy_connect_timeout   3600;
    proxy_send_timeout      3600;
    proxy_read_timeout      3600;
    proxy_http_version      1.1;
    proxy_request_buffering off;
    proxy_buffering         off;
    proxy_set_header        Host $host:$server_port;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_set_header        Upgrade $http_upgrade;
    proxy_set_header        Connection $connection_upgrade;
    }

#  location ~ ^/uri {
#    rewrite ^/(.*)$ /$1 break;
#    proxy_pass '$REVPROXY_PROTO'://'$REVPROXY':'$REVPROXY_PORT'/;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header Host $host;
#    proxy_redirect   off;
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }

#  location ~ ^/uri {
#    rewrite ^/(.*)$ '$REVPROXY_PROTO'://'$REVPROXY':'$REVPROXY_PORT' permanent;
#    }

    include /etc/nginx/global.d/nginx-defaults.conf;
    include /etc/nginx/global.d/nginx-defaults.conf;
    include /etc/nginx/global.d/cgi-bin.conf;
    include /etc/nginx/global.d/munin.conf;
    include /etc/nginx/global.d/vnstats.conf;
    include /etc/nginx/global.d/others.conf;
}
' | sudo tee "$NGINXCONFDIR/$NGINXDOMAIN.conf" &>/dev/null
  fi
  printf_newline
  printf_head 4 "Setting up $NGINXDOMAIN.conf" "in $NGINXCONFDIR"
  if [ -f "$NGINXCONFDIR/$NGINXDOMAIN.conf" ]; then
    printf_green "Successfully created $NGINXCONFDIR/$NGINXDOMAIN.conf"
  else
    print_error "Failed to create $NGINXCONFDIR/$NGINXDOMAIN.conf"
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main() {
  NGINXDOMAIN="${NGINXDOMAIN:-$1}"
  REVPROXYNAME="${REVPROXYNAME:-$2}"
  REVPROXY="${REVPROXY:-$3}"
  REVPROXY_PORT="${REVPROXY_PORT:-$4}"
  REVPROXY_PROTO="${REVPROXY_PROTO:-$5}"
  __nginx_dom
  __nginx_confdir
  __nginx_conf "$@"
  if [ "$HOME/.config/gen-nginx/conf/$NGINXDOMAIN.conf" != "$NGINXCONFDIR/$NGINXDOMAIN.conf" ]; then
    if [ -d "/etc/nginx/vhosts.d" ] && __can_i_sudo; then
      __requiresudo true
      __nginx_confdir
      printf_green "Installing config to $NGINXCONFDIR/$NGINXDOMAIN.conf"
      sudo mv -f "$TMPDIR/$NGINXDOMAIN.conf" "$NGINXCONFDIR/$NGINXDOMAIN.conf"
    fi
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#End
