#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="myfilemanager"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 022420211808-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : myfilemanager --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Monday, Feb 15, 2021 14:02 EST
# @File          : myfilemanager
# @Description   : Open file manager
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MYTERMINAL_NOTIFICATIONS="no"
[ -f "$HOME/.config/myfilemanager/settings" ] && . "$HOME/.config/myfilemanager/settings"
MYFILEMANAGER_NOTIFICATIONS="${MYFILEMANAGER_NOTIFICATIONS:-yes}"

__config() {
  printf_green "Generating config file"
  __mkd "$HOME/.config/myfilemanager"
  echo -e '# Settings for myfilemanager
MYFILEMANAGER="config"
FILEMANAGER="'$FILEMANAGER'"
MYFILEMANAGER_MYFILEMANAGER="'$MYFILEMANAGER_NOTIFICATIONS'"
  ' >"$HOME/.config/myfilemanager/settings"
  if [ -f "$HOME/.config/myfilemanager/settings" ]; then
    printf_green "File saved to: $HOME/.config/myfilemanager/settings"
    [ -n "$MYFILEMANAGER_NOTIFICATIONS" ] && notifications "MyFilemanager" "Config file saved to:\n$HOME/.config/myfilemanager/settings"
  fi
  exit
}

__create_link() {
  case "$1" in
  *)
    if [ ! -z "$2" ]; then
      shift 1
      if cmd_exists "$1"; then
        printf_green "Linking $HOME/.local/bin/myfilemanager to $1"
        __ln_sf "$(command -v $1)" "$HOME/.local/bin/myfilemanager"
        exit 0
      else
        printf_green "Linking $HOME/.local/bin/myfilemanager to $FILEMANAGER"
        __ln_sf "$FILEMANAGER" "$HOME/.local/bin/myfilemanager"
        exit 0
      fi
    fi
    ;;
  esac
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ "$MYFILEMANAGER" != "config" ]; then
  if [ -z "$DESKTOP_SESSION" ]; then
    if [ -n "$(command -v lf 2>/dev/null)" ]; then
      export FILEMANAGER="lf"
    elif [ -n "$(command -v vifm 2>/dev/null)" ]; then
      export FILEMANAGER="vifm"
    elif [ -n "$(command -v ranger 2>/dev/null)" ]; then
      export FILEMANAGER="ranger"
    elif [ -n "$(command -v se 2>/dev/null)" ]; then
      export FILEMANAGER="se"
    elif [ -n "$(command -v cfiles 2>/dev/null)" ]; then
      export FILEMANAGER="cfiles"
    fi
  else
    if [ -n "$(command -v open 2>/dev/null)" ]; then
      export FILEMANAGER="open"
    elif [ -n "$(command -v dolphin 2>/dev/null)" ]; then
      export FILEMANAGER="dolphin"
    elif [ -n "$(command -v thunar 2>/dev/null)" ]; then
      export FILEMANAGER="thunar"
    elif [ -n "$(command -v Thunar 2>/dev/null)" ]; then
      export FILEMANAGER="Thunar"
    elif [ -n "$(command -v konqueror 2>/dev/null)" ]; then
      export FILEMANAGER="konqueror"
    elif [ -n "$(command -v spacefm 2>/dev/null)" ]; then
      export FILEMANAGER="spacefm"
    elif [ -n "$(command -v nemo 2>/dev/null)" ]; then
      export FILEMANAGER="nemo"
    elif [ -n "$(command -v pcmanfm 2>/dev/null)" ]; then
      export FILEMANAGER="pcmanfm"
    elif [ -n "$(command -v polo 2>/dev/null)" ]; then
      export FILEMANAGER="caja"
    elif [ -n "$(command -v caja 2>/dev/null)" ]; then
      export FILEMANAGER="nautilus"
    elif [ -n "$(command -v nautilus 2>/dev/null)" ]; then
      export FILEMANAGER="polo"
    elif [ -n "$(command -v polo 2>/dev/null)" ]; then
      export FILEMANAGER="polo"
    fi
  fi

  if [[ "$OSTYPE" == "darwin"* ]]; then
    export FILEMANAGER="open"
  fi
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -z "$FILEMANAGER" ]; then
  [ "$MYFILEMANAGER_NOTIFICATIONS" = "yes" ] && notifications "MyFileManager" "No filemanagers are installed"
  printf_exit 1 1 "No filemanagers are installed"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $FILEMANAGER in
  lf | vifm | ranger | se | cfiles)
    NOTIFY_MESSAGE="Attempting to launch $FILEMANAGER"
    FILEMANAGER="myterminal -e $FILEMANAGER"
  ;;
  *)
    [ -n "$NOTIFY_MESSAGE" ] || NOTIFY_MESSAGE="Attempting to launch $FILEMANAGER"
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $1 in
*config)
  shift 1
  __config
  ;;

*create | *link)
  shift 1
  __create_link "$@"
  ;;

*)
  [ "$MYFILEMANAGER_NOTIFICATIONS" = "yes" ] && notifications "MyFileManager" "$NOTIFY_MESSAGE"
  if [ -f "$HOME/.local/bin/myfilemanager" ]; then
    __exec ~/.local/bin/myfilemanager "$@"
  else
    __exec $FILEMANAGER "$@"
  fi
  ;;
esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
