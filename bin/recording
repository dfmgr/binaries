#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts
shopt -s extglob
trap '' SIGINT
trap '' SIGQUIT
trap '' SIGTSTP

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103201817-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : recording --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 18:17 EDT
# @File          : recording
# @Description   : recording menu
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ -n "$DISPLAY" ] || printf_exit "No display server found......."
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
while :; do # show menu
  shift 1
  clear
  date="$(date +'%m-%d-%Y-%H-%M')"
  printf_newline "\n\n\n\n"
  printf_head "Recording Menu"
  printf_green "a. launch asciinema"
  printf_green "b. launch recordmydesktop"
  printf_green "c. launch obs"
  printf_green "d. vokoscreen"
  printf_green "e. simplescreenrecorder"
  printf_green "x. start/stop screenkey"
  printf_green "y. launch custom application"
  printf_green "z. or escape to Exit"
  printf_green "---------------------------------"
  printf_read_question_nt "6" "Enter your choice [a-z] : " "1" "main" "-s"
  printf_newline
  case "$main" in # take action

  a)
    shift 1
    __run_command asciinema rec -i "30" --stdin -t "$date" "$HOME/Videos/record_term-$date.ogv"
    ;;
  b)
    shift 1
    __run_prog_menus recordmydesktop "$@"
    ;;
  c)
    shift 1
    __run_prog_menus obs "$@"
    ;;
  d)
    shift 1
    __run_prog_menus vokoscreen "$@"
    ;;
  e)
    shift 1
    __run_prog_menus simplescreenrecorder "$@"
    ;;
  x)
    shift 1
    __run_prog_menus ss_screenkey "$@"
    ;;
  y)
    shift 1
    __custom "$@"
    ;;
  $'\E' | z)
    clear
    break
    ;;
  *) shift ;;
  esac
  clear
  printf_newline "\n\n"
  printf_counter "5" "3" "Re-loading menu in"
done
clear
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
