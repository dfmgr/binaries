#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103201823-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : reqpkgs --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 18:23 EDT
# @File          : reqpkgs
# @Description   : Install required packages
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
REQ_PIP_PACKAGE_NAME="${REQ_PIP_PACKAGE_NAME:-}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -n "$1" ]; then
  YUM_PACKAGE_NAME="$*"
  DEB_PACKAGE_NAME="$*"
  PAC_PACKAGE_NAME="$*"
else
  DEB_PACKAGE_NAME="sudo git curl gnupg lynx wget net-tools python3 python3-pil python3-pip vim-nox"
  YUM_PACKAGE_NAME="sudo git curl gnupg lynx wget python3 python3-pip net-tools vim"
  PAC_PACKAGE_NAME="sudo git curl gnupg lynx wget python3 python-pip net-tools vim"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if cat /etc/*release | grep ^NAME | grep CentOS; then
  printf_green "============================================="
  printf_green "Installing packages for CentOS               "
  printf_green "============================================="
  for pkg in ${YUM_PACKAGE_NAME}; do
    yum install -y $pkg
  done
elif cat /etc/*release | grep ^NAME | grep Red; then
  printf_green "============================================="
  printf_green "Installing packages for RedHat               "
  printf_green "============================================="
  for pkg in ${YUM_PACKAGE_NAME}; do
    yum install -y $pkg
  done

elif cat /etc/*release | grep ^NAME | grep Fedora; then
  printf_green "============================================="
  printf_green "Installing packages for Fedora               "
  printf_green "============================================="
  for pkg in ${YUM_PACKAGE_NAME}; do
    yum install -y $pkg
  done
elif cat /etc/*release | grep ^NAME | grep Ubuntu; then
  printf_green "============================================="
  printf_green "Installing packages for Ubuntu               "
  printf_green "============================================="
  for pkg in ${DEB_PACKAGE_NAME}; do
    apt-get install -yy $pkg
  done
elif cat /etc/*release | grep ^NAME | grep Debian; then
  printf_green "============================================="
  printf_green "Installing packages for Debian               "
  printf_green "============================================="
  for pkg in ${DEB_PACKAGE_NAME}; do
    apt-get install -yy $pkg
  done
elif cat /etc/*release | grep ^NAME | grep Mint; then
  printf_green "============================================="
  printf_green "Installing packages for Mint                 "
  printf_green "============================================="
  for pkg in ${DEB_PACKAGE_NAME}; do
    apt-get install -yy $pkg
  done
elif cat /etc/*release | grep ^NAME | grep Knoppix; then
  printf_green "============================================="
  printf_green "Installing packages for Knoppix              "
  printf_green "============================================="
  for pkg in ${YUM_PACKAGE_NAME}; do
    yum install -y $pkg
  done
elif cat /etc/*release | grep ^NAME | grep Arch; then
  printf_green "============================================="
  printf_green "Installing packages for Arch                 "
  printf_green "============================================="
  for pkg in ${PAC_PACKAGE_NAME}; do
    pacman -Syyu --clean --noconfirm --needed $pkg
  done
else
  printf_red "OS NOT DETECTED, couldn't install packages "
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#  for pip in $REQ_PIP_PACKAGE_NAME ; do
#    sudo python3 -m pip install $pip || sudo python2 -m pip install $pip
#  done
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
printf_green "============================================="
printf_green "Installation has completed                   "
printf_green "============================================="
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
