#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts
set -e
set -o pipefail

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103201702-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : latest-releases --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 17:02 EDT
# @File          : latest-releases
# @Description   : Check github for the latest release
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__check_app jq || exit 1
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
config_path="${HOME}/.config/latest-releases"
auth_path="${config_path}/auth"
github_path="${config_path}/github"
curl_auth=""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
mkdir -p "$config_path"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ ! -f "${auth_path}" ]; then
  echo "GITHUB_USERNAME="yourname"" >"${auth_path}"
  echo "GITHUB_PERSONAL_ACCESS_TOKEN="youraccesstoken"" >>"${auth_path}"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ ! -f "${github_path}" ]; then
  echo "
  gokcehan/lf
  docker/docker-ce
  nodejs/node
  " >"${github_path}"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "${auth_path}" ]; then
  # shellcheck source=/dev/null
  source "${auth_path}"
  curl_auth="-u ${GITHUB_USERNAME}:${GITHUB_PERSONAL_ACCESS_TOKEN}"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ ! -f "${github_path}" ]; then
  printf_green "${github_path} not found"
  printf_green "Add your list of GitHub repos to the above file. Separate out"
  printf_green "each entry on a new line and only include the owner/repo."
  printf_green "Here's an example of what that file could look like:"
  printf_green "pallets/flask"
  printf_green "phoenixframework/phoenix"
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
printf_green "Latest releases on GitHub:\n\n"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
nl=$'\n'
out=""
while read -r repo; do
  tag_info=""
  tag_name=""
  tag_commit_url=""
  tag_commit_date=""
  set +e
  if ! tag_info="$(curl "${curl_auth}" -s "https://api.github.com/repos/${repo}/tags?per_page=1" | jq -r ".[0].name, .[0].commit.url" 2>/dev/null | paste -sd,-)"; then
    printf_green "You are API rate limited by GitHub, please authenticate by:"
    printf_green "1. Go to https://github.com/settings/tokens"
    printf_green "2. Create a personal access token with no special permissions"
    printf_green "3. Run: ${auth_path}"
    printf_green "Add these 2 lines to the file, modify the values for your info and save it:"
    printf_green 'export GITHUB_USERNAME="yourname"'
    printf_green 'export GITHUB_PERSONAL_ACCESS_TOKEN="youraccesstoken"'
    exit "${?}"
  fi
  set -e
  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  tag_name="$(cut -d ',' -f 1 <<<"${tag_info}")"
  tag_commit_url="$(cut -d ',' -f 2 <<<"${tag_info}")"
  tag_commit_date="$(curl "${curl_auth}" -s "${tag_commit_url}" | jq -r ".commit.author.date" | cut -d 'T' -f 1)"
  out+=$"${repo} | ${tag_name} | ${tag_commit_date}${nl}"
done <"${github_path}"
column -t <<<"${out}" | sort -t "|" -k 3 -r
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
