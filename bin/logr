#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts
set -o pipefail
shopt -s extglob

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103201707-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : logr --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 17:07 EDT
# @File          : logr
# @Description   : A logging script
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
myhostname="$(hostname -f)"
logrname="${1:-$APPNAME}"
logdir="${LOGDIR:-$HOME/.local/log}/logr"
date=$(date +'%m%d%Y-%H%M')
stdout="$logrname-$date.log"
stderr="$logrname-$date.err"
toemail=${EMAIL_ERROR_TO:-root@$myhostname}
fromemail=${EMAIL_ERROR_FROM:-root@$myhostname}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "$logrname" in
-name | --name)
  logrname="$2"
  shift 2
  stdout="$logrname.log"
  stderr="$logrname.err"
  cmdline="$*"
  ;;

cron | eval | exec)
  logrname="$1"
  shift 1
  stdout="$logrname.log"
  stderr="$logrname.err"
  cmdline="$*"
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
mkdir -p "$logdir" "$logdir/pretty"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "$logrname" in
--help | -h)
  __help
  ;;

--list | -l)
  ls "$logdir"
  ;;

--open | -o)
  cmd_exists myfilemanager && myfilemanager "$logdir" || vifm "$logdir" || thunar "$logdir"
  ;;

--clean | -c)
  rm -Rf "$logdir"
  rm -Rf "$HOME/.log" "$HOME/.err"
  mkdir -p "$logdir"
  mkdir -p "$logdir/pretty"
  ;;

-show | -sh)
  shift 1
  cmdline="${cmdline:-$*}"
  printf_head "$logrname started on $(date +"%b %d, %Y at %H:%M")" \
    "Full command is: $cmdline"
  bash -c "$cmdline"
  ;;

--noerr | -noe)
  shift 1
  cmdline="${cmdline:-$*}"
  printf_head "logr started $logrname on $(date +"%b %d, %Y at %H:%M")" \
    "Full command is: $cmdline"
  bash -c "$cmdline" 2>>"$logdir/$stderr"
  ;;

--err | -e)
  shift 1
  cmdline="${cmdline:-$*}"
  printf_head "logr started $logrname on $(date +"%b %d, %Y at %H:%M")" \
    "Full command is: $cmdline" >>"$logdir/$stdout" >>"$logdir/$stdout"
  bash -c "$cmdline" >>"$logdir/$stdout"
  ;;

--silent | -si)
  shift 1
  cmdline="${cmdline:-$*}"
  printf_head "logr started $logrname on $(date +"%b %d, %Y at %H:%M")" \
    "Full command is: $cmdline" >>"$logdir/$stdout" >>"$logdir/$stdout"
  bash -c "$cmdline" >>"$logdir/$stdout" 2>>"$logdir/$stderr"
  ;;

*)
  cmdline="${cmdline:-$*}"
  printf_head "logr started $logrname on $(date +"%b %d, %Y at %H:%M")" \
    "Full command is: $cmdline" >>"$logdir/$stdout" >>"$logdir/$stdout"
  bash -c "$cmdline" >>"$logdir/$stdout" 2>>"$logdir/$stderr"
  ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# merge the 2 files and keep any formatting
if [ -f "$logdir/$stderr" ]; then
  cat "$logdir/$stderr" >>"$logdir/$stdout"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# close log file
if [ -f "$logdir/$stdout" ]; then
  printf_head "$logrname has ended on $(date +"%b %d, %Y at %H:%M")" >>"$logdir/$stdout"
  printf "\n\n" >>"$logdir/$stdout"
  cat "$logdir/$stdout" >>"$logdir/pretty/$stdout"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# remove formatting
if [ -d "$logdir" ]; then
  for upd in "$logdir/$stdout" "$logdir/$stderr"; do
    if [ -f "$upd" ]; then
      sed -i 's,\x1B\[[0-9;]*[a-zA-Z],,g' "$upd"
      sed -i '/^\#/d;/^$/d' "$upd"
      sed -i 's#\t##g' "$upd"
      sed -i 's###g' "$upd"
    fi
  done
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#
if cmd_exists mail && [ -s "$logdir/$stderr" ]; then
  MAILFROM="$fromemail"
  MAILRECIP="$toemail"
  MAILSUB="logr: $logrname"
  MAILHEADER="The $logrname script has been ran on $(hostname -s) and has failed.\nThe log can be found in $logdir/$stdout\nCheck the the log output below for info.\n"
  echo -e "$MAILHEADER\n$(cat "$logdir/$stderr")" | mail -r "$MAILFROM" -s "$MAILSUB" "$MAILRECIP" 2>/dev/null
  echo -e "
Email Sent On: $(date +"%b %d, %Y at %H:%M")\n
Mail From: $MAILFROM
Mail To: $MAILRECIP
Mail Subject: $MAILSUB
Log File: "$logdir/$stdout"
\n" >>$logdir/$logrname.sent
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -n "$DESKTOP_SESSION" ] && [ -s "$logdir/$stderr" ]; then
  notifications "$logrname completed" "The task has finished with errors: check the log"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#clean up
rm -Rf "$logdir/$stderr"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
