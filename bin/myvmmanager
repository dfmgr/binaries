#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="myvmmanager"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 021520211402-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : myvmmanager --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Monday, Feb 15, 2021 14:02 EST
# @File          : myvmmanager
# @Description   : Setup virtual machine manager
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MYTERMINAL_NOTIFICATIONS="no"
[ -f "$HOME/.config/myvmmanager/settings" ] && . "$HOME/.config/myvmmanager/settings"
MYVMMANAGER_NOTIFICATIONS="${MYVMMANAGER_NOTIFICATIONS:-yes}"

__config() {
  printf_green "Generating config file"
  __mkd "$HOME/.config/myvmmanager"
  echo -e '# Settings for myvmmanager
MYVMMANAGER="config"
VMMANAGER="'$VMMANAGER'"
MYVMMANAGER_NOTIFICATIONS="'$MYVMMANAGER_NOTIFICATIONS'"
  ' >"$HOME/.config/myvmmanager/settings"
  if [ -f "$HOME/.config/myvmmanager/settings" ]; then
    printf_green "File saved to: $HOME/.config/myvmmanager/settings"
    [ -n "$MYVMMANAGER_NOTIFICATIONS" ] && notifications "MyVMManager" "Config file saved to:\n$HOME/.config/myvmmanager/settings"
  fi
  exit
}

__create_link() {
  case "$1" in
  *)
    if [ ! -z "$2" ]; then
      shift 1
      if cmd_exists "$1"; then
        if [ "$VMMANAGER" = docker ] || [ "$VMMANAGER" = kubectl ]; then
          exit 0
        fi
        printf_green "Linking $HOME/.local/bin/myvmmanager to $1"
        __ln_sf "$(command -v $1)" "$HOME/.local/bin/myvmmanager"
        exit 0
      else
        printf_green "Linking $HOME/.local/bin/myvmmanager to $VMMANAGER"
        __ln_sf "$VMMANAGER" "$HOME/.local/bin/myvmmanager"
        exit 0
      fi
    fi
    ;;
  esac
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ "$MYVMMANAGER" != "config" ]; then
  if [ -n "$(command -v VirtualBox 2>/dev/null)" ]; then
    export VMMANAGER="VirtualBox"
  elif [ -n "$(command -v VMWare 2>/dev/null)" ]; then
    export VMMANAGER="VMWare"
  elif [ -n "$(command -v virt-manager 2>/dev/null)" ]; then
    export VMMANAGER="virt-manager"
  elif [ -n "$(command -v kubectl 2>/dev/null)" ]; then
    export VMMANAGER="kubectl"
  elif [ -n "$(command -v docker 2>/dev/null)" ]; then
    export VMMANAGER="docker"
  fi
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -z "$VMMANAGER" ]; then
  [ "$MYVMMANAGER_NOTIFICATIONS" = "yes" ] && notifications "MyVMManager" "No Virtual Machine Managers are installed"
  printf_newline "\n\n\n"
  printf_red "No Virtual Machine Managers are installed"
  printf_pause 1 "Press any key to exit this window"
  exit
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $1 in
*config)
  shift 1
  __config
  ;;

*create | *link)
  shift 1
  __create_link "$@"
  ;;

*)
  [ "$MYVMMANAGER_NOTIFICATIONS" = "yes" ] && notifications "MyVMManager" "Attempting to launch $VMMANAGER"
  if [ -f "$HOME/.local/bin/myvmmanager" ]; then
    ~/.local/bin/myvmmanager "$@" 2>/dev/null
  else
    if [ "$VMMANAGER" = docker ] || [ "$VMMANAGER" = kubectl ]; then
      run_in_term $VMMANAGER "$@" 2>/dev/null
    else
      $MYVMMANAGER "$@" 2>/dev/null
    fi
  fi
  ;;
esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
