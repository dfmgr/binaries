#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts
shopt -s extglob
trap '' SIGINT
trap '' SIGQUIT
trap '' SIGTSTP
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103200614-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : calc --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 06:14 EDT
# @File          : calc
# @Description   : wrapper for qalc/bc
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__usage() {
  printf_cyan 'Usage: "20 * 4/2 + 23 - 14"'
  printf_red "press q to exit"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ -z "$1" ] && __help
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ $# -ne 1 ]; then
  printf_info 'You must quote your params IE: calc "2 + 4" or "2*2"'
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
INPUT="$*"
OUTPUT="$(echo "$INPUT" | sed '/^$/d;s/[[:blank:]]//g')"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if cmd_exists qalc; then
  calc_app() { qalc "$OUTPUT"; }
elif cmd_exists bc; then
  calc_app() { echo "$INPUT = $(echo "$OUTPUT" | bc -q)"; }
else
  printf_exit "Can't find a calculator app!"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ "$1" = "--term" ]; then
  clear
  printf_newline "\n\n"
  __usage
  while :; do
    printf_read_input "2" "What is it you would like to solve? " "200" "INPUT"
    if [ "$INPUT" = "q" ] || [ -z "$INPUT" ]; then
      printf_newline "\n"
      break
    else
      clear
      printf_newline "\n\n\n"
      if [ "$INPUT" = "h" ] || [ "$INPUT" = "?" ]; then
        __usage
      else
        OUTPUT="$(echo "$INPUT" | sed '/^$/d;s/[[:blank:]]//g')"
        calc_app "$OUTPUT" | printf_readline "5"
      fi
      printf_newline
    fi
  done
  printf_newline
else
  calc_app | printf_readline "2"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
