#!/usr/bin/env bash

APPNAME="$(basename $0)"
SCRIPTDIR="$(dirname "${BASH_SOURCE[0]}")"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : hue
# @Created     : Mon, Dec 31, 2019, 00:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : home automation - philips hue script
# @Help        : http://hkionline.net/posts/using-phillips-hue-from-the-command-line
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main() {
  # variables
  unset hue_api_key hue_device hue_option
  local setopts="$1"
  local state="/tmp/automate_hue"
  local hue_device="$(__hostname2ip ${HUE_HUB_DEVICE:-$2})"
  local hue_device_name="${HUE_HUB_DEVICE:-$2}"
  local hue_api_key="${HUE_ACCESS_TOKEN}"
  local hue_group="${HUE_GROUP:-0}"
  local api_url="${HUE_HUB_API:-http://$hue_device/api/$hue_api_key/groups/$hue_group}"
  touch "$state"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  [ ! -z "$hue_api_key" ] || printf_exit "Please set your hue api key"
  [ ! -z "$hue_device" ] || printf_exit "Please enter the hostname of your hue hub"
  [ ! -z "$hue_device" ] || printf_exit "Please enter the the command you want to send to your hue"

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # functions
  return_ok() { curl -LSsq -X PUT "$api_url/action" -d '{"'$1'": '$2'}' | grep -q success && printf_green "Telling $hue_device_name to $3"; }

  _return_error() { printf_error "Failed to send the command: ${1}" && printf_newline "\n" && return 1; }

  _curlapi() { return_ok "$1" "$2" "$3" || _return_error "$4"; }
  getstate() { cat "$state"; }
  hue_on() {
    _curlapi "on" "true" "turn on the lights" "on" && echo on >"$state"
  }
  hue_off() {
    _curlapi "on" "false" "turn off the lights" "off" && echo off >"$state"

  }
  hue_toggle() {
    if [ "$(cat $state)" = on ]; then
      hue_off
    elif [ "$(cat $state)" = off ]; then
      hue_on
    fi
  }

  # - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  # main
  if [ ! -s "$state" ]; then echo on >"$state"; fi

  case "$setopts" in
  on | true | 0 | stop)
    hue_on
    ;;

  off | false | 1 | play)
    hue_off
    ;;

  toggle)
    hue_toggle
    ;;

  state)
    case "$2" in

    text) echo -e "$(getstate)" ;;

    json | *) echo -e '{"status":"'$(getstate)'"}' ;;
    esac

    ;;

  brightness | bright | b)
    shift 1
    [ "$1" -gt "255" ] && printf_exit "Enter a number between 0 and 255"
    hue_on >/dev/null && _curlapi "bri" "$1" "set the brightness to $1" '{"bri": '"$1"'}'
    ;;

  sat | s)
    shift 1
    [ "$1" -gt "255" ] && printf_exit "Enter a number between 0 and 255"
    hue_on >/dev/null && _curlapi "sat" "$1" "set the saturation to $1" '{"sat": '"$1"'}'
    ;;

  hue | h)
    shift 1
    hue_on >/dev/null && _curlapi "hue" "$1" "set the hue to $1" '{"hue": '"$1"'}'
    ;;

  effect | e)
    shift 1
    #curl -LSsq -X PUT "$api_url/action" -d '{"effect": "'$1'"}'
    hue_on >/dev/null && _curlapi "hue" "$1" "set the effect to $1" '{"effect": "'$1'"}'
    ;;

  info)
    printf_green "Getting info for group $hue_group from $hue_device_name"
    curl -LSs "$api_url" | jq
    ;;

  *)
    hue_toggle
    ;;
  esac

}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#execute
main "$@"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
