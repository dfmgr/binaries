#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : gen-nginx
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : Generate a nginx proxy host
# @Source      :
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__help() {
  printf_help "Usage: $APPNAME DOMAIN APPNAME REVPROXY Port Protocol"
  exit 0
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"
[ "$1" = "--help" ] && __help

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [[ $(id -u) -ne 0 ]]; then
  printf_exit "Please re-run this as root"
  exit
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__nginx_confdir() {
  if [ -d /etc/nginx/sites-enabled ]; then
    nginxconfdir="/etc/nginx/sites-enabled"
  elif [ -d "/etc/nginx/vhosts.d" ]; then
    nginxconfdir="/etc/nginx/conf/vhosts.d"
  else
    printf_custom_question "Where are your nginx server files located? "
    read -r nginxconfdir && echo
    if [[ ! -d "$nginxconfdir" ]]; then
      printf_exit "$nginxconfdir is an invalid directory"
      exit 1
    fi
  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__nginx_dom() {
  printf_custom_question "What is your domain name?"
  read -r NGINXDOMAIN && echo
  printf_custom_question "What is the name of the app?"
  read -r REVPROXYNAME && echo
  printf_custom_question "What should I proxy for?" [localhost]
  read -r REVPROXY && echo
  printf_custom_question "What is your APPs port?" [3000]
  read -r REVPROXY_PORT && echo
  printf_custom_question "What is the protocol http[s]?" [http]
  read -r REVPROXY_PROTO && echo

}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__nginx_conf() {
  if [ -d /etc/letsencrypt/live/domain ] || [ -d /etc/letsencrypt/live/$(hostname -f) ]; then
    cat <<EOF >$nginxconfdir/$NGINXDOMAIN.conf
#Define your primary service
#  upstream $REVPROXYNAME { server REVPROXY:$REVPROXY_PORT fail_timeout=0; }

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  server_name $NGINXDOMAIN;
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log info;
  keepalive_timeout 75 75;
  ssl_certificate /etc/letsencrypt/live/domain/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/domain/privkey.pem;
  add_header Strict-Transport-Security "max-age=7200";

  location / {
    proxy_redirect          http:// https://;
    proxy_pass              $REVPROXY_PROTO://$REVPROXY;
    proxy_ssl_verify        off;
    send_timeout            3600;
    client_max_body_size    1024M;
    proxy_connect_timeout   3600;
    proxy_send_timeout      3600;
    proxy_read_timeout      3600;
    proxy_http_version      1.1;
    proxy_request_buffering off;
    proxy_buffering         off;
    proxy_set_header        Host $host:$server_port;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_set_header        Upgrade $http_upgrade;
    proxy_set_header        Connection $connection_upgrade;
    }

#  location ~ ^/uri {
#    rewrite ^/(.*)$ /$1 break;
#    proxy_pass http://127.0.0.1:port/;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header Host $host;
#    proxy_redirect   off;
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }

#  location ~ ^/uri {
#    rewrite ^/(.*)$ http://$host:port/ permanent;
#    }

    include /etc/nginx/global.d/nginx-defaults.conf;
    include /etc/nginx/global.d/nginx-defaults.conf;
    include /etc/nginx/global.d/cgi-bin.conf;
    include /etc/nginx/global.d/munin.conf;
    include /etc/nginx/global.d/vnstats.conf;
    include /etc/nginx/global.d/others.conf;
}
EOF
  else
    cat <<EOF >$nginxconfdir/$NGINXDOMAIN.conf
#Define your primary service
#  upstream $REVPROXYNAME { server REVPROXY:$REVPROXY_PORT fail_timeout=0; }

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:50m;
  server_name $NGINXDOMAIN;
  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log info;
  keepalive_timeout 75 75;
  ssl_certificate /etc/ssl/CA/CasjaysDev/certs/localhost.crt;
  ssl_certificate_key /etc/ssl/CA/CasjaysDev/private/localhost.key;
  add_header Strict-Transport-Security "max-age=7200";

  location / {
    proxy_redirect          http:// https://;
    proxy_pass              $REVPROXY_PROTO://$REVPROXY;
    proxy_ssl_verify        off;
    send_timeout            3600;
    client_max_body_size    1024M;
    proxy_connect_timeout   3600;
    proxy_send_timeout      3600;
    proxy_read_timeout      3600;
    proxy_http_version      1.1;
    proxy_request_buffering off;
    proxy_buffering         off;
    proxy_set_header        Host $host:$server_port;
    proxy_set_header        X-Real-IP $remote_addr;
    proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header        X-Forwarded-Proto $scheme;
    proxy_set_header        Upgrade $http_upgrade;
    proxy_set_header        Connection $connection_upgrade;
    }

#  location ~ ^/uri {
#    rewrite ^/(.*)$ /$1 break;
#    proxy_pass http://127.0.0.1:port/;
#    proxy_set_header X-Real-IP $remote_addr;
#    proxy_set_header Host $host;
#    proxy_redirect   off;
#    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#    }

#  location ~ ^/uri {
#    rewrite ^/(.*)$ http://$host:port/ permanent;
#    }

    include /etc/nginx/global.d/nginx-defaults.conf;
    include /etc/nginx/global.d/nginx-defaults.conf;
    include /etc/nginx/global.d/cgi-bin.conf;
    include /etc/nginx/global.d/munin.conf;
    include /etc/nginx/global.d/vnstats.conf;
    include /etc/nginx/global.d/others.conf;
}
EOF
  fi
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

NGINXDOMAIN="${NGINXDOMAIN:-$1}"
REVPROXYNAME="${REVPROXYNAME:-$2}"
REVPROXY="${REVPROXY:-$3}"
REVPROXY_PORT="${REVPROXY_PORT:-$4}"
REVPROXY_PROTO="${REVPROXY_PROTO:-$5}"

if [ -z "$nginxconfdir" ]; then
  __nginx_confdir
fi

if [ -z "$NGINXDOMAIN" ]; then
  __nginx_dom
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

__nginx_conf

if [ -n "$(grep $REVPROXY /etc/hosts 2>/dev/null)" ]; then
  echo "127.0.0.1      $REVPROXY" >>/etc/hosts
fi

if [ -n "$(grep $NGINXDOMAIN /etc/hosts 2>/dev/null)" ]; then
  echo "127.0.0.1      $NGINXDOMAIN" >>/etc/hosts
fi

printf_green "Setting up $NGINXDOMAIN for $REVPROXYNAME on port: $REVPROXY_PORT"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#End
