#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="wallpapermgr"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 020720210125-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : wallpapermgr --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Sunday, Feb 07, 2021 01:25 EST
# @File          : wallpapermgr
# @Description   : Wallpaper installer and manager
# @TODO          : Refactor Code
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
wallpapermgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# main program
case "$1" in
*help | -*)
  __help
  ;;

list)
  echo "$LIST" | tr ' ' '\n' | printf_readline "6"
  ;;

search)
  shift 1
  run_install_search "$@"
  ;;

available)
  shift 1
  run_install_available
  exit $?
  ;;

remove)
  shift 1
  printf_red "Removing $* from ${WALLPAPERS//$HOME/'~'}"
  unset APPNAME
  declare -a LISTARRAY="$*"
  for rmf in ${LISTARRAY[*]}; do
    APPNAME="$rmf"
    installer_delete "$APPNAME"
    echo ""
  done
  ;;

update)
  shift 1
  unset APPNAME
  [ "$1" = "--all" ] && shift 1 && declare -a LISTARRAY="$LIST" || declare -a LISTARRAY="$*"
  printf_green "Updating the WallPapers in $WALLPAPERS"
  if [[ -n $* ]]; then
    run_install_update "$@"
  elif [[ -d "$USRUPDATEDIR" && -n "$(ls -A $USRUPDATEDIR 2>/dev/null)" ]]; then
    if [ "$(__count_files "$USRUPDATEDIR")" -ne 0 ]; then
      for upd in $(ls $USRUPDATEDIR 2>/dev/null); do
        APPNAME="$upd"
        run_install_update "$APPNAME"
      done
    else
      printf_yellow "There doesn't seem to be any wallpaper installed"
    fi
  fi
  ;;

install)
  shift 1
  unset APPNAME
  [ "$1" = "--all" ] && shift 1 && declare -a LISTARRAY="$LIST" || declare -a LISTARRAY="$*"
  if [ $# -eq 0 ]; then
    printf_green "Running the updater script" && wallpapermgr update
    exit $?
  else
    printf_green "Installing wallpapers to $WALLPAPERS"
    for ins in ${LISTARRAY[*]}; do
      APPNAME="$ins"
      run_install_init "$APPNAME"
    done
  fi
  ;;

cron)
  shift 1
  unset APPNAME
  declare -a LISTARRAY="$*"
  for cron in ${LISTARRAY[*]}; do
    APPNAME="$cron"
    __cron_updater "$APPNAME"
  done
  ;;

version)
  shift 1
  unset APPNAME
  declare -a LISTARRAY="$*"
  for ver in ${LISTARRAY[*]}; do
    APPNAME="$ver"
    run_install_version "$APPNAME"
  done
  ;;

*)
  __help
  ;;

esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# exit
if [ ! -z "$EXIT" ]; then exit "$EXIT"; fi

# end
