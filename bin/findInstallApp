#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : findInstallApp
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : Try to find and install the application
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - -- - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

run_pkmgr_findInstallApp() {
  cmd_exists pkmgr || return 1
  local pkg LISTARRAY
  declare -a LISTARRAY="$*"
  printf_green "Trying to find $* via pkmgr"
  for pkg in ${LISTARRAY[*]}; do
    cmd_exists "$pkg" || devnull pkmgr silent-install "$pkg" && return 0 || return 1
  done
}

run_dfmgr_findInstallApp() {
  cmd_exists dfmgr || return 1
  local pkg LISTARRAY
  declare -a LISTARRAY="$*"
  printf_green "Trying to find $* via dfmgr"
  for pkg in ${LISTARRAY[*]}; do
    cmd_exists "$pkg" || devnull dfmgr install"$pkg" && return 0 || return 1
  done
}

run_systemmgr_findInstallApp() {
  cmd_exists systemmgr || return 1
  local pkg LISTARRAY
  declare -a LISTARRAY="$*"
  printf_green "Trying to find $* via systemmgr"
  for pkg in ${LISTARRAY[*]}; do
    cmd_exists "$pkg" || devnull sudo systemmgr install"$pkg" && return 0 || return 1
  done
}

run_npm_findInstallApp() {
  cmd_exists npm || return 1
  local pkg LISTARRAY
  declare -a LISTARRAY="$*"
  printf_green "Trying to find $* via npm"
  for pkg in ${LISTARRAY[*]}; do
    cmd_exists "$pkg" || devnull sudo npm i -g "$1" && return 0 || return 1
  done
}

main() {
  run_pkmgr_findInstallApp "$@" ||
    run_dfmgr_findInstallApp "$@" 2>/dev/null ||
    run_systemmgr_findInstallApp "$@" ||
    run_npm_findInstallApp "$@" 2>/dev/null ||
    exit 1
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

main "$@"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
# vim: set expandtab noai
