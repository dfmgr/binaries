#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : mytorrent
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : setup torrent client
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
export MYTERMINAL_NOTIFICATIONS="no"
[ -f "$HOME/.config/mytorrent/settings" ] && . "$HOME/.config/mytorrent/settings"
MYTORRENT_NOTIFICATIONS="${MYTORRENT_NOTIFICATIONS:-yes}"

__config() {
  printf_green "Generating config file"
  __mkd "$HOME/.config/mytorrent"
  echo -e '# Settings for mytorrent
MYTORRENT="config"
TORRENT="'$TORRENT'"
MYTORRENT_NOTIFICATIONS="'$MYTORRENT_NOTIFICATIONS'"
  ' >"$HOME/.config/mytorrent/settings"
  if [ -f "$HOME/.config/mytorrent/settings" ]; then
    printf_green "File saved to: $HOME/.config/mytorrent/settings"
    [ -n "$MYTORRENT_NOTIFICATIONS" ] && notifications "MyTorrent" "Config file saved to:\n$HOME/.config/mytorrent/settings"
  fi
  exit
}

__create_link() {
  case "$1" in
  *)
    if [ ! -z "$2" ]; then
      shift 1
      if cmd_exists "$1"; then
        printf_green "Linking $HOME/.local/bin/mytorrent to $1"
        __ln_sf "$(command -v $1)" "$HOME/.local/bin/mytorrent"
        exit 0
      else
        printf_green "Linking $HOME/.local/bin/mytorrent to $TORRENT"
        __ln_sf "$TORRENT" "$HOME/.local/bin/mytorrent"
        exit 0
      fi
    fi
    ;;
  esac
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ "$MYTORRENT" != "config" ]; then
  if [ -n "$(command -v transmission-remote-gtk 2>/dev/null)" ]; then
    export TORRENT="transmission-remote-gtk"
  elif [ -n "$(command -v transmission-remote-cli 2>/dev/null)" ]; then
    export TORRENT="transmission-remote-cli"
  elif [ -n "$(command -v transmission-gtk 2>/dev/null)" ]; then
    export TORRENT="transmission-gtk"
  elif [ -n "$(command -v transmission-qt 2>/dev/null)" ]; then
    export TORRENT="transmission-qt"
  elif [ -n "$(command -v deluge 2>/dev/null)" ]; then
    export TORRENT="deluge"
  elif [ -n "$(command -v vuze 2>/dev/null)" ]; then
    export TORRENT="vuze"
  elif [ -n "$(command -v qbittorrent)" ]; then
    export TORRENT="qbittorrent"
  elif [ -n "$(command -v ktorrent 2>/dev/null)" ]; then
    export TORRENT="ktorrent"
  elif [ -n "$(command -v ctorrent 2>/dev/null)" ]; then
    export TORRENT="ctorrent"
  elif [ -n "$(command -v unworkable 2>/dev/null)" ]; then
    export TORRENT="unworkable"
  elif [ -n "$(command -v rtorrent 2>/dev/null)" ]; then
    export TORRENT="rtorrent"
  elif [ -n "$(command -v bitstormlite 2>/dev/null)" ]; then
    export TORRENT="bitstormlite"
  elif [ -f "/Applications/Transmission.app/Contents/MacOS/Transmission" ]; then
    export TORRENT="/Applications/Transmission.app/Contents/MacOS/Transmission"
  fi
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -z "$TORRENT" ]; then
  [ "$MYTORRENT_NOTIFICATIONS" = "yes" ] && notifications "MyTorrent" "No bittorrent clients are installed"
  printf_exit 1 1 "No bittorrent clients are installed"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $1 in
*config)
  shift 1
  __config
  ;;

*create | *link)
  shift 1
  __create_link "$@"
  ;;

*)
  [ "$MYTORRENT_NOTIFICATIONS" = "yes" ] && notifications "MyTorrent" "Attempting to launch $TORRENT"
  if [ "$TORRENT" = "transmission-remote-cli" ]; then
    myterminal -e "$TORRENT $*" 2>/dev/null
  else
    if [ -f "$HOME/.local/bin/mytorrent" ]; then
      exec ~/.local/bin/mytorrent "$@" 2>/dev/null &
    else
      exec $TORRENT "$@" 2>/dev/null &
    fi
  fi
  ;;
esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
