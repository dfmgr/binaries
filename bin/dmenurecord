#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103200639-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : dmenurecord --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 06:39 EDT
# @File          : dmenurecord
# @Description   : Ask for recording type via dmenu
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
DMENU_RECORD_EXT="${DMENU_RECORD_EXT:-.mkv}"
DMENU_RECORD_DATE="${DMENU_RECORD_DATE:-$(date '+%y%m%d-%H%M-%S')}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
updateicon() {
  echo "$1" >/tmp/recordingicon
  [ -n "${STATUSBAR:?}" ] && pkill -RTMIN+9 "${STATUSBAR:?}"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
killrecording() {
  recpid="$(cat /tmp/recordingpid)"
  # kill with SIGTERM, allowing finishing touches.
  kill -15 "$recpid"
  rm -f /tmp/recordingpid
  updateicon ""
  [ -n "${STATUSBAR:?}" ] && pkill -RTMIN+9 "${STATUSBAR:?}"
  # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
  sleep 3
  kill -9 "$recpid"
  exit
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
screencast() {
  ffmpeg -y \
    -f x11grab \
    -framerate 60 \
    -s "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
    -i $DISPLAY \
    -f alsa -i default \
    -r 30 \
    -c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
    "$HOME/screencast-$DMENU_RECORD_DATE$DMENU_RECORD_EXT" &
  echo $! >/tmp/recordingpid
  updateicon "‚è∫Ô∏èüéôÔ∏è"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
video() {
  ffmpeg \
    -f x11grab \
    -s "$(xdpyinfo | grep dimensions | awk '{print $2;}')" \
    -i $DISPLAY \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/video-$DMENU_RECORD_DATE$DMENU_RECORD_EXT" &
  echo $! >/tmp/recordingpid
  updateicon "‚è∫Ô∏è"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
webcamhidef() {
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 1920x1080 \
    "$HOME/webcam-$DMENU_RECORD_DATE$DMENU_RECORD_EXT" &
  echo $! >/tmp/recordingpid
  updateicon "üé•"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
webcam() {
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 640x480 \
    "$HOME/webcam-$DMENU_RECORD_DATE$DMENU_RECORD_EXT" &
  echo $! >/tmp/recordingpid
  updateicon "üé•"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
audio() {
  ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$DMENU_RECORD_DATE.flac" &
  echo $! >/tmp/recordingpid
  updateicon "üéôÔ∏è"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
askrecording() {
  choice=$(printf "screencast\\nvideo\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
  case "$choice" in
  screencast) screencast ;;
  audio) audio ;;
  video) video ;;
  webcam) webcam ;;
  "webcam (hi-def)") webcamhidef ;;
  esac
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
asktoend() {
  response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
    [ "$response" = "Yes" ] && killrecording
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "$1" in
screencast) screencast ;;
audio) audio ;;
video) video ;;
kill) killrecording ;;
*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
