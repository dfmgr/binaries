#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : logr
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : A logging script
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printf_color() { printf "%b" "$(tput setaf "$2" 2>/dev/null)" "$1" "$(tput sgr0 2>/dev/null)"; }
printf_green() { printf_color "$1" 2; }
printf_red() { printf_color "$1" 1; }
printf_exit() {
  printf_color "$1" 1
  exit $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# trace ERR through pipes
set -o pipefail
shopt -s extglob

logrname="${1:-$APPNAME}"
logdir="${LOGDIR:-~/.local/log}/logr"
date=$(date +'%m%d%Y-%H%M')
stdout="$1-$date.log"
stderr="$1-$date.err"
email=${EMAIL_ERROR:-root}
host="$(hostname -f)"
if [ "$1" = "-name" ]; then
  logrname=$2
  shift 2
fi
if [ "$1" = "cron" ]; then
  echo $logdir
  stdout="$2.log"
  stderr="$2.err"
  shift 1
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
mkdir -p "$logdir"

case "$1" in
--help | -h)
  __help
  ;;
--list | -l)
  ls "$logdir"
  ;;
--open | -o)
  cmd_exists myfilemanager && myfilemanager "$logdir" || vifm "$logdir" || thunar "$logdir"
  ;;
--clean | -c)
  rm -Rf "$logdir"
  rm -Rf "$HOME/.log" "$HOME/.err"
  mkdir -p "$logdir"
  ;;
-show | -sh)
  shift 1
  cmdline="$*"
  echo -e "$logrname started on $(date +"%b %d, %Y at %H:%M")"
  echo -e "Full command is: $*"
  "$cmdline"
  echo -e "App has ended on $(date +"%b %d, %Y at %H:%M")"
  ;;
--noerr | -noe)
  shift 1
  cmdline="$*"
  echo -e "logr started $logrname on $(date +"%b %d, %Y at %H:%M")"
  echo -e "Full command is: $cmdline"
  "$cmdline" 2>>"$logdir/$stderr"
  echo -e "App has ended on $(date +"%b %d, %Y at %H:%M")"
  ;;
--err | -e)
  shift 1
  cmdline="$*"
  echo -e "logr started $logrname $(date +"%b %d, %Y at %H:%M")" >>"$logdir/$stdout"
  echo -e "Full command is: $cmdline" >>"$logdir/$stdout"
  "$cmdline" >>"$logdir/$stdout"
  echo -e "App has ended on $(date +"%b %d, %Y at %H:%M")" >>"$logdir/$stdout"
  ;;
--silent | -si)
  shift 1
  cmdline="$*"
  echo -e "logr started $logrname $(date +"%b %d, %Y at %H:%M")" >>"$logdir/$stdout"
  echo -e "Full command is: $cmdline" >>"$logdir/$stdout"
  "$cmdline" >>"$logdir/$stdout" 2>>"$logdir/$stderr"
  echo -e "App has ended on $(date +"%b %d, %Y at %H:%M")" >>"$logdir/$stdout"
  ;;
*)
  cmdline="$*"
  echo -e "logr started $logrname $(date +"%b %d, %Y at %H:%M")" >>"$logdir/$stdout"
  echo -e "Full command is: $cmdline" >>"$logdir/$stdout"
  "$cmdline" >>"$logdir/$stdout" 2>>"$logdir/$stderr"
  echo -e "App has ended on $(date +"%b %d, %Y at %H:%M")" >>"$logdir/$stdout"
  ;;
esac

if [ -d "$logdir" ] && [ -n "$(ls -A $logdir/$logrname* 2>/dev/null)" ]; then
  for upd in $(ls $logdir/$logrname* 2>/dev/null); do
    file="$(ls -A $logdir/$upd 2>/dev/null)"
    if [ -f "$file" ]; then
      sed -i "s,\x1B\[[0-9;]*[a-zA-Z],,g" "$file"
      sed -i '/^$/d' "$file"
    fi
  done
fi

if cmd_exists mail && [ -s "$logdir/$stderr" ] && [ -n "$EMAIL_ERROR" ]; then
  MAILFROM="${MAILFROM:-root@$host}"
  MAILRECIP="${MAILRECIP:-$USER@$host}"
  MAILSUB="logr: $logrname"
  MAILHEADER="The $logrname script has been ran on $(hostname -s)"
  cat "$logdir/$stderr" | devnull mail -r "$MAILFROM" -s "$MAILSUB" "$MAILRECIP"
  echo -e "
Email Sent On: $(date +"%b %d, %Y at %H:%M")\n
Mail From: $MAILFROM
Mail Subject: $MAILSUB
Mail To: $MAILRECIP
Log File: "$logdir/$stderr"
" >$logdir/$logrname-$date.sent
fi

if [ -n "$DESKTOP_SESSION" ] && [ -s "$logdir/$stderr" ]; then
  notifications "$logrname completed" "The task has finished with errors: check the log"
fi

#clean up
if [ -s "$logdir/$stderr" ]; then
  cat "$logdir/$stderr" >>"$logdir/$stdout"
  rm -Rf "${logdir:?}/$stderr"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
