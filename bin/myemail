#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="myemail"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 022420211808-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : myemail --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Monday, Feb 15, 2021 14:02 EST
# @File          : myemail
# @Description   : Open e-mail client
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
MYTERMINAL_NOTIFICATIONS="no"
[ -f "$HOME/.config/myemail/settings" ] && . "$HOME/.config/myemail/settings"
MYEMAIL_NOTIFICATIONS="${MYEMAIL_NOTIFICATIONS:-yes}"

__config() {
  printf_green "Generating config file"
  __mkd "$HOME/.config/myemail"
  echo -e '# Settings for myemail
MYEMAIL="config"
EMAIL="'$EMAIL'"
MYEMAIL_NOTIFICATIONS="'$MYEMAIL_NOTIFICATIONS'"
  ' >"$HOME/.config/myemail/settings"
  if [ -f "$HOME/.config/myemail/settings" ]; then
    printf_green "File saved to: $HOME/.config/myemail/settings"
    [ -n "$MYEMAIL_NOTIFICATIONS" ] && notifications "MyEMail" "Config file saved to:\n$HOME/.config/myemail/settings"
  fi
  exit
}

__create_link() {
  case "$1" in
  *)
    if [ ! -z "$2" ]; then
      shift 1
      if cmd_exists "$1"; then
        printf_green "Linking $HOME/.local/bin/myemail to $1"
        __ln_sf "$(command -v $1)" "$HOME/.local/bin/myemail"
        exit 0
      else
        printf_green "Linking $HOME/.local/bin/myemail to $EMAIL"
        __ln_sf "$EMAIL" "$HOME/.local/bin/myemail"
        exit 0
      fi
    fi
    ;;
  esac
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ "$EMAIL" = "myemail" ] && unset EMAIL
if [ "$MYEMAIL" != "config" ]; then
  if [ -f "$(command -v thunderbird 2>/dev/null)" ]; then
    export EMAIL="thunderbird"
  elif [ -f "$(command -v evolution 2>/dev/null)" ]; then
    export EMAIL="evolution"
  elif [ -f "$(command -v clawsmail 2>/dev/null)" ]; then
    export EMAIL="clawsmail"
  elif [ -f "$(command -v geary 2>/dev/null)" ]; then
    export EMAIL="geary"
  elif [ -f "$(command -v neomutt 2>/dev/null)" ]; then
    export EMAIL="neomutt"
  elif [ -f "$(command -v mutt 2>/dev/null)" ]; then
    export EMAIL="mutt"
  elif [ -f "$(command -v kmail 2>/dev/null)" ]; then
    export EMAIL="kmail"
  elif [ -f "$(command -v emacs 2>/dev/null)" ]; then
    export EMAIL="emacs"
  elif [ -f "$(command -v gmail 2>/dev/null)" ]; then
    export EMAIL="mybrowser https://gmail.com"
  elif [ -f "$(command -v ymail 2>/dev/null)" ]; then
    export EMAIL="mybrowser https://ymail.com"
  elif [ -f "$(command -v sylpheed 2>/dev/null)" ]; then
    export EMAIL="sylpheed"
  fi
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -z "$EMAIL" ]; then
  [ "$MYEMAIL_NOTIFICATIONS" = "yes" ] && notifications "MyEMail" "No email clients are installed"
  printf_exit 1 1 "No email clients are installed"
fi
EMAIL_NAME="$(basename "$EMAIL" 2>/dev/null)"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $EMAIL in
  emacs | mutt | neomutt)
    EMAIL="myterminal -e $EMAIL"
    ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case $1 in
*config)
  shift 1
  __config
  ;;

*create | *link)
  shift 1
  __create_link "$@"
  ;;

*)
  [ "$MYEMAIL_NOTIFICATIONS" = "yes" ] && notifications "MyEMail" "Attempting to launch $EMAIL_NAME"
  if [ -f "$HOME/.local/bin/myemail" ]; then
    __exec ~/.local/bin/myemail "$@"
  else
    __exec $EMAIL "$@"
  fi
  ;;
esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
