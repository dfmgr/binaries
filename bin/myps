#!/usr/bin/env bash

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
PROG="myps"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 022420211808-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : myps --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Monday, Feb 15, 2021 14:02 EST
# @File          : myps
# @Description   : My processes
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ ! -z "$1" ] && NPROCESSES="$1" || NPROCESSES=10
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
echo "  CPU  MEM  CMD"
ps axr -o %cpu -o %mem -o comm | head -n$((NPROCESSES + 1)) | tail -n$NPROCESSES | while read -r line; do
  cpu=$(echo "${line[*]}" | awk '{print $1}')
  mem=$(echo "${line[*]}" | awk '{print $2}')
  cmd=$(echo "${line[*]}" | awk '{for(i=3;i<NF;i++){printf("%s ",$i,OFS=" ")}print $NF}')
  if echo "${cmd[*]}" | grep -q "/"; then
    cmd=$(echo "${cmd[*]}" | awk -F, '{n=split($1,tmp,"/")}{print tmp[n]}')
  fi
  printf "${GREEN}%5s%5s %s\n" "$cpu" "$mem" "$cmd${NC}"
done
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
