#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : clean-system
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : remove old logs
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
else
  mkdir -p "/tmp/CasjaysDev/functions"
  curl -LSs "$SCRIPTSFUNCTURL/$SCRIPTSFUNCTFILE" -o "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE" || exit 1
  . "/tmp/CasjaysDev/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ "$1" = "--version" ] && get_app_info "$APPNAME"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

printf_red "Cleaning old logs"
if [ "$1" != "" ]; then
  requiresudo rm -fv "/etc/cron.*/*logrotate*"
  requiresudo logrotate -fv "/etc/logrotate.conf"
  requiresudo rm -Rfv "/var/log/bandwidth"
  requiresudo rm -Rfv "/var/log/*.{0,1,2,3,4,5,6,7,8,9}"
  requiresudo rm -Rfv "/var/log/*/*.{0,1,2,3,4,5,6,7,8,9}"
  requiresudo rm -Rfv "/var/log/*/*/*.{0,1,2,3,4,5,6,7,8,9}"
  requiresudo rm -Rfv "/var/log/*.gz"
  requiresudo rm -Rfv "/var/log/*/*.gz"
  requiresudo rm -Rfv "/var/log/*/*/*.gz"
  requiresudo rm -Rfv "/var/log/*.old"
  requiresudo rm -Rfv "/var/log/*/*.old"
  requiresudo rm -Rfv "/var/log/*/*/*.old"

  if [ -f "$HOME/.config/logrotate/config" ]; then
    requiresudo logrotate -fv "$HOME/.config/logrotate/config"
  fi

else
  requiresudo rm -f "/etc/cron.*/*logrotate*" >/dev/null 2>&1
  requiresudo logrotate -f "/etc/logrotate.conf" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/bandwidth" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*.{0,1,2,3,4,5,6,7,8,9}" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*/*.{0,1,2,3,4,5,6,7,8,9}" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*/*/*.{0,1,2,3,4,5,6,7,8,9}" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*.gz" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*/*.gz" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*/*/*.gz" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*.old" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*/*.old" >/dev/null 2>&1
  requiresudo rm -Rf "/var/log/*/*/*.old" >/dev/null 2>&1

  if [ -f "$HOME/.config/logrotate/config" ]; then
    requiresudo logrotate -f "$HOME/.config/logrotate/config"
  fi
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
