#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : check-for-updates
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : check for package updates
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -e "/usr/local/bin/dmenupass" ]; then
  SUDO_ASKPASS="/usr/local/bin/dmenupass}"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

updatemess="You have updates available \nWould you like to update now?"
xmessageopts="-nearmouse -timeout 10 -geometry 500x200 -center"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ ! -d "$HOME/.local/tmp" ] || mkdir -p "$HOME/.local/tmp"
[ ! -f "$HOME/.local/tmp/update_check" ] || rm -Rf "$HOME/.local/tmp/update_check"

# run
#Arch update check
if [ -f /usr/bin/pacman ]; then
  if ! updates_arch=$(pacman -Qu 2>/dev/null | wc -l); then
    updates_arch=0
  fi
  #yay doesn't do sudo
  if [ -f /usr/bin/yay ]; then
    if ! updates_aur=$(yay -Qum 2>/dev/null | wc -l); then
      updates_aur=0
    fi
  fi
  updates=$(("$updates_arch" + "$updates_aur"))

#Debian update check
elif [ -f /usr/bin/apt ]; then
  if ! updates=$(sudo apt-get update >/dev/null && apt-get --just-print upgrade | grep "Inst " | wc -l); then
    updates=0
  fi

elif [ -f /usr/bin/dnf ]; then
  if ! updates=$(sudo dnf check-update -q | grep -v Security | wc -l); then
    updates=0
  fi

elif [ -f /usr/bin/yum ]; then
  if ! updates=$(sudo yum check-update -q | grep -v Security | wc -l); then
    updates=0
  fi
fi

if [ "$updates" -gt 0 ]; then
  echo " $updates"
else
  echo "0"
  rm -Rf "$HOME/.local/tmp/update_check"
  exit 0
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#if [ ! -f $HOME/.cache/update_nag ] && [ ! -z $DISPLAY ]; then
#DISPLAY=$DISPLAY xmessage -buttons Yes:0,No:1 -default Yes $xmessageopts --title "You have updates" "$updatemess" && \
#sleep 20 && #pkmgr silent update && \
#DISPLAY=$DISPLAY xmessage -buttons OK:0 -default Ok $xmessageopts --title "Done updating" "Update completed successfully" && \
#sleep 20
#DISPLAY=$DISPLAY xmessage -buttons Yes:0,No:1 -default Yes $xmessageopts --title "message" "Show this again?" && \
#sleep 20 ; ret=$? ; if [ "$ret" -ne 0 ]; then touch $HOME/.cache/update_nag ; fi
#fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [[ "$1" =~ "notify" ]]; then
  if [ "$updates" -gt 0 ]; then
    if [ -f /usr/local/bin/notifications ]; then
      if [ ! -f "$HOME/.local/tmp/update_check" ]; then
        echo "$updates" >"$HOME/.local/tmp/update_check"
        /usr/local/bin/notifications "System Updates:" "You have $updates update[s] avaliable"
      fi
    fi
  fi
else
  echo "$updates" >"$HOME/.local/tmp/update_check"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
