#!/usr/bin/env bash

APPNAME="mybluetooth"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 012920212145-git
# @Author        : Jason
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @Copyright     : Copyright (c) 2021, Casjays Developments
# @Created       : Friday Jan 29, 2021 21:45:36 EST
# @File          : mybluetooth
# @Description   : control bluetooth devices
# @Other         : work-in-progress
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set functions
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Set variables
MY_BT_DEVICE=${MY_BT_DEVICE:-0C:FC:83:99:BC:9A}
OPTIONS="$1" && shift 1
DEVICE="${1:-$MY_BT_DEVICE}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# check for needed applications
cmd_exists bluetoothctl || exit 1
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__ok_msg() { printf_green "$1" && return 0; }
__fail_msg() { printf_exit "1" "1" "$ICON_ERROR $1"; }

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application
case $OPTIONS in

on)
  shift 1
  bluetoothctl connect "$DEVICE" | grep -iq "Connection successful" >/dev/null 2>&1 && \
    __ok_msg "Connected" ||  __fail_msg "Connection failed"
  ;;

off)
  shift 1
  bluetoothctl disconnect "$DEVICE" | grep -iq "Successful disconnected" >/dev/null 2>&1 && \
    __ok_msg "Disconnected" ||  __fail_msg "Disconnection failed"
  ;;

discover)
  shift 1
  case $1 in
  on)
    shift 1
    bluetoothctl discoverable on | grep -iq "on succeeded" >/dev/null 2>&1 && \
    __ok_msg "Device is now in discoverable mode" ||  __fail_msg "Failed to initiate discovery mode"
    ;;

  off)
    shift 1
    bluetoothctl discoverable off | grep -iq "off succeeded" >/dev/null 2>&1 && \
    __ok_msg "Device has ended discoverable mode" ||  __fail_msg "Failed to exit discovery mode"
    ;;
  esac
  ;;

status)
  shift 1
  printf_green "Bluetooth status"
  bluetoothctl info "$DEVICE" | printf_readline "4"
  ;;

*)
  shift
  printf_green "Paired devices"
  bluetoothctl paired-devices | printf_readline "4"
  ;;

esac


# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end

