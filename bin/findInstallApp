#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 022420211808-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : findInstallApp
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : Try to find and install the application
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"
__requiresudo true
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
run_pkmgr_findInstallApp() {
  __cmd_exists pkmgr || return 1
  local pkg LISTARRAY
  declare -a LISTARRAY="$*"
  printf_green "Trying to find $* via pkmgr"
  for pkg in ${LISTARRAY[*]}; do
    __cmd_exists "$pkg" || __devnull2 pkmgr install "$pkg" && return 0 || return 1
  done
  return $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
run_dfmgr_findInstallApp() {
  __cmd_exists dfmgr || return 1
  local pkg LISTARRAY
  declare -a LISTARRAY="$*"
  printf_green "Trying to find $* via dfmgr"
  for pkg in ${LISTARRAY[*]}; do
    __cmd_exists "$pkg" || __devnull dfmgr install "$pkg" && return 0 || return 1
  done
  return $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
run_systemmgr_findInstallApp() {
  __cmd_exists systemmgr || return 1
  local pkg LISTARRAY
  declare -a LISTARRAY="$*"
  printf_green "Trying to find $* via systemmgr"
  for pkg in ${LISTARRAY[*]}; do
    __cmd_exists "$pkg" || __devnull sudo systemmgr install "$pkg" && return 0 || return 1
  done
  return $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
run_npm_findInstallApp() {
  cmd_exists npm || return 1
  local pkg LISTARRAY
  declare -a LISTARRAY="$*"
  printf_green "Trying to find $* via npm"
  for pkg in ${LISTARRAY[*]}; do
    __cmd_exists "$pkg" || __devnull sudo pkmgr npm install "$1" && return 0 || return 1
  done
  return $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main() {
  [ $# = 0 ] && return 0 ||
    run_pkmgr_findInstallApp "$@" ||
    run_dfmgr_findInstallApp "$@" ||
    run_systemmgr_findInstallApp "$@" ||
    run_npm_findInstallApp "$@" ||
    return $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
main "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# end
