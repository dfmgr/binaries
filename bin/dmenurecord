#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : dmenurecord
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : Ask for recording type via dmenu

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-applications.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

updateicon() {
  echo "$1" >/tmp/recordingicon
  pkill -RTMIN+9 "${STATUSBAR:?}"
}

killrecording() {
  recpid="$(cat /tmp/recordingpid)"
  # kill with SIGTERM, allowing finishing touches.
  kill -15 "$recpid"
  rm -f /tmp/recordingpid
  updateicon ""
  pkill -RTMIN+9 "${STATUSBAR:?}"
  # even after SIGTERM, ffmpeg may still run, so SIGKILL it.
  sleep 3
  kill -9 "$recpid"
  exit
}

screencast() {
  ffmpeg -y \
    -f x11grab \
    -framerate 60 \
    -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
    -i $DISPLAY \
    -f alsa -i default \
    -r 30 \
    -c:v libx264rgb -crf 0 -preset ultrafast -c:a flac \
    "$HOME/screencast-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! >/tmp/recordingpid
  updateicon "‚è∫Ô∏èüéôÔ∏è"
}

video() {
  ffmpeg \
    -f x11grab \
    -s $(xdpyinfo | grep dimensions | awk '{print $2;}') \
    -i $DISPLAY \
    -c:v libx264 -qp 0 -r 30 \
    "$HOME/video-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! >/tmp/recordingpid
  updateicon "‚è∫Ô∏è"
}

webcamhidef() {
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 1920x1080 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! >/tmp/recordingpid
  updateicon "üé•"
}

webcam() {
  ffmpeg \
    -f v4l2 \
    -i /dev/video0 \
    -video_size 640x480 \
    "$HOME/webcam-$(date '+%y%m%d-%H%M-%S').mkv" &
  echo $! >/tmp/recordingpid
  updateicon "üé•"
}

audio() {
  ffmpeg \
    -f alsa -i default \
    -c:a flac \
    "$HOME/audio-$(date '+%y%m%d-%H%M-%S').flac" &
  echo $! >/tmp/recordingpid
  updateicon "üéôÔ∏è"
}

askrecording() {
  choice=$(printf "screencast\\nvideo\\naudio\\nwebcam\\nwebcam (hi-def)" | dmenu -i -p "Select recording style:")
  case "$choice" in
  screencast) screencast ;;
  audio) audio ;;
  video) video ;;
  webcam) webcam ;;
  "webcam (hi-def)") webcamhidef ;;
  esac
}

asktoend() {
  response=$(printf "No\\nYes" | dmenu -i -p "Recording still active. End recording?") &&
    [ "$response" = "Yes" ] && killrecording
}

case "$1" in
screencast) screencast ;;
audio) audio ;;
video) video ;;
kill) killrecording ;;
*) ([ -f /tmp/recordingpid ] && asktoend && exit) || askrecording ;;
esac
