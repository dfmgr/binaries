#!/usr/bin/env bash

PROG="$(basename $0)"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : dfmgr
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : DotFiles ManaGeR
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
dfmgr_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
__gpg_import() {
  gpg --import "$1"/*.gpg 2>/dev/null
  gpg --import "$1"/*.sec 2>/dev/null
  gpg --import "$1"/*.asc 2>/dev/null
  gpg --import-ownertrust "$1"/*.trust 2>/dev/null
  return 0
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
df_personal() {
  shift 1
  dir="$HOME/.local/dotfiles/personal"
  if [ -f "$dir/install.sh" ]; then
    bash -c "$dir/install.sh"
    __getexitcode "Personal dotfiles has been updated"
  elif [ -f "$dir/update.sh" ]; then
    bash -c "$dir/update.sh"
    __getexitcode "Personal dotfiles has been updated"
  elif [ -d "$dir/.git" ]; then
    printf_purple "Updating your personal files"
    git -C "$dir" pull -q &&
      cp -Rfa "$dir"/etc/skel/. ~/ &&
      __gpg_import "$dir/tmp" &&
      __getexitcode "Personal dotfiles has been updated"
  else
    printf_red "Can't install your personal dotfiles"
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "$1" in
help | -*)
  shift 1
  __help
  ;;

list)
  shift 1
  run_install_list "$@"
  ;;

search)
  shift 1
  run_install_search "$@"
  ;;

available)
  shift 1
  run_install_available
  ;;

personal)
  shift 1
  df_personal
  ;;

update)
  shift 1
  unset APPNAME
  printf_green "Updating the configurations in $CONF"
  if [ $# -ne 0 ]; then
    if [ "$1" = "--all" ]; then shift 1 && declare -a LISTARRAY="$LIST"; else declare -a LISTARRAY="$*"; fi
    for ins in ${LISTARRAY[*]}; do
      run_install_update "$ins"
    done
  elif [[ -d "$USRUPDATEDIR" && -n "$(ls -A $USRUPDATEDIR 2>/dev/null)" ]]; then
    for upd in $(ls $USRUPDATEDIR 2>/dev/null); do
      run_install_update "$upd"
    done
  else
    printf_yellow "There doesn't seem to be any packages installed"
  fi
  exit $?
  ;;

install)
  shift 1
  unset APPNAME
  if [ $# -eq 0 ]; then
    dfmgr update
  else
    printf_green "Installing configurations to $CONF"
    [ "$1" = "--all" ] && shift 1 && declare -a LISTARRAY="$LIST" || declare -a LISTARRAY="$*"
    for ins in ${LISTARRAY[*]}; do
      APPNAME="$ins"
      run_install_init "$APPNAME"
    done
  fi
  exit $?
  ;;

cron)
  shift 1
  unset APPNAME
  declare -a LISTARRAY="$*"
  for cron in ${LISTARRAY[*]}; do
    APPNAME="$cron"
    cron_updater "$APPNAME"
  done
  ;;

version)
  shift 1
  unset APPNAME
  declare -a LISTARRAY="$*"
  for ver in ${LISTARRAY[*]}; do
    APPNAME="$ver"
    run_install_version "$APPNAME"
  done
  ;;

*)
  __help
  ;;

esac

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
