#!/usr/bin/env bash

APPNAME="$(basename $0)"
USER="${SUDO_USER:-${USER}}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version     : 010920210727-git
# @Author      : Jason
# @Contact     : casjaysdev@casjay.net
# @File        : myfilemanager
# @Created     : Wed, Aug 05, 2020, 02:00 EST
# @License     : WTFPL
# @Copyright   : Copyright (c) CasjaysDev
# @Description : setup filemanager
#
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Set functions

SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
SCRIPTSFUNCTDIR="${SCRIPTSAPPFUNCTDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

if [ -f "$PWD/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/functions/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/functions/$SCRIPTSFUNCTFILE"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

create_link() {
  case "$1" in
  *)
    if [ ! -z "$2" ]; then
      shift 1
      if cmd_exists "$1"; then
        printf_green "Linking $HOME/.local/bin/myfilemanager to $1"
        __ln_sf "$(command -v $1)" "$HOME/.local/bin/myfilemanager"
        exit 0
      else
        printf_green "Linking $HOME/.local/bin/myfilemanager to $FILEMANAGER"
        __ln_sf "$FILEMANAGER" "$HOME/.local/bin/myfilemanager"
        exit 0
      fi
    fi
    ;;
  esac
}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#if [ -z "$FILEMANAGER" ] && [ ! -f "$HOME/.local/bin/myfilemanager" ]; then
if [ -z $DESKTOP_SESSION ]; then
  if [ -f "$(command -v lf 2>/dev/null)" ]; then
    export FILEMANAGER="lf"
  elif [ -f "$(command -v vifm 2>/dev/null)" ]; then
    export FILEMANAGER="vifm"
  elif [ -f "$(command -v ranger 2>/dev/null)" ]; then
    export FILEMANAGER="ranger"
  elif [ -f "$(command -v cfiles 2>/dev/null)" ]; then
    export FILEMANAGER="cfiles"
  fi
else
  if [ -f "$(command -v open 2>/dev/null)" ]; then
    export FILEMANAGER="open"
  elif [ -f "$(command -v dolphin 2>/dev/null)" ]; then
    export FILEMANAGER="dolphin"
  elif [ -f "$(command -v thunar 2>/dev/null)" ]; then
    export FILEMANAGER="thunar"
  elif [ -f "$(command -v Thunar 2>/dev/null)" ]; then
    export FILEMANAGER="thunar"
  elif [ -f "$(command -v konqueror 2>/dev/null)" ]; then
    export FILEMANAGER="konqueror"
  elif [ -f "$(command -v spacefm 2>/dev/null)" ]; then
    export FILEMANAGER="spacefm"
  elif [ -f "$(command -v nemo 2>/dev/null)" ]; then
    export FILEMANAGER="nemo"
  elif [ -f "$(command -v pcmanfm 2>/dev/null)" ]; then
    export FILEMANAGER="pcmanfm"
  elif [ -f "$(command -v polo 2>/dev/null)" ]; then
    export FILEMANAGER="caja"
  elif [ -f "$(command -v caja 2>/dev/null)" ]; then
    export FILEMANAGER="nautilus"
  elif [ -f "$(command -v nautilus 2>/dev/null)" ]; then
    export FILEMANAGER="polo"
  elif [ -f "$(command -v polo 2>/dev/null)" ]; then
    export FILEMANAGER="polo"
  fi
fi
#fi

if [[ "$OSTYPE" == "darwin"* ]]; then
  export FILEMANAGER="open"
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

[ ! -z "$FILEMANAGER" ] || printf_help "No filemanagers are installed"
[ "$1" = "--create" ] && create_link "$@"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
notifications "MyTerminal" "Attempting to launch $TERMINAL"

if [ -f "$HOME/.local/bin/myfilemanager" ]; then
  __devnull2 ~/.local/bin/myfilemanager "$@"
else
  __devnull2 $FILEMANAGER "$@"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# end
