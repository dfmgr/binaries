#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
USER="${SUDO_USER:-${USER}}"
HOME="${USER_HOME:-${HOME}}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
#set opts

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version       : 202103200656-git
# @Author        : Jason Hempstead
# @Contact       : jason@casjaysdev.com
# @License       : WTFPL
# @ReadME        : emojis --help
# @Copyright     : Copyright: (c) 2021 Jason Hempstead, CasjaysDev
# @Created       : Saturday, Mar 20, 2021 06:56 EDT
# @File          : emojis
# @Description   : show and choose an emoji
# @TODO          :
# @Other         :
# @Resource      :
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Import functions
CASJAYSDEVDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}"
SCRIPTSFUNCTDIR="${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/functions"
SCRIPTSFUNCTFILE="${SCRIPTSAPPFUNCTFILE:-testing.bash}"
SCRIPTSFUNCTURL="${SCRIPTSAPPFUNCTURL:-https://github.com/dfmgr/installer/raw/master/functions}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ -f "$PWD/$SCRIPTSFUNCTFILE" ]; then
  . "$PWD/$SCRIPTSFUNCTFILE"
elif [ -f "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" ]; then
  . "$SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE"
else
  echo "Can not load the functions file: $SCRIPTSFUNCTDIR/$SCRIPTSFUNCTFILE" 1>&2
  exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# user system devenv dfmgr dockermgr fontmgr iconmgr pkmgr systemmgr thememgr wallpapermgr
user_install
__options "$@"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Emoji list
ARRAY="$(cat ${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/helpers/emojis/array)"
LIST="$(cat ${CASJAYSDEVDIR:-/usr/local/share/CasjaysDev/scripts}/helpers/emojis/list)"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
dmenu_emojis() {
  xclip -h 2>/dev/null || exit 1
  chosen=$(cut -d ';' -f1 $CASJAYSDEVDIR/helpers/emojis/emojis | dmenu -i -l 20 | sed "s/ .*//")
  [ "$chosen" != "" ] || exit
  if [ -n "$1" ]; then
    #xdotool key Shift+Insert
    xdotool key --clearmodifiers ctrl+shift+v
  else
    echo "$chosen" | tr -d '\n' | xclip -selection clipboard
    notifications "Emojify" "'$chosen' copied to clipboard." &
    xdotool key --clearmodifiers ctrl+shift+v
  fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
update_list() {
  emojify -l | awk '{print $2}' 2>/dev/null | tr '\n' ' ' | sed 's#-  emojify emojis: ##g'
  printf_newline "\n"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
case "$1" in
update | -update | --update)
  mkdir -p "$HOME/.local/bin"
  curl -LSs https://raw.githubusercontent.com/mrowa44/emojify/master/emojify -o "$HOME/.local/bin/emojify" 2>/dev/null && chmod +x "$HOME/.local/bin/emojify"
  [ $? -eq 0 ] && printf_green "Update Successful" || printf_red "Update Failed"
  if (sudo -vn && sudo -ln) 2>&1 | grep -v 'may not' >/dev/null; then
    sudo mv -f "$HOME/.local/bin/emojify" /usr/local/bin/emojify &&
      update_list >"$CASJAYSDEVDIR/helpers/emojis/list"
    [ $? -eq 0 ] && printf_green "System Update Successful" || printf_red "System Update Failed"
  fi
  ;;

dmenu)
  if cmd_exists dmenu; then
    dmenu_emojis "$@"
  else
    printf_exit "dmenu doesn't seem to be installed"
  fi
  ;;

search | -s* | --s*)
  shift 1
  var="$1"
  emojify --list | grep "$var"
  unset var
  ;;

print | -p* | --p* | -e* | --e* | echo | text)
  shift 1
  if [ $# -eq 0 ]; then
    if [ -p "/dev/stdin" ]; then
      message="$(</dev/stdin)"
    else
      __help
    fi
  else
    message="$*"
  fi
  emojify "$message" | printf_readline 2
  unset message
  ;;

list | -l* | --l*)
  printf_red "List of available emojis - Just copy and use"
  cat "$CASJAYSDEVDIR/helpers/emojis/list"
  unset var
  ;;

*) __help ;;
esac
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $?
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end
